{"version":3,"sources":["utils/svg/save.ts","utils/svg/convert.ts","hooks/useDrawing.ts","components/Geometry.ts","components/Draw.ts","components/History/useHistory.ts","components/GlobalContext.tsx","assets/icons/delete.svg","components/FileActions/FileActions.tsx","assets/icons/redo.svg","assets/icons/undo.svg","assets/icons/backspace-o.svg","components/RoundButton/RoundButton.tsx","components/History/HistoryPanel.tsx","components/Keyboard/Keyboard.tsx","components/PreventTouch.tsx","components/Settings/Settings.tsx","components/Tools/ToolEvent.ts","components/Tools/CursorTool.tsx","assets/icons/cursor.svg","components/Tools/DestroyTool.tsx","components/Tools/HistoryTool.tsx","components/Tools/PenTool.tsx","assets/icons/eraser.svg","assets/icons/pencil.svg","assets/icons/wall.svg","assets/icons/bulldozer.svg","components/Tools/Toolbox.tsx","components/Tools/WallTool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["downloadFile","content","fileName","contentType","a","document","createElement","file","Blob","type","href","URL","createObjectURL","download","click","remove","getSvgPathFromStroke","stroke","length","d","reduce","acc","i","arr","x0","y0","x1","y1","push","join","SVG_NS","setLineOptions","line","options","x2","y2","strokeWidth","strokeDashArray","setAttribute","toString","setRectOptions","rect","x","y","width","height","fill","setCircleOptions","ellipse","rx","ry","setTextOptions","element","angle","fontSize","text","textContent","findOrCreate","svg","key","groupId","getElementById","undefined","id","Date","getTime","createElementNS","dest","appendChild","getWallOrientation","p1","p2","dx","dy","Math","abs","distanceBetween","sqrt","guideLineMagnetSize","inRange","min","max","crossLines","l1","l2","n","onLine","x3","y3","x4","y4","q","sn","fn","drawSquare","ctx","xc","yc","size","drawRect","wallGroupId","wall","pointGroupId","point","editId","drawWallStart","gid","drawWallEnd","drawWall","color","createGroup","drawLine","drawLengths","cx","cy","degrees","riseOverRun","atan","PI","getAngle","alpha","topText","drawText","sin","cos","removeElement","bottomText","drawGuideLines","guideLines","guideLinesIds","map","guideLine","guideLineId","removeElements","child","includes","removeGuideLines","undoHistory","redoHistory","savePlan","plan","localStorage","setItem","JSON","stringify","drawPlan","drawing","walls","forEach","w","notes","drawPath","erasePlan","filter","defaultState","settings","defaultSettings","stylusMode","magneticMode","wallAlignmentMode","selectedTool","json","getItem","parse","loadSettings","pointerDown","scale","defaultPlan","console","log","loadPlan","useGlobalState","useForm","defaultValues","control","getValues","setValue","svgRef","useRef","useEffect","current","parent","parentElement","getBoundingClientRect","drawCircle","parentId","group","querySelector","predicate","childNodes","points","path","getStroke","smoothing","thinning","useDrawing","drawingRef","commandsHistory","useMemo","add","record","undo","item","pop","tool","addedWall","data","before","destroyedWalls","redo","after","clear","useHistory","interactiveRef","_path","GlobalContext","React","createContext","useGlobalContext","context","useContext","Error","FileActions","useWatch","name","exportSvg","useCallback","clone","cloneNode","svgDocType","implementation","createDocumentType","svgDoc","createDocument","replaceChild","documentElement","XMLSerializer","serializeToString","replace","toLocaleDateString","saveSvg","saveJson","loadJson","onLoad","input","onchange","e","files","reader","FileReader","readAsText","onload","readerEvent","target","result","uploadFile","parsedPlan","className","onClick","_excluded","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","title","titleId","props","xmlns","xmlnsXlink","viewBox","ref","ForwardRef","SvgRedo","SvgUndo","RoundButton","icon","children","clsx","HistoryPanel","confirm","SvgBackspaceO","ActionButton","value","Keyboard","onSubmit","useState","selectedInput","setSelectedInput","text1","setText1","text2","setText2","setText","handleSubmit","handleKeyDown","prev","substring","NumberButton","colSpan","tabIndex","onKeyDown","p","MiniKeyboard","selectedWall","style","top","left","find","PreventTouch","onTouchMove","preventDefault","addEventListener","passive","removeEventListener","Settings","saveSettings","checked","onChange","rel","registerTool","onStart","onMove","onEnd","mouseToToolEvent","pageX","pageY","buttons","changedTouches","identifier","onMouseDown","onMouseMove","onMouseUp","touchToToolEvent","touch","touches","Array","from","touchType","onTouchStart","onTouchEnd","cloneEditingWalls","CursorTool","_wallBefore","newSelectedWall","flatMap","l","pointProjection","editingPoints","guidLines","findAllGuideLines","closePoint","o","DestroyTool","start","destroyLine","crossIds","radius","crossId","startsWith","HistoryTool","lastEnd","lines","now","timeDiff","notMoved","tools","PenTool","getStrokeOptions","pressure","Number","force","toFixed","strokeOptions","SvgCursor","SvgEraser","SvgPencil","SvgWall","SvgBulldozer","Toolbox","ToolBoxItem","WallTool","wallIndex","findIndex","splice","cancel","wallId","parseInt","orientation","other","findAlignedGuideLines","App","globalContext","Provider","paddingInlineStart","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.722ee27d.chunk.js","sourcesContent":["export const saveSvg = function (svg: SVGSVGElement) {\n    var clone = svg.cloneNode(true);\n    var svgDocType = document.implementation.createDocumentType(\n        'svg',\n        '-//W3C//DTD SVG 1.1//EN',\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd',\n    );\n    var svgDoc = document.implementation.createDocument(\n        'http://www.w3.org/2000/svg',\n        'svg',\n        svgDocType,\n    );\n    svgDoc.replaceChild(clone, svgDoc.documentElement);\n    var svgData = new XMLSerializer().serializeToString(svgDoc);\n\n    downloadFile(\n        svgData.replace(/></g, '>\\n\\r<'),\n        `Plan ${new Date().toLocaleDateString()}.svg`,\n        'image/svg+xml',\n    );\n};\n\nexport function downloadFile(content: any, fileName: string, contentType: string) {\n    var a = document.createElement('a');\n    var file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n    a.remove();\n}\n\nexport function uploadFile(onLoad: (result?: string | null) => void) {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.onchange = (e) => {\n        if (!input.files || input.files.length === 0) return;\n        const file = input.files[0];\n        const reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = (readerEvent) => {\n            const content = readerEvent.target?.result as string | null;\n            onLoad(content);\n        };\n    };\n    input.click();\n}\n","export function getSvgPathFromStroke(stroke: number[][]) {\n    if (!stroke.length) return '';\n\n    const d = stroke.reduce(\n        (acc, [x0, y0], i, arr) => {\n            const [x1, y1] = arr[(i + 1) % arr.length];\n            acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n            return acc;\n        },\n        ['M', ...stroke[0], 'Q'],\n    );\n\n    d.push('Z');\n    return d.join(' ');\n}\n","import React, { useEffect, useRef } from 'react';\nimport { getStroke } from 'perfect-freehand';\nimport { getSvgPathFromStroke } from '../utils/svg/convert';\n\ntype IDrawIdOptions = {\n    id?: string;\n    groupId?: string;\n};\n\ntype IDrawStrokeOptions = {\n    stroke?: string;\n    strokeWidth?: number;\n    strokeDashArray?: string;\n};\ntype IDrawShapeOptions = {\n    fill?: string;\n} & IDrawStrokeOptions;\n\ntype IDrawLineOptions = {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n} & IDrawStrokeOptions &\n    IDrawIdOptions;\n\ntype IDrawRectOptions = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IDrawCircleOptions = {\n    x: number;\n    y: number;\n    rx: number;\n    ry: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IPathPoint = { x: number; y: number; pressure?: number };\n\nexport type IDrawPathOptions = {\n    points: IPathPoint[];\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\nexport type IDrawTextOptions = {\n    x: number;\n    y: number;\n    angle?: number;\n    fontSize?: number;\n    text: string;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\nexport type IDrawing = {\n    createGroup: (id?: string, groupId?: string) => string;\n    drawLine: (options: IDrawLineOptions) => string;\n    drawCircle: (options: IDrawCircleOptions) => string;\n    drawRect: (options: IDrawRectOptions) => string;\n    drawPath: (options: IDrawPathOptions) => string;\n    drawText: (options: IDrawTextOptions) => string;\n    removeElement: (id: string, groupId?: string) => void;\n    removeElements: (predicate: (element: Element) => boolean, groupId?: string) => void;\n};\n\ntype UseDrawingReturn = {\n    svgRef: React.RefObject<SVGSVGElement>;\n    drawing: IDrawing;\n};\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nfunction setLineOptions(line: Element, options: IDrawLineOptions) {\n    const { x1, x2, y1, y2, strokeWidth, stroke = '#000', strokeDashArray } = options;\n    line.setAttribute('x1', x1.toString());\n    line.setAttribute('y1', y1.toString());\n    line.setAttribute('x2', x2.toString());\n    line.setAttribute('y2', y2.toString());\n    line.setAttribute('stroke', stroke);\n    if (strokeWidth) line.setAttribute('stroke-width', strokeWidth.toString());\n    if (strokeDashArray) line.setAttribute('stroke-dasharray', strokeDashArray);\n}\n\nfunction setRectOptions(rect: Element, options: IDrawRectOptions) {\n    const { x, y, width, height, strokeWidth, stroke, fill } = options;\n    rect.setAttribute('x', x.toString());\n    rect.setAttribute('y', y.toString());\n    rect.setAttribute('width', width.toString());\n    rect.setAttribute('height', height.toString());\n    if (fill) rect.setAttribute('fill', fill);\n    if (stroke) rect.setAttribute('stroke', stroke);\n    if (strokeWidth) rect.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setCircleOptions(ellipse: Element, options: IDrawCircleOptions) {\n    const { x, y, rx, ry, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('cx', x.toString());\n    ellipse.setAttribute('cy', y.toString());\n    ellipse.setAttribute('rx', rx.toString());\n    ellipse.setAttribute('ry', ry.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setTextOptions(element: Element, options: IDrawTextOptions) {\n    const { x, y, angle = 0, fontSize = 25, text, stroke, strokeWidth, fill } = options;\n    element.setAttribute('x', x.toString());\n    element.setAttribute('y', (y + 9).toString());\n    element.setAttribute('style', `text-anchor: middle; font-size: ${fontSize}px`);\n    element.setAttribute('transform', `rotate(${angle}, ${x}, ${y})`);\n    element.textContent = text;\n    if (fill) element.setAttribute('fill', fill);\n    if (stroke) element.setAttribute('stroke', stroke);\n    if (strokeWidth) element.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction findOrCreate(\n    svg: SVGSVGElement | null,\n    key: string | undefined,\n    type: string,\n    groupId?: string,\n) {\n    let element = key ? svg?.getElementById(key) : undefined;\n    const id = key ?? `e${new Date().getTime()}`;\n    if (!element) {\n        element = document.createElementNS(SVG_NS, type);\n        element.setAttribute('id', id);\n        const dest = groupId ? svg?.getElementById(groupId) : svg;\n        dest?.appendChild(element);\n    }\n    return { element, id };\n}\n\nexport function useDrawing(scale: number = 1): UseDrawingReturn {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        const parent = svg?.parentElement;\n        if (!svg || !parent) return;\n        const { width, height } = parent!.getBoundingClientRect();\n        svg.setAttribute('viewBox', `0 0 ${width * scale} ${height * scale}`);\n        svg.setAttribute('version', '1.1');\n        svg.setAttribute('xmlns', SVG_NS);\n        svg.setAttribute('width', `${width * scale}`);\n        svg.setAttribute('height', `${height * scale}`);\n    }, [scale, svgRef]);\n\n    const drawing: IDrawing = {\n        drawLine: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'line',\n                options.groupId,\n            );\n            setLineOptions(element, options);\n            return id;\n        },\n        drawCircle: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'ellipse',\n                options.groupId,\n            );\n            setCircleOptions(element, options);\n            return id;\n        },\n        drawRect: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'rect',\n                options.groupId,\n            );\n            setRectOptions(element, options);\n            return id;\n        },\n        drawText: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'text',\n                options.groupId,\n            );\n            setTextOptions(element, options);\n            return id;\n        },\n        createGroup: (key, parentId) => {\n            const { id } = findOrCreate(svgRef.current, key, 'g', parentId);\n            return id;\n        },\n        removeElement: (id, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            const element = group?.querySelector(`#${id}`);\n            element?.remove();\n        },\n        removeElements: (predicate, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            group?.childNodes?.forEach((child) => {\n                if (predicate(child as Element)) {\n                    child.remove();\n                }\n            });\n        },\n\n        drawPath: (options) => {\n            const { id: key, points, groupId } = options;\n            const { element: path, id } = findOrCreate(svgRef.current, key, 'path', groupId);\n            if (options.stroke) path.setAttribute('fill', options.stroke);\n            path.setAttribute(\n                'd',\n                getSvgPathFromStroke(\n                    getStroke(points, {\n                        // TODO: configure drawing options\n                        size: options.strokeWidth,\n                        smoothing: 0.5,\n                        thinning: 0.5,\n                    }),\n                ),\n            );\n            return id;\n        },\n    };\n\n    return {\n        svgRef,\n        drawing,\n    };\n}\n","import { Line, Point } from './GlobalContext';\n\nexport type WallOrientation = 'horizontal' | 'vertical';\n\nexport function getWallOrientation({ p1, p2 }: { p1: Point; p2: Point }): WallOrientation {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    if (Math.abs(dx) > Math.abs(dy)) {\n        return 'horizontal';\n    }\n    return 'vertical';\n}\n\nexport function getAngle(p1: Point, p2: Point) {\n    const x1 = p1.x;\n    const y1 = p1.y;\n    const x2 = p2.x;\n    const y2 = p2.y;\n    let degrees;\n    if (x2 - x1 === 0) {\n        degrees = y2 > y1 ? 90 : 270;\n    } else {\n        const riseOverRun = (y2 - y1) / (x2 - x1);\n        const radians = Math.atan(riseOverRun);\n        degrees = radians * (180 / Math.PI);\n\n        if (x2 - x1 < 0 || y2 - y1 < 0) degrees += 180;\n        if (x2 - x1 > 0 && y2 - y1 < 0) degrees -= 180;\n        if (degrees < 0) degrees += 360;\n    }\n    return degrees;\n}\n\nexport function distanceBetween(p1: Point, p2: Point): number {\n    return Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n}\n\nexport const guideLineMagnetSize = 20;\n\nexport type GuideLine = {\n    wall: Line;\n    point: Point;\n};\n\nexport function findAlignedGuideLines(walls: Line[], wall: Line): GuideLine[] {\n    const orientation = getWallOrientation(wall);\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (wall === w) return;\n        const other = w.p1.x === w.p2.x ? 'vertical' : w.p1.y === w.p2.y ? 'horizontal' : 'other';\n        if (orientation === 'horizontal' && other === 'horizontal') {\n            if (Math.abs(wall.p2.x - w.p1.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p1.x;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.x - w.p2.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p2.x;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        } else if (orientation === 'vertical' && other === 'vertical') {\n            if (Math.abs(wall.p2.y - w.p1.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p1.y;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.y - w.p2.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p2.y;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        }\n    });\n    return guidLines;\n}\n\nexport function findAllGuideLines(walls: Line[], points: Point[], point: Point): GuideLine[] {\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (Math.abs(w.p1.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.x = w.p1.x;\n            });\n        }\n        if (Math.abs(w.p1.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.y = w.p1.y;\n            });\n        }\n\n        if (Math.abs(w.p2.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.x = w.p2.x;\n            });\n        }\n        if (Math.abs(w.p2.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.y = w.p2.y;\n            });\n        }\n    });\n    return guidLines;\n}\n\nfunction inRange(x: number, x1: number, x2: number) {\n    return Math.min(x1, x2) <= x && x <= Math.max(x1, x2);\n}\n\nexport function crossLines(l1: Line, l2: Line, onLine: boolean = false) {\n    const x1 = l1.p1.x;\n    const y1 = l1.p1.y;\n    const x2 = l1.p2.x;\n    const y2 = l1.p2.y;\n    const x3 = l2.p1.x;\n    const y3 = l2.p1.y;\n    const x4 = l2.p2.x;\n    const y4 = l2.p2.y;\n    let n: number;\n    if (y2 - y1 !== 0) {\n        const q = (x2 - x1) / (y1 - y2);\n        const sn = x3 - x4 + (y3 - y4) * q;\n        if (!sn) {\n            return null;\n        }\n        const fn = x3 - x1 + (y3 - y1) * q;\n        n = fn / sn;\n    } else {\n        if (!(y3 - y4)) {\n            return null;\n        }\n        n = (y3 - y1) / (y3 - y4);\n    }\n    const x = x3 + (x4 - x3) * n;\n    const y = y3 + (y4 - y3) * n;\n\n    if (onLine) {\n        if (inRange(x, x1, x2) && inRange(x, x3, x4) && inRange(y, y1, y2) && inRange(y, y3, y4)) {\n            return { x, y };\n        }\n        return null;\n    }\n\n    return { x, y };\n}\n\nexport function pointProjection(p: Point, l: Line, onLine: boolean = false) {\n    const x1 = l.p1.x;\n    const y1 = l.p1.y;\n    const x2 = l.p2.x;\n    const y2 = l.p2.y;\n    const x3 = p.x;\n    const y3 = p.y;\n\n    const x =\n        (x1 * x1 * x3 -\n            2 * x1 * x2 * x3 +\n            x2 * x2 * x3 +\n            x2 * (y1 - y2) * (y1 - y3) -\n            x1 * (y1 - y2) * (y2 - y3)) /\n        ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\n    const y =\n        (x2 * x2 * y1 +\n            x1 * x1 * y2 +\n            x2 * x3 * (y2 - y1) -\n            x1 * (x3 * (y2 - y1) + x2 * (y1 + y2)) +\n            (y1 - y2) * (y1 - y2) * y3) /\n        ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\n    if (onLine) {\n        if (inRange(x, x1, x2) && inRange(y, y1, y2)) {\n            return { x, y };\n        }\n        return null;\n    }\n\n    return { x, y };\n}\n\nexport function rotateVector(v: { x: number; y: number }, angle: number) {\n    const cs = Math.cos(angle);\n    const sn = Math.sin(angle);\n    const rx = v.x * cs - v.y * sn;\n    const ry = v.x * sn + v.y * cs;\n    return { x: rx, y: ry };\n}\n\nexport function normalizeVector(v: { x: number; y: number }) {\n    const length = Math.sqrt(v.x * v.x + v.y * v.y);\n    if (length === 0) return v;\n    return { x: v.x / length, y: v.y / length };\n}\n","import { IDrawing } from '../hooks/useDrawing';\nimport { getAngle, GuideLine } from './Geometry';\nimport { Line, Point, Wall } from './GlobalContext';\n\nexport type DrawEvent = { x: number; y: number; id: number };\n\nexport type DrawPoint = Point & {\n    pressure?: number;\n    color?: string;\n};\n\ntype Context = IDrawing;\n\nexport function drawSquare(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    size: number,\n    fill?: string,\n) {\n    ctx.drawRect({\n        id,\n        groupId,\n        x: xc - size / 2,\n        y: yc - size / 2,\n        width: size,\n        height: size,\n        fill,\n    });\n}\n\nexport function drawCircle(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    radius: number,\n    fill?: string,\n    stroke?: string,\n) {\n    ctx.drawCircle({ id, groupId, x: xc, y: yc, rx: radius, ry: radius, fill, stroke });\n}\n\nexport const wallPointSize = 15;\nexport const wallCircleRadius = 20;\n\nexport const wallGroupId = (wall: Line) => `w${wall.id}`;\nexport const pointGroupId = (point: Point) => `p${point.editId}`;\n\nexport function drawWallStart(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}s`, gid, wall.p1.x, wall.p1.y, wallPointSize, 'green');\n}\nexport function drawWallEnd(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}e`, gid, wall.p2.x, wall.p2.y, wallPointSize, 'green');\n}\n\nexport function drawWall(ctx: Context, wall: Wall, color = '#000') {\n    const gid = ctx.createGroup(wallGroupId(wall), 'walls');\n    // drawCircle(ctx, `w${wall.id}c1`, gid, wall.p1.x, wall.p1.y, wallCircleRadius, 'none', '#000');\n    // drawCircle(ctx, `w${wall.id}c2`, gid, wall.p2.x, wall.p2.y, wallCircleRadius, 'none', '#000');\n    ctx.drawLine({\n        groupId: gid,\n        id: `w${wall.id}l`,\n        x1: wall.p1.x,\n        y1: wall.p1.y,\n        x2: wall.p2.x,\n        y2: wall.p2.y,\n        stroke: color,\n    });\n    drawWallStart(ctx, wall);\n    drawWallEnd(ctx, wall);\n    drawLengths(ctx, wall, color);\n}\n\nfunction drawLengths(ctx: Context, wall: Wall, color: string) {\n    const gid = wallGroupId(wall);\n\n    const cx = (wall.p1.x + wall.p2.x) / 2;\n    const cy = (wall.p1.y + wall.p2.y) / 2;\n    let angle = getAngle(wall.p1, wall.p2);\n    if (angle >= 90 && angle < 270) angle -= 180;\n    let alpha = -(angle * Math.PI) / 180;\n\n    if (wall.topText) {\n        ctx.drawText({\n            groupId: gid,\n            id: `w${wall.id}t1`,\n            text: `${wall.topText}`,\n            x: cx - 18 * Math.sin(alpha),\n            y: cy - 18 * Math.cos(alpha),\n            fill: color,\n            angle,\n        });\n    } else {\n        ctx.removeElement(`w${wall.id}t1`, gid);\n    }\n\n    if (wall.bottomText) {\n        ctx.drawText({\n            groupId: gid,\n            id: `w${wall.id}t2`,\n            text: `${wall.bottomText}`,\n            x: cx + 18 * Math.sin(alpha),\n            y: cy + 18 * Math.cos(alpha),\n            fill: color,\n            angle,\n        });\n    } else {\n        ctx.removeElement(`w${wall.id}t2`, gid);\n    }\n}\n\nexport function drawGuideLines(ctx: Context, point: Point, guideLines: GuideLine[]) {\n    const groupId = ctx.createGroup(pointGroupId(point), 'guide');\n    const guideLinesIds = guideLines.map((guideLine) => {\n        const guideLineId = `p${point.editId}g${guideLine.wall.id}`;\n        ctx.drawLine({\n            groupId,\n            id: guideLineId,\n            x1: point.x,\n            y1: point.y,\n            x2: guideLine.point.x,\n            y2: guideLine.point.y,\n            strokeDashArray: '10 10',\n        });\n        return guideLineId;\n    });\n    ctx.removeElements((child) => !guideLinesIds.includes((child as Element).id), groupId);\n}\n\nexport function removeGuideLines(ctx: Context, point: Point) {\n    ctx.removeElement(pointGroupId(point), 'guide');\n}\n","import { useMemo } from 'react';\nimport { IDrawing, IDrawPathOptions } from '../../hooks/useDrawing';\nimport { drawWall, wallGroupId } from '../Draw';\nimport { IPlan, savePlan, Wall } from '../GlobalContext';\n\nexport type IHistory = {\n    add: (record: IHistoryRecord) => void;\n    undo: () => void;\n    redo: () => void;\n    clear: () => void;\n};\n\nexport type IWallHistoryRecord = {\n    tool: 'wall';\n    data: {\n        addedWall: Wall;\n    };\n};\n\nexport type ICursorHistoryRecord = {\n    tool: 'cursor';\n    data: {\n        before: Wall[];\n        after: Wall[];\n    };\n};\n\nexport type IPencilHistoryRecord = {\n    tool: 'pencil' | 'eraser';\n    data: {\n        options: IDrawPathOptions;\n    };\n};\n\nexport type IDestroyHistoryRecord = {\n    tool: 'destroy';\n    data: {\n        destroyedWalls: Wall[];\n    };\n};\n\nexport type ITextHistoryRecord = {\n    tool: 'text';\n    data: {\n        id: string;\n        before?: {\n            topText?: string;\n            bottomText?: string;\n        };\n        after?: {\n            topText?: string;\n            bottomText?: string;\n        };\n    };\n};\n\nexport type IHistoryRecord =\n    | IWallHistoryRecord\n    | ICursorHistoryRecord\n    | IPencilHistoryRecord\n    | IDestroyHistoryRecord\n    | ITextHistoryRecord;\n\nlet undoHistory: IHistoryRecord[] = [];\nlet redoHistory: IHistoryRecord[] = [];\n\nexport function useHistory(drawing: IDrawing, plan: IPlan): IHistory {\n    const history: IHistory = useMemo(\n        () => ({\n            add: (record) => {\n                undoHistory.push(record);\n                redoHistory = [];\n                savePlan(plan);\n            },\n\n            undo: () => {\n                const item = undoHistory.pop();\n                if (!item) return;\n                redoHistory.push(item);\n                switch (item.tool) {\n                    case 'wall':\n                        const { addedWall } = item?.data;\n                        plan.walls = plan.walls.filter((w) => w !== addedWall);\n                        drawing.removeElement(wallGroupId(addedWall));\n                        break;\n                    case 'cursor':\n                        const { before } = item.data;\n                        before.forEach((wall) => {\n                            plan.walls\n                                .filter((w) => w.id === wall.id)\n                                .forEach((w) => {\n                                    w.p1 = wall.p1;\n                                    w.p2 = wall.p2;\n                                });\n                            drawWall(drawing, wall);\n                        });\n                        break;\n                    case 'pencil':\n                    case 'eraser':\n                        const { options } = item.data;\n                        if (options.id) {\n                            plan.notes = plan.notes.filter((n) => n.id !== options.id);\n                            drawing.removeElement(options.id);\n                        }\n                        break;\n                    case 'destroy':\n                        const { destroyedWalls } = item.data;\n                        destroyedWalls.forEach((w) => {\n                            plan.walls.push(w);\n                            drawWall(drawing, w);\n                        });\n                        break;\n                    case 'text': {\n                        const { id, before } = item.data;\n                        plan.walls\n                            .filter((w) => w.id === id)\n                            .forEach((w) => {\n                                w.topText = before?.topText;\n                                w.bottomText = before?.bottomText;\n                                drawWall(drawing, w);\n                            });\n                        break;\n                    }\n                }\n                savePlan(plan);\n            },\n\n            redo: () => {\n                const item = redoHistory.pop();\n                if (!item) return;\n                undoHistory.push(item);\n                switch (item.tool) {\n                    case 'wall':\n                        const { addedWall } = item?.data;\n                        plan.walls.push(addedWall);\n                        drawWall(drawing, addedWall);\n                        break;\n                    case 'cursor':\n                        const { after } = item.data;\n                        after.forEach((wall) => {\n                            plan.walls\n                                .filter((w) => w.id === wall.id)\n                                .forEach((w) => {\n                                    w.p1 = wall.p1;\n                                    w.p2 = wall.p2;\n                                    drawWall(drawing, w);\n                                });\n                        });\n                        break;\n                    case 'pencil':\n                    case 'eraser':\n                        const { options } = item.data;\n                        plan.notes.push(options);\n                        drawing.drawPath(options);\n                        break;\n                    case 'destroy':\n                        const { destroyedWalls } = item.data;\n                        destroyedWalls.forEach((w) => drawing.removeElement(wallGroupId(w)));\n                        plan.walls = plan.walls.filter((w) => !destroyedWalls.includes(w));\n                        break;\n                    case 'text': {\n                        const { id, after } = item.data;\n                        plan.walls\n                            .filter((w) => w.id === id)\n                            .forEach((w) => {\n                                w.topText = after?.topText;\n                                w.bottomText = after?.bottomText;\n                                drawWall(drawing, w);\n                            });\n                        break;\n                    }\n                }\n                savePlan(plan);\n            },\n\n            clear: () => {\n                undoHistory = [];\n                redoHistory = [];\n            },\n        }),\n        [plan, drawing],\n    );\n    return history;\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Control, useForm, UseFormGetValues, UseFormSetValue } from 'react-hook-form';\nimport { IDrawing, IDrawPathOptions, useDrawing } from '../hooks/useDrawing';\nimport { drawWall, wallGroupId } from './Draw';\nimport { IHistory, useHistory } from './History/useHistory';\n\nexport type IToolType = 'wall' | 'cursor' | 'move' | 'pencil' | 'eraser' | 'destroy';\n\nexport type Point = {\n    x: number;\n    y: number;\n    editId?: number;\n};\n\nexport type Line = {\n    id: string;\n    p1: Point;\n    p2: Point;\n    editId?: number;\n};\n\nexport type Wall = Line & {\n    topText?: string;\n    bottomText?: string;\n};\n\nexport type IPlan = {\n    walls: Wall[];\n    notes: IDrawPathOptions[];\n};\n\nexport type ISettings = {\n    stylusMode: boolean;\n    magneticMode: boolean;\n    wallAlignmentMode: boolean;\n    selectedTool: IToolType;\n};\n\nexport type IGlobalState = {\n    settings: ISettings;\n    pointerDown: boolean;\n    selectedWall?: Wall;\n    scale: number;\n    plan: IPlan;\n};\n\nexport type IGlobalContext = {\n    drawing: IDrawing;\n    drawingRef: React.RefObject<SVGSVGElement>;\n    interactiveRef: React.RefObject<HTMLDivElement>;\n\n    control: Control<IGlobalState, object>;\n    getValues: UseFormGetValues<IGlobalState>;\n    setValue: UseFormSetValue<IGlobalState>;\n\n    commandsHistory: IHistory;\n};\n\nexport function saveSettings(settings: ISettings) {\n    localStorage.setItem('settings', JSON.stringify(settings));\n}\n\nexport function loadSettings() {\n    const defaultSettings = {\n        stylusMode: true,\n        magneticMode: true,\n        wallAlignmentMode: true,\n        selectedTool: 'wall',\n    };\n    try {\n        const json = localStorage.getItem('settings');\n        if (!json) return defaultSettings;\n        return JSON.parse(json);\n    } catch {}\n    return defaultSettings;\n}\n\nexport function savePlan(plan: IPlan) {\n    // console.log('Store plan', plan);\n    localStorage.setItem('plan', JSON.stringify(plan));\n}\n\nexport function loadPlan(): IPlan {\n    const defaultPlan = {\n        walls: [],\n        notes: [],\n    };\n    try {\n        const json = localStorage.getItem('plan');\n        if (!json) return defaultPlan;\n        const plan = JSON.parse(json);\n        console.log('Restore plan', plan);\n        return plan;\n    } catch {\n        console.log('Failed to restore plan');\n    }\n    return defaultPlan;\n}\n\nexport function drawPlan(drawing: IDrawing, plan: IPlan | undefined) {\n    plan?.walls?.forEach((w) => drawWall(drawing, w));\n    plan?.notes?.forEach((n) => drawing.drawPath(n));\n}\n\nexport function erasePlan(drawing: IDrawing, plan: IPlan) {\n    plan.walls?.forEach((w) => drawing.removeElement(wallGroupId(w)));\n    plan.notes?.filter((n) => n.id).forEach((n) => drawing.removeElement(n.id!));\n}\n\nconst defaultState: IGlobalState = {\n    settings: loadSettings(),\n    pointerDown: false,\n    scale: 2,\n    plan: loadPlan(),\n};\n\nexport function useGlobalState(): IGlobalContext {\n    const { control, getValues, setValue } = useForm<IGlobalState>({\n        defaultValues: defaultState,\n    });\n    const scale = defaultState.scale;\n    const plan = defaultState.plan;\n    console.log('useGlobalState', plan);\n\n    const { svgRef: drawingRef, drawing } = useDrawing(scale);\n    const commandsHistory = useHistory(drawing, plan);\n\n    useEffect(() => {\n        drawPlan(drawing, defaultState.plan);\n    }, [drawing]);\n\n    const interactiveRef = useRef<HTMLDivElement>(null);\n    const context: IGlobalContext = {\n        drawing,\n        drawingRef,\n        interactiveRef,\n\n        control,\n        getValues,\n        setValue,\n\n        commandsHistory,\n    };\n    return context;\n}\n\nexport const GlobalContext = React.createContext<IGlobalContext>(null!);\n\nexport const useGlobalContext = () => {\n    const context = React.useContext<IGlobalContext>(GlobalContext);\n    if (context === null) {\n        throw new Error('useGlobalContext must be used within an GlobalContext.Provider');\n    }\n    return context;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19C6,20.1 6.9,21 8,21H16C17.1,21 18,20.1 18,19V7H6V19Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.9a9cf5c8.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { downloadFile, saveSvg, uploadFile } from '../../utils/svg/save';\nimport { erasePlan, drawPlan, IPlan, savePlan, useGlobalContext } from '../GlobalContext';\nimport './FileActions.css';\n\ntype IFileActionsProps = {};\n\nexport const FileActions: React.FC<IFileActionsProps> = () => {\n    const { drawing, drawingRef, control } = useGlobalContext();\n    const plan = useWatch({ control, name: 'plan' });\n\n    const exportSvg = useCallback(() => saveSvg(drawingRef.current!), [drawingRef]);\n\n    const saveJson = useCallback(() => {\n        const json = JSON.stringify(plan);\n        downloadFile(json, `Plan ${new Date().toLocaleDateString()}.json`, 'text/plain');\n    }, [plan]);\n\n    const loadJson = useCallback(() => {\n        uploadFile((json) => {\n            try {\n                if (!json) return;\n                erasePlan(drawing, plan);\n                const parsedPlan = JSON.parse(json) as IPlan;\n                console.log('Load JSON', parsedPlan);\n                plan.walls = parsedPlan.walls ?? [];\n                plan.notes = parsedPlan.notes ?? [];\n                drawPlan(drawing, parsedPlan);\n                savePlan(parsedPlan);\n            } catch {\n                console.log('Failed to load plan');\n            }\n        });\n    }, [plan, drawing]);\n\n    return (\n        <div className=\"fileActionsContainer\">\n            <button onClick={exportSvg}>Save SVG</button>\n            <button onClick={saveJson}>Save JSON</button>\n            <button onClick={loadJson}>Load JSON</button>\n        </div>\n    );\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRedo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03 1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22 16.62,12.38L13,16H22V7L18.4,10.6Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRedo);\nexport default __webpack_public_path__ + \"static/media/redo.46596216.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUndo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndo);\nexport default __webpack_public_path__ + \"static/media/undo.f3bbb4ae.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBackspaceO(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,15.59L17.59,17L14,13.41L10.41,17L9,15.59L12.59,12L9,8.41L10.41,7L14,10.59L17.59,7L19,8.41L15.41,12L19,15.59M22,3C23.1,3 24,3.9 24,5V19C24,20.1 23.1,21 22,21H7C6.31,21 5.77,20.64 5.41,20.11L0,12L5.41,3.88C5.77,3.35 6.31,3 7,3H22M22,5H7L2.28,12L7,19H22V5Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBackspaceO);\nexport default __webpack_public_path__ + \"static/media/backspace-o.8da5310c.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport './RoundButton.css';\n\ntype IRoundButtonProps = {\n    icon?: JSX.Element;\n    title?: string;\n    className?: string;\n    onClick: () => void;\n};\n\nexport const RoundButton: React.FC<IRoundButtonProps> = ({\n    icon,\n    title,\n    className,\n    children,\n    onClick,\n}) => {\n    return (\n        <div title={title} className={clsx('roundButton', className)} onClick={onClick}>\n            {icon}\n            {children}\n        </div>\n    );\n};\n","import { useWatch } from 'react-hook-form';\nimport { ReactComponent as TrashIcon } from '../../assets/icons/delete.svg';\nimport { ReactComponent as RedoIcon } from '../../assets/icons/redo.svg';\nimport { ReactComponent as UndoIcon } from '../../assets/icons/undo.svg';\nimport { erasePlan, savePlan, useGlobalContext } from '../GlobalContext';\nimport { RoundButton } from '../RoundButton/RoundButton';\nimport './HistoryPanel.css';\n\nexport const HistoryPanel: React.FC = () => {\n    const { drawing, commandsHistory, control } = useGlobalContext();\n    const plan = useWatch({ control, name: 'plan' });\n\n    const clear = () => {\n        // eslint-disable-next-line no-restricted-globals\n        if (confirm('Are you sure want to delete all?')) {\n            commandsHistory.clear();\n            erasePlan(drawing, plan);\n            plan.walls = [];\n            plan.notes = [];\n            savePlan(plan);\n        }\n    };\n    return (\n        <div className=\"historyPanel\">\n            <RoundButton title=\"Undo\" onClick={commandsHistory.undo} icon={<UndoIcon />} />\n            <RoundButton title=\"Redo\" onClick={commandsHistory.redo} icon={<RedoIcon />} />\n            <RoundButton title=\"Clear\" onClick={clear} icon={<TrashIcon />} />\n        </div>\n    );\n};\n","import clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { ReactComponent as BackspaceIcon } from '../../assets/icons/backspace-o.svg';\nimport { drawWall } from '../Draw';\nimport { useGlobalContext } from '../GlobalContext';\nimport './Keyboard.css';\n\ntype INumberButtonProps = {\n    value: string;\n};\n\ntype IKeyboardProps = {\n    topText?: string;\n    bottomText?: string;\n    onSubmit?: (topText: string, bottomText: string) => void;\n};\n\ntype IActionButtonProps = {\n    value?: string;\n    icon?: React.ReactNode;\n    onClick: () => void;\n};\n\nconst ActionButton: React.FC<IActionButtonProps> = ({ icon, value, onClick }) => (\n    <button className=\"keyboard-button\" onClick={() => onClick()}>\n        {icon ?? value}\n    </button>\n);\n\nconst Keyboard: React.FC<IKeyboardProps> = ({ topText, bottomText, onSubmit = () => {} }) => {\n    const [selectedInput, setSelectedInput] = useState(0);\n    const [text1, setText1] = useState(topText ?? '');\n    const [text2, setText2] = useState(bottomText ?? '');\n    const setText = selectedInput === 0 ? setText1 : setText2;\n\n    useEffect(() => {\n        setText1(topText ?? '');\n        setText2(bottomText ?? '');\n    }, [topText, bottomText]);\n\n    const handleSubmit = () => onSubmit(text1, text2);\n    const handleBackspace = () => setText((prev) => prev.substring(0, prev.length - 1));\n\n    const handleKeyDown: React.KeyboardEventHandler = (e) => {\n        if ('0123456789'.includes(e.key)) {\n            setText((prev) => prev + e.key);\n        } else if (e.key === 'Backspace') {\n            handleBackspace();\n        } else if (e.key === 'Enter') {\n            handleSubmit();\n        }\n    };\n\n    const NumberButton: React.FC<INumberButtonProps> = ({ value }) => (\n        <button className=\"keyboard-button\" onClick={() => setText((prev) => prev + value)}>\n            {value}\n        </button>\n    );\n\n    return (\n        <div>\n            <table className=\"keyboard\">\n                <tbody>\n                    <tr>\n                        <td colSpan={2} className=\"keyboard-input-cell\">\n                            <div\n                                tabIndex={0}\n                                onKeyDown={handleKeyDown}\n                                onClick={() => setSelectedInput(0)}\n                                className={clsx(\n                                    'keyboard-input',\n                                    selectedInput === 0 && 'keyboard-active-input',\n                                    !text1 && 'keyboard-empty-input',\n                                )}\n                            >\n                                <span>{text1 || 'Top'}</span>\n                            </div>\n                        </td>\n                        <td>\n                            <ActionButton\n                                icon={<BackspaceIcon width={18} height={18} />}\n                                onClick={() => setText1((p) => p.substring(0, p.length - 1))}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2} className={'keyboard-input-cell'}>\n                            <div\n                                tabIndex={0}\n                                onKeyDown={handleKeyDown}\n                                onClick={() => setSelectedInput(1)}\n                                className={clsx(\n                                    'keyboard-input',\n                                    selectedInput === 1 && 'keyboard-active-input',\n                                    !text2 && 'keyboard-empty-input',\n                                )}\n                            >\n                                <span>{text2 || 'Bottom'}</span>\n                            </div>\n                        </td>\n                        <td>\n                            <ActionButton\n                                icon={<BackspaceIcon width={18} height={18} />}\n                                onClick={() => setText2((p) => p.substring(0, p.length - 1))}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <NumberButton value=\"7\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"8\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"9\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <NumberButton value=\"4\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"5\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"6\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <NumberButton value=\"1\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"2\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"3\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                            <NumberButton value=\"0\" />\n                        </td>\n                        <td className=\"keyboard-submit\">\n                            <ActionButton value=\"OK\" onClick={handleSubmit} />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport const MiniKeyboard: React.FC = () => {\n    const { control, drawing, commandsHistory, setValue } = useGlobalContext();\n    const selectedWall = useWatch({ control, name: 'selectedWall' });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n    if (!selectedWall) {\n        return null;\n    }\n\n    const cx = (selectedWall.p1.x + selectedWall.p2.x) / 2 / scale;\n    const cy = (selectedWall.p1.y + selectedWall.p2.y) / 2 / scale;\n    return (\n        <div className=\"mini-keyboard\" style={{ top: `${cy + 5}px`, left: `${cx + 5}px` }}>\n            <Keyboard\n                topText={selectedWall.topText}\n                bottomText={selectedWall.bottomText}\n                onSubmit={(topText, bottomText) => {\n                    const wall = plan.walls.find((w) => w.id === selectedWall.id);\n                    if (wall) {\n                        commandsHistory.add({\n                            tool: 'text',\n                            data: {\n                                id: wall.id,\n                                before: {\n                                    topText: wall.topText,\n                                    bottomText: wall.bottomText,\n                                },\n                                after: {\n                                    topText,\n                                    bottomText,\n                                },\n                            },\n                        });\n                        wall.topText = topText;\n                        wall.bottomText = bottomText;\n                        drawWall(drawing, wall);\n                    }\n                    setValue('selectedWall', undefined);\n                }}\n            />\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { useGlobalContext } from './GlobalContext';\n\nconst PreventTouch: React.FC = () => {\n    const { control } = useGlobalContext();\n\n    const pointerDown = useWatch({ control, name: 'pointerDown' });\n\n    useEffect(() => {\n        const onTouchMove = (e: TouchEvent) => {\n            if (pointerDown) {\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('touchmove', onTouchMove, { passive: false });\n        return () => {\n            document.removeEventListener('touchmove', onTouchMove);\n        };\n    }, [pointerDown]);\n\n    return null;\n};\n\nexport default PreventTouch;\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { saveSettings, useGlobalContext } from '../GlobalContext';\nimport './Settings.css';\n\nexport const Settings: React.FC = () => {\n    const { control, setValue } = useGlobalContext();\n    const settings = useWatch({ control, name: 'settings' });\n    const { stylusMode, magneticMode, wallAlignmentMode } = settings;\n\n    useEffect(() => {\n        saveSettings(settings);\n    }, [settings]);\n\n    return (\n        <div className=\"settingsList\">\n            <div>\n                <b>Settings</b>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={stylusMode ?? false}\n                        onChange={(e) => setValue('settings.stylusMode', e.target.checked)}\n                    />\n                    Stylus mode\n                </label>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={wallAlignmentMode ?? false}\n                        onChange={(e) => setValue('settings.wallAlignmentMode', e.target.checked)}\n                    />\n                    Walls alignment\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={magneticMode ?? false}\n                        onChange={(e) => setValue('settings.magneticMode', e.target.checked)}\n                    />\n                    Magnet mode\n                </label>\n            </div>\n\n            <a href=\"https://perfect-freehand-example.vercel.app/\" target=\"_blank\" rel=\"noreferrer\">\n                Perfect freehand\n            </a>\n        </div>\n    );\n};\n","type TypedTouch = Touch & { touchType: 'stylus' | 'direct' };\n\nexport type ToolEvent = {\n    id: number;\n    x: number;\n    y: number;\n\n    type: 'mouse' | 'stylus' | 'touch';\n    buttons?: number;\n    touches?: TypedTouch[];\n    changedTouches?: TypedTouch[];\n};\n\nexport type ToolEventHandler = (e: ToolEvent) => void;\n\nexport function registerTool(\n    element: HTMLElement,\n    onStart: ToolEventHandler,\n    onMove: ToolEventHandler,\n    onEnd: ToolEventHandler,\n) {\n    function mouseToToolEvent(e: MouseEvent): ToolEvent {\n        return {\n            id: 1,\n            x: e.pageX,\n            y: e.pageY,\n            type: 'mouse',\n            buttons: e.buttons,\n            changedTouches: [\n                {\n                    identifier: 1,\n                    pageX: e.pageX,\n                    pageY: e.pageY,\n                } as any as TypedTouch,\n            ],\n        };\n    }\n    const onMouseDown = (e: MouseEvent) => onStart(mouseToToolEvent(e));\n    const onMouseMove = (e: MouseEvent) => onMove(mouseToToolEvent(e));\n    const onMouseUp = (e: MouseEvent) => onEnd(mouseToToolEvent(e));\n\n    function touchToToolEvent(e: TouchEvent): ToolEvent {\n        const touch = e.changedTouches[0] as TypedTouch;\n        return {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY,\n            touches: Array.from(e.touches) as TypedTouch[],\n            changedTouches: Array.from(e.changedTouches) as TypedTouch[],\n            type: touch.touchType === 'stylus' ? 'stylus' : 'touch',\n        };\n    }\n    const onTouchStart = (e: TouchEvent) => onStart(touchToToolEvent(e));\n    const onTouchMove = (e: TouchEvent) => onMove(touchToToolEvent(e));\n    const onTouchEnd = (e: TouchEvent) => onEnd(touchToToolEvent(e));\n\n    element.addEventListener('mousedown', onMouseDown);\n    element.addEventListener('mousemove', onMouseMove);\n    element.addEventListener('mouseup', onMouseUp);\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('touchmove', onTouchMove);\n    element.addEventListener('touchend', onTouchEnd);\n\n    return () => {\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('mousemove', onMouseMove);\n        element.removeEventListener('mouseup', onMouseUp);\n\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchmove', onTouchMove);\n        element.removeEventListener('touchend', onTouchEnd);\n    };\n}\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { drawGuideLines, drawWall, removeGuideLines, wallCircleRadius } from '../Draw';\nimport { distanceBetween, findAllGuideLines, pointProjection } from '../Geometry';\nimport { useGlobalContext, Wall } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nfunction cloneEditingWalls(walls: Wall[]): Wall[] {\n    return walls\n        .filter((w) => w.p1.editId || w.p2.editId)\n        .map((w) => {\n            const clone: Wall = {\n                id: w.id,\n                topText: w.topText,\n                bottomText: w.bottomText,\n                p1: { x: w.p1.x, y: w.p1.y },\n                p2: { x: w.p2.x, y: w.p2.y },\n            };\n            return clone;\n        });\n}\n\nexport const CursorTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, magneticMode, wallAlignmentMode, selectedTool } = useWatch({\n        control,\n        name: 'settings',\n    });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'cursor') {\n            return;\n        }\n\n        let _wallBefore: Wall[] = [];\n        let selectedWall: Wall | undefined;\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            setValue('pointerDown', true);\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                const points = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((p) => distanceBetween(p, { x, y }) <= wallCircleRadius)\n                    .map((p) => {\n                        p.editId = id;\n                        return p;\n                    });\n\n                const newSelectedWall =\n                    points.length === 0\n                        ? plan.walls.find((w) => {\n                              const p = pointProjection({ x, y }, w, true);\n                              return p && distanceBetween({ x, y }, p) < wallCircleRadius;\n                          })\n                        : undefined;\n\n                if (selectedWall) drawWall(drawing, selectedWall);\n                selectedWall = newSelectedWall;\n                if (selectedWall) drawWall(drawing, selectedWall, '#00f');\n                setValue('selectedWall', selectedWall);\n\n                _wallBefore = cloneEditingWalls(plan.walls);\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                const editingPoints = plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((p) => p.editId === id);\n                editingPoints.forEach((p) => {\n                    p.x = x;\n                    p.y = y;\n                });\n                if (magneticMode && editingPoints.length > 0) {\n                    const guidLines = findAllGuideLines(plan.walls, editingPoints, { x, y });\n                    drawGuideLines(drawing, editingPoints[0], guidLines);\n                }\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => drawWall(drawing, w));\n            });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((x) => x.editId === id)\n                    .forEach((p) => {\n                        if (magneticMode) {\n                            const closePoint = plan.walls\n                                .flatMap((w) => [w.p1, w.p2])\n                                .filter((o) => o !== p)\n                                .find((o) => distanceBetween(o, p) <= wallCircleRadius);\n                            if (closePoint) {\n                                p.x = closePoint.x;\n                                p.y = closePoint.y;\n                            }\n                        }\n                    });\n\n                commandsHistory.add({\n                    tool: 'cursor',\n                    data: {\n                        before: _wallBefore,\n                        after: cloneEditingWalls(plan.walls),\n                    },\n                });\n\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => {\n                        w.p1.editId = undefined;\n                        w.p2.editId = undefined;\n                        drawWall(drawing, w);\n                    });\n                removeGuideLines(drawing, { editId: id, x: 0, y: 0 });\n            });\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [\n        scale,\n        stylusMode,\n        magneticMode,\n        wallAlignmentMode,\n        commandsHistory,\n        interactiveRef,\n        selectedTool,\n        plan.walls,\n        drawing,\n        setValue,\n    ]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCursor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCursor);\nexport default __webpack_public_path__ + \"static/media/cursor.d5e3bd0c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { drawCircle, wallGroupId } from '../Draw';\nimport { crossLines } from '../Geometry';\nimport { Point, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const DestroyTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, selectedTool } = useWatch({ control, name: 'settings' });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'destroy') {\n            return;\n        }\n\n        let start: Point | undefined;\n\n        const onStart = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                return;\n            }\n            setValue('pointerDown', true);\n            start = { x, y, editId: e.id };\n        };\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            drawing.createGroup('cross', 'walls');\n            drawing.drawLine({\n                id: `d${e.id}`,\n                x1: start!.x,\n                y1: start!.y,\n                x2: x,\n                y2: y,\n                stroke: 'red',\n                strokeWidth: scale,\n                groupId: 'cross',\n            });\n            const destroyLine = { id: `${e.id}`, p1: start!, p2: { x, y } };\n            const crosses = plan.walls\n                .map((w) => crossLines(w, destroyLine, true))\n                .filter((p) => p);\n            const crossIds = crosses.map((p, i) => {\n                const crossId = `x${i}`;\n                drawCircle(drawing, crossId, 'cross', p!.x, p!.y, 5, 'red');\n                return crossId;\n            });\n            drawing.removeElements(\n                (e) => e.id.startsWith('x') && !crossIds.includes(e.id),\n                'cross',\n            );\n        };\n        const onEnd = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const destroyLine = { id: `${e.id}`, p1: start!, p2: { x, y } };\n            const destroyedWalls = plan.walls.filter((w) => crossLines(w, destroyLine, true));\n            destroyedWalls.forEach((w) => drawing.removeElement(wallGroupId(w)));\n            plan.walls = plan.walls.filter((w) => !destroyedWalls.includes(w));\n            commandsHistory.add({\n                tool: 'destroy',\n                data: { destroyedWalls },\n            });\n            drawing.removeElement('cross');\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [commandsHistory, drawing, interactiveRef, plan, scale, selectedTool, stylusMode, setValue]);\n\n    return null;\n};\n","import React, { useEffect } from 'react';\nimport { distanceBetween } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const HistoryTool: React.FC = () => {\n    const { commandsHistory, interactiveRef } = useGlobalContext();\n    useEffect(() => {\n        if (!interactiveRef.current) return;\n\n        let lastEnd = 0;\n        let lines: Line[] = [];\n\n        const onStart = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const x = touch.pageX;\n                const y = touch.pageY;\n                const id = touch.identifier.toString();\n                if (!lines.find((l) => l.id === id)) {\n                    lines.push({ id, p1: { x, y }, p2: { x, y } });\n                }\n            });\n        };\n        const onMove = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const x = touch.pageX;\n                const y = touch.pageY;\n                const id = touch.identifier.toString();\n                const line = lines.find((l) => l.id === id);\n                if (line) {\n                    line.p2.x = x;\n                    line.p2.y = y;\n                }\n            });\n        };\n        const onEnd = (e: ToolEvent) => {\n            const now = new Date().getTime();\n            const timeDiff = now - lastEnd;\n            lastEnd = now;\n            if (!e.touches || e.touches?.length > 0) {\n                return;\n            }\n            const notMoved = lines.filter((l) => distanceBetween(l.p1, l.p2) < 10).length;\n            if (timeDiff < 500 && lines.length === 2 && notMoved === 2) {\n                commandsHistory.undo();\n            } else if (timeDiff < 500 && lines.length === 3 && notMoved === 3) {\n                commandsHistory.redo();\n            }\n            lines = [];\n        };\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [commandsHistory, interactiveRef]);\n\n    return null;\n};\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { DrawPoint } from '../Draw';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nconst tools: IToolType[] = ['pencil', 'eraser'];\n\nexport const PenTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, magneticMode, selectedTool } = useWatch({ control, name: 'settings' });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || !tools.includes(selectedTool)) {\n            return;\n        }\n\n        let points: DrawPoint[] = [];\n        let id: string | undefined;\n\n        const getStrokeOptions = () => {\n            return {\n                strokeWidth: scale * (selectedTool === 'eraser' ? 15 : 1.5),\n                stroke: selectedTool === 'pencil' ? '#000' : '#fff',\n            };\n        };\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            if (e.type === 'touch' && e.touches!.length > 1) return;\n            setValue('pointerDown', true);\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points.push({ x, y, pressure: Number(touch?.force.toFixed(3)) });\n            const { stroke, strokeWidth } = getStrokeOptions();\n            id = drawing.drawPath({\n                points,\n                stroke,\n                strokeWidth,\n                groupId: 'pen',\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            if (e.type === 'mouse' && !e.buttons) return;\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points!.push({ x, y, pressure: Number(touch?.force.toFixed(3)) });\n            const { strokeWidth } = getStrokeOptions();\n            drawing.drawPath({ id, points, strokeWidth });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            const strokeOptions = getStrokeOptions();\n            const path = { id, points, ...strokeOptions, groupId: 'pen' };\n            plan.notes.push(path);\n            commandsHistory.add({\n                tool: selectedTool as 'pencil' | 'eraser',\n                data: { options: path },\n            });\n            id = undefined;\n            points = [];\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [\n        scale,\n        stylusMode,\n        magneticMode,\n        interactiveRef,\n        commandsHistory,\n        selectedTool,\n        drawing,\n        plan,\n        setValue,\n    ]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEraser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEraser);\nexport default __webpack_public_path__ + \"static/media/eraser.e5d177cd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.a3ff265f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3,16H12V21H3V16M2,10H8V15H2V10M9,10H15V15H9V10M16,10H22V15H16V10M13,16H21V21H13V16M3,4H11V9H3V4M12,4H21V9H12V4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWall);\nexport default __webpack_public_path__ + \"static/media/wall.87ac9ec5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBulldozer(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4,4C3.45,4 3,4.45 3,5V10C2.54,10 2.14,10.31 2.03,10.76V13.97H2.29C2.65,13.37 3.3,13 4,13H13C13.7,13 14.35,13.37 14.71,13.97H16.03L16,11V11C16,10.45 15.55,10 15,10H13V8C13,7.45 12.55,7 12,7C11.45,7 11,7.45 11,8V10H9V5C9,4.45 8.55,4 8,4H4M5,6H7V10L7,11H5V6M17,11V19H22V18L19,17L18,11H17M4,15C2.9,15 2,15.9 2,17C2,18.1 2.9,19 4,19H13C14.1,19 15,18.1 15,17C15,15.9 14.1,15 13,15H4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBulldozer);\nexport default __webpack_public_path__ + \"static/media/bulldozer.b9fa2193.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { ReactComponent as CursorIcon } from '../../assets/icons/cursor.svg';\nimport { ReactComponent as EraserIcon } from '../../assets/icons/eraser.svg';\nimport { ReactComponent as PencilIcon } from '../../assets/icons/pencil.svg';\nimport { ReactComponent as WallIcon } from '../../assets/icons/wall.svg';\nimport { ReactComponent as DestroyIcon } from '../../assets/icons/bulldozer.svg';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport { RoundButton } from '../RoundButton/RoundButton';\nimport './Toolbox.css';\n\ntype IToolboxProps = {};\n\nexport const Toolbox: React.FC<IToolboxProps> = () => {\n    const { control, setValue } = useGlobalContext();\n    const selectedTool = useWatch({ control, name: 'settings.selectedTool' });\n\n    const setSelectedTool = (tool: IToolType) => {\n        setValue('settings.selectedTool', tool);\n    };\n\n    type IToolVoxItemProps = {\n        type: IToolType;\n        name: string;\n        icon?: JSX.Element;\n    };\n    const ToolBoxItem: React.FC<IToolVoxItemProps> = ({ type, name, icon }) => {\n        return (\n            <RoundButton\n                title={name}\n                onClick={() => setSelectedTool(type)}\n                className={clsx(selectedTool === type && 'toolboxSelectedItem')}\n            >\n                {icon ?? name}\n            </RoundButton>\n        );\n    };\n\n    return (\n        <div className=\"toolboxContainer\">\n            <ToolBoxItem type=\"wall\" name=\"Wall\" icon={<WallIcon />} />\n            <ToolBoxItem type=\"destroy\" name=\"Destroy\" icon={<DestroyIcon />} />\n            <ToolBoxItem type=\"cursor\" name=\"Cursor\" icon={<CursorIcon />} />\n            <ToolBoxItem type=\"pencil\" name=\"Pencil\" icon={<PencilIcon />} />\n            <ToolBoxItem type=\"eraser\" name=\"Eraser\" icon={<EraserIcon />} />\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport {\n    drawGuideLines,\n    drawWall,\n    drawWallStart,\n    removeGuideLines,\n    wallCircleRadius,\n    wallGroupId,\n} from '../Draw';\nimport { distanceBetween, findAlignedGuideLines, getWallOrientation } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const WallTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, magneticMode, wallAlignmentMode, selectedTool } = useWatch({\n        control,\n        name: 'settings',\n    });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'wall') {\n            return;\n        }\n\n        const cancel = (id: number) => {\n            const wallIndex = plan.walls.findIndex((x) => x.editId === id);\n            if (wallIndex >= 0) {\n                const walls = plan.walls.splice(wallIndex, 1);\n                drawing.removeElement(wallGroupId(walls[0]));\n                walls[0].editId = undefined;\n            }\n        };\n\n        const onStart = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type !== 'stylus') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                setValue('pointerDown', false);\n                cancel(e.touches![0].identifier);\n                return;\n            }\n            setValue('pointerDown', true);\n            const wallId =\n                plan.walls.length > 0\n                    ? Math.max.apply(\n                          null,\n                          plan.walls.map((w) => parseInt(w.id)),\n                      ) + 1\n                    : 1;\n            const wall: Line = {\n                id: `${wallId}`,\n                editId: e.id,\n                p1: { x, y },\n                p2: { x, y },\n            };\n            if (magneticMode) {\n                const closePoint = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .find((p) => distanceBetween(p, wall.p1) <= wallCircleRadius);\n\n                if (closePoint) {\n                    wall.p1.x = closePoint.x;\n                    wall.p1.y = closePoint.y;\n                    wall.p2.x = closePoint.x;\n                    wall.p2.y = closePoint.y;\n                }\n            }\n            plan.walls.push(wall);\n            drawWallStart(drawing, wall);\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                wall.p2.x = x;\n                wall.p2.y = y;\n                if (wallAlignmentMode) {\n                    const orientation = getWallOrientation({ p1: wall.p1, p2: { x, y } });\n                    if (orientation === 'horizontal') {\n                        wall.p2.y = wall.p1.y;\n                    } else {\n                        wall.p2.x = wall.p1.x;\n                    }\n                    const guideLines = findAlignedGuideLines(plan.walls, wall);\n                    drawGuideLines(drawing, wall.p2, guideLines);\n                }\n                drawWall(drawing, wall);\n            }\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                if (magneticMode) {\n                    const closePoint = plan.walls\n                        .filter((w) => w !== wall)\n                        .flatMap((item) => [item.p1, item.p2])\n                        .find((p) => distanceBetween(p, wall.p2) <= wallCircleRadius);\n\n                    if (closePoint) {\n                        wall.p2.x = closePoint.x;\n                        wall.p2.y = closePoint.y;\n                    }\n                }\n                removeGuideLines(drawing, wall.p2);\n                drawWall(drawing, wall);\n                wall.editId = undefined;\n                commandsHistory.add({\n                    tool: 'wall',\n                    data: { addedWall: wall },\n                });\n            }\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [\n        scale,\n        stylusMode,\n        magneticMode,\n        wallAlignmentMode,\n        commandsHistory,\n        interactiveRef,\n        selectedTool,\n        plan.walls,\n        drawing,\n        setValue,\n    ]);\n\n    return null;\n};\n","import React from 'react';\nimport './App.css';\nimport { FileActions } from './components/FileActions/FileActions';\nimport { GlobalContext, useGlobalState } from './components/GlobalContext';\nimport { HistoryPanel } from './components/History/HistoryPanel';\nimport { MiniKeyboard } from './components/Keyboard/Keyboard';\nimport PreventTouch from './components/PreventTouch';\nimport { Settings } from './components/Settings/Settings';\nimport { CursorTool } from './components/Tools/CursorTool';\nimport { DestroyTool } from './components/Tools/DestroyTool';\nimport { HistoryTool } from './components/Tools/HistoryTool';\nimport { PenTool } from './components/Tools/PenTool';\nimport { Toolbox } from './components/Tools/Toolbox';\nimport { WallTool } from './components/Tools/WallTool';\n\nfunction App() {\n    const globalContext = useGlobalState();\n    const { interactiveRef, drawingRef } = globalContext;\n    console.log('App render');\n\n    return (\n        <GlobalContext.Provider value={globalContext}>\n            <main className=\"unselectable\">\n                <PreventTouch />\n                <HistoryTool />\n                <WallTool />\n                <CursorTool />\n                <PenTool />\n                <DestroyTool />\n                <div ref={interactiveRef} className=\"paper main\">\n                    <svg ref={drawingRef} style={{ width: '100%', height: '100%' }}>\n                        <g id=\"pen\" />\n                        <g id=\"guide\" />\n                        <g id=\"walls\" />\n                    </svg>\n                </div>\n                <Toolbox />\n                <div className=\"rightMenu\">\n                    <Settings />\n                    <FileActions />\n                    <ol style={{ paddingInlineStart: 15, margin: 0 }}>\n                        <b>What need to do</b>\n                        <li>handle resize</li>\n                        <li>pen color, width</li>\n                        <li>door, window</li>\n                        <li>keyboard outside</li>\n                        <li>translate app</li>\n                        <li>custom zoom</li>\n                        <li>hotkeys for toolbox</li>\n                    </ol>\n                </div>\n                <MiniKeyboard />\n                <HistoryPanel />\n            </main>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}