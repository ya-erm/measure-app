{"version":3,"sources":["utils/svg/save.ts","components/Draw.ts","utils/svg/convert.ts","hooks/useDrawing.ts","components/History/useHistory.ts","components/GlobalContext.tsx","assets/icons/delete.svg","components/FileActions/FileActions.tsx","assets/icons/redo.svg","assets/icons/undo.svg","components/RoundButton/RoundButton.tsx","components/History/HistoryPanel.tsx","components/Settings/Settings.tsx","components/Geometry.ts","components/Tools/ToolEvent.ts","components/Tools/CursorTool.tsx","assets/icons/cursor.svg","components/Tools/PenTool.tsx","assets/icons/eraser.svg","assets/icons/pencil.svg","assets/icons/wall.svg","components/Tools/Toolbox.tsx","components/Tools/WallTool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["downloadFile","content","fileName","contentType","a","document","createElement","file","Blob","type","href","URL","createObjectURL","download","click","remove","drawLine","ctx","id","groupId","x1","y1","x2","y2","strokeDashArray","drawSquare","xc","yc","size","fill","drawRect","x","y","width","height","drawCircle","radius","stroke","rx","ry","wallCircleRadius","wallGroupId","wall","pointGroupId","point","editId","drawWallStart","gid","p1","drawWall","createGroup","p2","drawWallEnd","drawGuideLines","guideLines","guideLinesIds","map","guideLine","guideLineId","removeElements","child","includes","removeGuideLines","removeElement","getSvgPathFromStroke","length","d","reduce","acc","i","arr","x0","y0","push","join","SVG_NS","IID","setLineOptions","line","options","strokeWidth","setAttribute","toString","setRectOptions","ellipse","setCircleOptions","findOrCreate","svg","key","element","getElementById","undefined","createElementNS","dest","appendChild","undoHistory","redoHistory","savePlan","plan","localStorage","setItem","JSON","stringify","loadPlan","json","defaultPlan","walls","parse","console","log","useGlobalState","defaultState","useMemo","scale","selectedTool","pointerDown","stylusMode","magneticMode","wallAlignmentMode","getItem","useState","globalState","setGlobalState","updateGlobalState","useCallback","update","prev","svgRef","useRef","useEffect","current","parent","parentElement","getBoundingClientRect","drawing","parentId","group","querySelector","predicate","childNodes","forEach","drawPath","points","path","getStroke","smoothing","thinning","useDrawing","drawingRef","commandsHistory","add","record","undo","item","pop","tool","addedWall","data","filter","w","before","redo","after","useHistory","interactiveRef","_path","GlobalContext","React","createContext","useGlobalContext","context","useContext","Error","FileActions","exportSvg","clone","cloneNode","svgDocType","implementation","createDocumentType","svgDoc","createDocument","replaceChild","documentElement","XMLSerializer","serializeToString","replace","Date","toLocaleDateString","saveSvg","saveJson","loadJson","onLoad","input","onchange","e","files","reader","FileReader","readAsText","onload","readerEvent","target","result","uploadFile","className","onClick","_excluded","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","title","titleId","props","xmlns","xmlnsXlink","viewBox","ref","ForwardRef","SvgRedo","SvgUndo","RoundButton","icon","children","clsx","HistoryPanel","history","confirm","Settings","checked","onChange","rel","getWallOrientation","dx","dy","Math","abs","distanceBetween","sqrt","guideLineMagnetSize","registerTool","onStart","onMove","onEnd","mouseToToolEvent","pageX","pageY","buttons","changedTouches","identifier","onMouseDown","onMouseMove","onMouseUp","touchToToolEvent","touch","touches","Array","from","touchType","onTouchStart","onTouchMove","onTouchEnd","addEventListener","removeEventListener","cloneEditingWalls","CursorTool","_wallBefore","flatMap","p","editingPoints","guidLines","findAllGuideLines","closePoint","o","find","tools","PenTool","getStrokeOptions","pressure","force","strokeOptions","SvgCursor","SvgEraser","SvgPencil","SvgWall","Toolbox","ToolBoxItem","name","WallTool","wallIndex","findIndex","splice","cancel","wallId","max","parseInt","orientation","other","findAlignedGuideLines","App","globalContext","preventDefault","passive","Provider","value","Helmet","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"sUAsBO,SAASA,EAAaC,EAAcC,EAAkBC,GACzD,IAAIC,EAAIC,SAASC,cAAc,KAC3BC,EAAO,IAAIC,KAAK,CAACP,GAAU,CAAEQ,KAAMN,IACvCC,EAAEM,KAAOC,IAAIC,gBAAgBL,GAC7BH,EAAES,SAAWX,EACbE,EAAEU,QACFV,EAAEW,SCfC,SAASC,EACZC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAP,EAAID,SAAS,CAAEE,KAAIC,UAASC,KAAIC,KAAIC,KAAIC,KAAIC,oBAEzC,SAASC,EACZR,EACAC,EACAC,EACAO,EACAC,EACAC,EACAC,GAEAZ,EAAIa,SAAS,CACTZ,KACAC,UACAY,EAAGL,EAAKE,EAAO,EACfI,EAAGL,EAAKC,EAAO,EACfK,MAAOL,EACPM,OAAQN,EACRC,SAID,SAASM,EACZlB,EACAC,EACAC,EACAO,EACAC,EACAS,EACAP,EACAQ,GAEApB,EAAIkB,WAAW,CAAEjB,KAAIC,UAASY,EAAGL,EAAIM,EAAGL,EAAIW,GAAIF,EAAQG,GAAIH,EAAQP,OAAMQ,WAGvE,IACMG,EAAmB,GAEnBC,EAAc,SAACC,GAAD,iBAAoBA,EAAKxB,KACvCyB,EAAe,SAACC,GAAD,iBAAsBA,EAAMC,SAEjD,SAASC,EAAc7B,EAAcyB,GACxC,IAAMK,EAAMN,EAAYC,GACxBjB,EAAWR,EAAD,WAAUyB,EAAKxB,GAAf,KAAsB6B,EAAKL,EAAKM,GAAGjB,EAAGW,EAAKM,GAAGhB,EAR/B,GAQiD,SAOvE,SAASiB,EAAShC,EAAcyB,GACnC,IAAMK,EAAM9B,EAAIiC,YAAYT,EAAYC,GAAO,SAC/CP,EAAWlB,EAAD,WAAUyB,EAAKxB,GAAf,MAAuB6B,EAAKL,EAAKM,GAAGjB,EAAGW,EAAKM,GAAGhB,EAAGQ,EAAkB,OAAQ,QACtFL,EAAWlB,EAAD,WAAUyB,EAAKxB,GAAf,MAAuB6B,EAAKL,EAAKS,GAAGpB,EAAGW,EAAKS,GAAGnB,EAAGQ,EAAkB,OAAQ,QACtFxB,EAASC,EAAD,WAAUyB,EAAKxB,GAAf,KAAsB6B,EAAKL,EAAKM,GAAGjB,EAAGW,EAAKM,GAAGhB,EAAGU,EAAKS,GAAGpB,EAAGW,EAAKS,GAAGnB,GAC5Ec,EAAc7B,EAAKyB,GAVhB,SAAqBzB,EAAcyB,GACtC,IAAMK,EAAMN,EAAYC,GACxBjB,EAAWR,EAAD,WAAUyB,EAAKxB,GAAf,KAAsB6B,EAAKL,EAAKS,GAAGpB,EAAGW,EAAKS,GAAGnB,EAZ/B,GAYiD,OAS1EoB,CAAYnC,EAAKyB,GAGd,SAASW,EAAepC,EAAc2B,EAAcU,GACvD,IAAMnC,EAAUF,EAAIiC,YAAYP,EAAaC,GAAQ,SAC/CW,EAAgBD,EAAWE,KAAI,SAACC,GAClC,IAAMC,EAAW,WAAOd,EAAMC,OAAb,YAAuBY,EAAUf,KAAKxB,IAWvD,OAVAF,EACIC,EACAyC,EACAvC,EACAyB,EAAMb,EACNa,EAAMZ,EACNyB,EAAUb,MAAMb,EAChB0B,EAAUb,MAAMZ,EAChB,SAEG0B,KAEXzC,EAAI0C,gBAAe,SAACC,GAAD,OAAYL,EAAcM,SAAUD,EAAkB1C,MAAKC,GAG3E,SAAS2C,EAAiB7C,EAAc2B,GAC3C3B,EAAI8C,cAAcpB,EAAaC,GAAQ,S,iCCtGpC,SAASoB,EAAqB3B,GACjC,IAAKA,EAAO4B,OAAQ,MAAO,GAE3B,IAAMC,EAAI7B,EAAO8B,QACb,SAACC,EAAD,EAAgBC,EAAGC,GAAS,IAAD,mBAApBC,EAAoB,KAAhBC,EAAgB,KACvB,cAAiBF,GAAKD,EAAI,GAAKC,EAAIL,QAAnC,GAAO7C,EAAP,KAAWC,EAAX,KAEA,OADA+C,EAAIK,KAAKF,EAAIC,GAAKD,EAAKnD,GAAM,GAAIoD,EAAKnD,GAAM,GACrC+C,IAJL,CAML,KANK,mBAMG/B,EAAO,IANV,CAMc,OAIxB,OADA6B,EAAEO,KAAK,KACAP,EAAEQ,KAAK,KCmDlB,IAAMC,EAAS,6BAEXC,EAAM,EAEV,SAASC,EAAeC,EAAeC,GACnC,IAAQ3D,EAAkE2D,EAAlE3D,GAAIE,EAA8DyD,EAA9DzD,GAAID,EAA0D0D,EAA1D1D,GAAIE,EAAsDwD,EAAtDxD,GAAIyD,EAAkDD,EAAlDC,YAAxB,EAA0ED,EAArC1C,cAArC,MAA8C,OAA9C,EAAsDb,EAAoBuD,EAApBvD,gBACtDsD,EAAKG,aAAa,KAAM7D,EAAG8D,YAC3BJ,EAAKG,aAAa,KAAM5D,EAAG6D,YAC3BJ,EAAKG,aAAa,KAAM3D,EAAG4D,YAC3BJ,EAAKG,aAAa,KAAM1D,EAAG2D,YAC3BJ,EAAKG,aAAa,SAAU5C,GACxB2C,GAAaF,EAAKG,aAAa,eAAgBD,EAAYE,YAC3D1D,GAAiBsD,EAAKG,aAAa,mBAAoBzD,GAG/D,SAAS2D,EAAeC,EAAkBL,GACtC,IAAQhD,EAAmDgD,EAAnDhD,EAAGC,EAAgD+C,EAAhD/C,EAAGC,EAA6C8C,EAA7C9C,MAAOC,EAAsC6C,EAAtC7C,OAAQ8C,EAA8BD,EAA9BC,YAAa3C,EAAiB0C,EAAjB1C,OAAQR,EAASkD,EAATlD,KAClDuD,EAAQH,aAAa,IAAKlD,EAAEmD,YAC5BE,EAAQH,aAAa,IAAKjD,EAAEkD,YAC5BE,EAAQH,aAAa,QAAShD,EAAMiD,YACpCE,EAAQH,aAAa,SAAU/C,EAAOgD,YAClCrD,GAAMuD,EAAQH,aAAa,OAAQpD,GACnCQ,GAAQ+C,EAAQH,aAAa,SAAU5C,GACvC2C,GAAaI,EAAQH,aAAa,eAAgBD,EAAYE,YAGtE,SAASG,EAAiBD,EAAkBL,GACxC,IAAQhD,EAA4CgD,EAA5ChD,EAAGC,EAAyC+C,EAAzC/C,EAAGM,EAAsCyC,EAAtCzC,GAAIC,EAAkCwC,EAAlCxC,GAAIyC,EAA8BD,EAA9BC,YAAa3C,EAAiB0C,EAAjB1C,OAAQR,EAASkD,EAATlD,KAC3CuD,EAAQH,aAAa,KAAMlD,EAAEmD,YAC7BE,EAAQH,aAAa,KAAMjD,EAAEkD,YAC7BE,EAAQH,aAAa,KAAM3C,EAAG4C,YAC9BE,EAAQH,aAAa,KAAM1C,EAAG2C,YAC1BrD,GAAMuD,EAAQH,aAAa,OAAQpD,GACnCQ,GAAQ+C,EAAQH,aAAa,SAAU5C,GACvC2C,GAAaI,EAAQH,aAAa,eAAgBD,EAAYE,YAGtE,SAASI,EACLC,EACAC,EACA/E,EACAU,GAEA,IAAIsE,EAAUD,EAAG,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAKG,eAAeF,QAAOG,EACzCzE,EAAE,OAAGsE,QAAH,IAAGA,IAAH,WAAcZ,KACtB,IAAKa,EAAS,EACVA,EAAUpF,SAASuF,gBAAgBjB,EAAQlE,IACnCwE,aAAa,KAAM/D,GAC3B,IAAM2E,EAAO1E,EAAO,OAAGoE,QAAH,IAAGA,OAAH,EAAGA,EAAKG,eAAevE,GAAWoE,EAClD,OAAJM,QAAI,IAAJA,KAAMC,YAAYL,GAEtB,MAAO,CAAEA,UAASvE,MCnFtB,IAAI6E,EAAgC,GAChCC,EAAgC,GCuB7B,SAASC,EAASC,GACrBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,IAGzC,SAASK,EAASC,GACrB,IAAMC,EAAc,CAChBC,MAAO,IAEX,IACI,IAAKF,EAAM,OAAOC,EAClB,IAAMP,EAAOG,KAAKM,MAAMH,GAExB,OADAI,QAAQC,IAAI,gBAAiBX,GACtBA,EACT,SACEU,QAAQC,IAAI,0BAEhB,OAAOJ,EAGJ,SAASK,IACZ,IAAMC,EAAsCC,mBACxC,iBAAO,CACHC,MAAO,EACPC,aAAc,OACdC,aAAa,EAEbC,YAAY,EACZC,cAAc,EACdC,mBAAmB,EAEnBpB,KAAMK,EAASJ,aAAaoB,QAAQ,YAExC,IAGJ,EAAsCC,mBAAuBT,GAA7D,mBAAOU,EAAP,KAAoBC,EAApB,KAEMC,EAAoBC,uBACtB,SAACC,GAAD,OAAYH,GAAe,SAACI,GAAD,mBAAC,eAAeA,GAASD,QACpD,IAGJ,EFoBG,WAA0D,IAAtCZ,EAAqC,uDAArB,EACjCc,EAASC,iBAAsB,MAkFrC,OAhFAC,qBAAU,WACN,IAAM1C,EAAMwC,EAAOG,QACbC,EAAM,OAAG5C,QAAH,IAAGA,OAAH,EAAGA,EAAK6C,cACpB,GAAK7C,GAAQ4C,EAAb,CACA,MAA0BA,EAAQE,wBAA1BpG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACfqD,EAAIN,aAAa,UAAjB,cAAmChD,EAAQgF,EAA3C,YAAoD/E,EAAS+E,IAC7D1B,EAAIN,aAAa,UAAW,OAC5BM,EAAIN,aAAa,QAASN,GAC1BY,EAAIN,aAAa,QAAjB,UAA6BhD,EAAQgF,IACrC1B,EAAIN,aAAa,SAAjB,UAA8B/C,EAAS+E,OACxC,CAACA,EAAOc,IAsEJ,CACHA,SACAO,QAtEsB,CACtBtH,SAAU,SAAC+D,GACP,MAAwBO,EACpByC,EAAOG,QACPnD,EAAQ7D,GACR,OACA6D,EAAQ5D,SAJJsE,EAAR,EAAQA,QAASvE,EAAjB,EAAiBA,GAOjB,OADA2D,EAAeY,EAASV,GACjB7D,GAEXiB,WAAY,SAAC4C,GACT,MAAwBO,EACpByC,EAAOG,QACPnD,EAAQ7D,GACR,UACA6D,EAAQ5D,SAJJsE,EAAR,EAAQA,QAASvE,EAAjB,EAAiBA,GAOjB,OADAmE,EAAiBI,EAASV,GACnB7D,GAEXY,SAAU,SAACiD,GACP,MAAwBO,EACpByC,EAAOG,QACPnD,EAAQ7D,GACR,OACA6D,EAAQ5D,SAJJsE,EAAR,EAAQA,QAASvE,EAAjB,EAAiBA,GAOjB,OADAiE,EAAeM,EAASV,GACjB7D,GAEXgC,YAAa,SAACsC,EAAK+C,GAEf,OADejD,EAAayC,EAAOG,QAAS1C,EAAK,IAAK+C,GAA9CrH,IAGZ6C,cAAe,SAAC7C,EAAIC,GAAa,IAAD,EACtBqH,EAAQrH,EAAO,UAAG4G,EAAOG,eAAV,aAAG,EAAgBxC,eAAevE,GAAW4G,EAAOG,QACnEzC,EAAO,OAAG+C,QAAH,IAAGA,OAAH,EAAGA,EAAOC,cAAP,WAAyBvH,IAClC,OAAPuE,QAAO,IAAPA,KAAS1E,UAEb4C,eAAgB,SAAC+E,EAAWvH,GAAa,IAAD,IAC9BqH,EAAQrH,EAAO,UAAG4G,EAAOG,eAAV,aAAG,EAAgBxC,eAAevE,GAAW4G,EAAOG,QACpE,OAALM,QAAK,IAALA,GAAA,UAAAA,EAAOG,kBAAP,SAAmBC,SAAQ,SAAChF,GACpB8E,EAAU9E,IACVA,EAAM7C,aAKlB8H,SAAU,SAAC9D,GACP,IAAYS,EAAyBT,EAA7B7D,GAAS4H,EAAoB/D,EAApB+D,OAAQ3H,EAAY4D,EAAZ5D,QACzB,EAA8BmE,EAAayC,EAAOG,QAAS1C,EAAK,OAAQrE,GAAvD4H,EAAjB,EAAQtD,QAAevE,EAAvB,EAAuBA,GAavB,OAZI6D,EAAQ1C,QAAQ0G,EAAK9D,aAAa,OAAQF,EAAQ1C,QACtD0G,EAAK9D,aACD,IACAjB,EACIgF,YAAUF,EAAQ,CAEdlH,KAAMmD,EAAQC,YACdiE,UAAW,GACXC,SAAU,OAIfhI,KEnGyBiI,CAAW1B,EAAYR,OAA/CmC,EAAhB,EAAQrB,OAAoBO,EAA5B,EAA4BA,QAEtBe,EDjEH,SAAoBf,EAAmBpC,GAuE1C,OAtE0Bc,mBACtB,iBAAO,CACHsC,IAAK,SAACC,GACFxD,EAAYtB,KAAK8E,GACjBvD,EAAc,GACdC,EAASC,IAGbsD,KAAM,WACF,IAAMC,EAAO1D,EAAY2D,MACzB,GAAKD,EAEL,OADAzD,EAAYvB,KAAKgF,GACTA,EAAKE,MACT,IAAK,OACD,IAAQC,GAAR,OAAsBH,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMI,MAApBD,UACR1D,EAAKQ,MAAQR,EAAKQ,MAAMoD,QAAO,SAACC,GAAD,OAAOA,IAAMH,KAC5CtB,EAAQvE,cAActB,EAAYmH,IAClC,MACJ,IAAK,SACkBH,EAAKI,KAAhBG,OACDpB,SAAQ,SAAClG,GACZwD,EAAKQ,MACAoD,QAAO,SAACC,GAAD,OAAOA,EAAE7I,KAAOwB,EAAKxB,MAC5B0H,SAAQ,SAACmB,GACNA,EAAE/G,GAAKN,EAAKM,GACZ+G,EAAE5G,GAAKT,EAAKS,MAEpBF,EAASqF,EAAS5F,MAEtB,MACJ,IAAK,SACL,IAAK,SACD,IAAQqC,EAAY0E,EAAKI,KAAjB9E,QACJA,EAAQ7D,IAAIoH,EAAQvE,cAAcgB,EAAQ7D,MAK1D+I,KAAM,WACF,IAAMR,EAAOzD,EAAY0D,MACzB,GAAKD,EAEL,OADA1D,EAAYtB,KAAKgF,GACTA,EAAKE,MACT,IAAK,OACD,IAAQC,GAAR,OAAsBH,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMI,MAApBD,UACR1D,EAAKQ,MAAMjC,KAAKmF,GAChB3G,EAASqF,EAASsB,GAClB,MACJ,IAAK,SACiBH,EAAKI,KAAfK,MACFtB,SAAQ,SAAClG,GACXwD,EAAKQ,MACAoD,QAAO,SAACC,GAAD,OAAOA,EAAE7I,KAAOwB,EAAKxB,MAC5B0H,SAAQ,SAACmB,GACNA,EAAE/G,GAAKN,EAAKM,GACZ+G,EAAE5G,GAAKT,EAAKS,MAEpBF,EAASqF,EAAS5F,MAEtB,MACJ,IAAK,SACL,IAAK,SACD,IAAQqC,EAAY0E,EAAKI,KAAjB9E,QACRuD,EAAQO,SAAS9D,QAKjC,CAACmB,EAAMoC,ICJa6B,CAAW7B,EAASb,EAAYvB,MAExD+B,qBAAU,WAAO,IAAD,EACZ,UAAAlB,EAAab,YAAb,SAAmBQ,MAAMkC,SAAQ,SAACmB,GAAD,OAAO9G,EAASqF,EAASyB,QAC3D,CAACzB,EAASvB,IAEb,IAAMqD,EAAiBpC,iBAAuB,MAY9C,MAXgC,CAC5BM,UACAc,aACAgB,iBAEA3C,cACAC,iBACAC,oBAEA0B,mBAKD,ICzHHgB,EDyHSC,EAAgBC,IAAMC,cAA8B,MAEpDC,EAAmB,WAC5B,IAAMC,EAAUH,IAAMI,WAA2BL,GACjD,GAAgB,OAAZI,EACA,MAAM,IAAIE,MAAM,kEAEpB,OAAOF,G,eExHEG,EAA2C,WACpD,MAA6CJ,IAArCnC,EAAR,EAAQA,QAASc,EAAjB,EAAiBA,WAAY3B,EAA7B,EAA6BA,YACvBqD,EAAYlD,uBAAY,kBPVX,SAAUrC,GAC7B,IAAIwF,EAAQxF,EAAIyF,WAAU,GACtBC,EAAa5K,SAAS6K,eAAeC,mBACrC,MACA,0BACA,oDAEAC,EAAS/K,SAAS6K,eAAeG,eACjC,6BACA,MACAJ,GAEJG,EAAOE,aAAaP,EAAOK,EAAOG,iBAGlCvL,GAFc,IAAIwL,eAAgBC,kBAAkBL,GAGxCM,QAAQ,MAAO,UADf,gBAEA,IAAIC,MAAOC,qBAFX,QAGR,iBORgCC,CAAQzC,EAAWlB,WAAW,CAACkB,IAE7D0C,EAAWlE,uBAAY,WAEzB5H,EADaqG,KAAKC,UAAUmB,EAAYvB,MAC5B,gBAAe,IAAIyF,MAAOC,qBAA1B,SAAuD,gBACpE,CAACnE,EAAYvB,OAEV6F,EAAWnE,uBAAY,YPc1B,SAAoBoE,GACvB,IAAMC,EAAQ5L,SAASC,cAAc,SACrC2L,EAAMxL,KAAO,OACbwL,EAAMC,SAAW,SAACC,GACd,GAAKF,EAAMG,OAAgC,IAAvBH,EAAMG,MAAMnI,OAAhC,CACA,IAAM1D,EAAO0L,EAAMG,MAAM,GACnBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWhM,EAAM,SACxB8L,EAAOG,OAAS,SAACC,GAAiB,IAAD,EACvBxM,EAAO,UAAGwM,EAAYC,cAAf,aAAG,EAAoBC,OACpCX,EAAO/L,MAGfgM,EAAMnL,QO1BF8L,EAAW,SAACpG,GACR,IACI,IAAKA,EAAM,OACX,IAAMN,EAAOG,KAAKM,MAAMH,GACxBI,QAAQC,IAAI,cAAeX,GAC3BuB,EAAYvB,KAAOA,EACnBuB,EAAYvB,KAAKQ,MAAMkC,SAAQ,SAACmB,GAAD,OAAO9G,EAASqF,EAASyB,MAC1D,SACEnD,QAAQC,IAAI,6BAGrB,CAACyB,EAASb,IAEb,OACI,sBAAKoF,UAAU,uBAAf,UACI,wBAAQC,QAAShC,EAAjB,sBACA,wBAAQgC,QAAShB,EAAjB,uBACA,wBAAQgB,QAASf,EAAjB,2BDjCRgB,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUR,GAAU,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,UAAUlJ,OAAQI,IAAK,CAAE,IAAI+I,EAASD,UAAU9I,GAAI,IAAK,IAAImB,KAAO4H,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5H,KAAQkH,EAAOlH,GAAO4H,EAAO5H,IAAY,OAAOkH,IAA2Bc,MAAMC,KAAMN,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5H,EAAKnB,EAAnEqI,EAEzF,SAAuCU,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5H,EAAKnB,EAA5DqI,EAAS,GAAQkB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK/I,EAAI,EAAGA,EAAIuJ,EAAW3J,OAAQI,IAAOmB,EAAMoI,EAAWvJ,GAAQsJ,EAASG,QAAQtI,IAAQ,IAAakH,EAAOlH,GAAO4H,EAAO5H,IAAQ,OAAOkH,EAFxMqB,CAA8BX,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAK/I,EAAI,EAAGA,EAAI4J,EAAiBhK,OAAQI,IAAOmB,EAAMyI,EAAiB5J,GAAQsJ,EAASG,QAAQtI,IAAQ,GAAkByH,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5H,KAAgBkH,EAAOlH,GAAO4H,EAAO5H,IAAU,OAAOkH,EAMne,SAASyB,EAAUC,EAAMrG,GACvB,IAAIsG,EAAQD,EAAKC,MACbC,EAAUF,EAAKE,QACfC,EAAQb,EAAyBU,EAAMrB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtDwB,MAAO,6BACPC,WAAY,+BACZxM,MAAO,GACPC,OAAQ,GACRwM,QAAS,YACTC,IAAK5G,EACL,kBAAmBuG,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnN,GAAIoN,GACHD,GAAS,KAAMhE,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EnG,EAAG,kGAIP,IEhCI,EFgCA0K,EAA0B,aAAiBT,GE9B3C,GF+BW,IE/BC,CAAC,QAAS,YAE1B,SAAS,IAA2Q,OAA9P,EAAWlB,OAAOC,QAAU,SAAUR,GAAU,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,UAAUlJ,OAAQI,IAAK,CAAE,IAAI+I,EAASD,UAAU9I,GAAI,IAAK,IAAImB,KAAO4H,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5H,KAAQkH,EAAOlH,GAAO4H,EAAO5H,IAAY,OAAOkH,IAA2Bc,MAAMC,KAAMN,WAEhT,SAAS,EAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5H,EAAKnB,EAAnEqI,EAEzF,SAAuCU,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5H,EAAKnB,EAA5DqI,EAAS,GAAQkB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK/I,EAAI,EAAGA,EAAIuJ,EAAW3J,OAAQI,IAAOmB,EAAMoI,EAAWvJ,GAAQsJ,EAASG,QAAQtI,IAAQ,IAAakH,EAAOlH,GAAO4H,EAAO5H,IAAQ,OAAOkH,EAFxM,CAA8BU,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAK/I,EAAI,EAAGA,EAAI4J,EAAiBhK,OAAQI,IAAOmB,EAAMyI,EAAiB5J,GAAQsJ,EAASG,QAAQtI,IAAQ,GAAkByH,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5H,KAAgBkH,EAAOlH,GAAO4H,EAAO5H,IAAU,OAAOkH,EAMne,SAASmC,EAAQT,EAAMrG,GACrB,IAAIsG,EAAQD,EAAKC,MACbC,EAAUF,EAAKE,QACfC,EAAQ,EAAyBH,EAAM,GAE3C,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPC,WAAY,+BACZxM,MAAO,GACPC,OAAQ,GACRwM,QAAS,YACTC,IAAK5G,EACL,kBAAmBuG,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnN,GAAIoN,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EnK,EAAG,oKAIP,IChCI,EDgCA,EAA0B,aAAiB2K,GC9B3C,GD+BW,IC/BC,CAAC,QAAS,YAE1B,SAAS,IAA2Q,OAA9P,EAAW5B,OAAOC,QAAU,SAAUR,GAAU,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,UAAUlJ,OAAQI,IAAK,CAAE,IAAI+I,EAASD,UAAU9I,GAAI,IAAK,IAAImB,KAAO4H,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5H,KAAQkH,EAAOlH,GAAO4H,EAAO5H,IAAY,OAAOkH,IAA2Bc,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5H,EAAKnB,EAAnEqI,EAEzF,SAAuCU,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5H,EAAKnB,EAA5DqI,EAAS,GAAQkB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK/I,EAAI,EAAGA,EAAIuJ,EAAW3J,OAAQI,IAAOmB,EAAMoI,EAAWvJ,GAAQsJ,EAASG,QAAQtI,IAAQ,IAAakH,EAAOlH,GAAO4H,EAAO5H,IAAQ,OAAOkH,EAFxM,CAA8BU,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAK/I,EAAI,EAAGA,EAAI4J,EAAiBhK,OAAQI,IAAOmB,EAAMyI,EAAiB5J,GAAQsJ,EAASG,QAAQtI,IAAQ,GAAkByH,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5H,KAAgBkH,EAAOlH,GAAO4H,EAAO5H,IAAU,OAAOkH,EAMne,SAASoC,GAAQV,EAAMrG,GACrB,IAAIsG,EAAQD,EAAKC,MACbC,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,GAE3C,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPC,WAAY,+BACZxM,MAAO,GACPC,OAAQ,GACRwM,QAAS,YACTC,IAAK5G,EACL,kBAAmBuG,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnN,GAAIoN,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EnK,EAAG,iKAIP,IAAI,GAA0B,aAAiB4K,I,IAChC,I,MCtBFC,I,MAA2C,SAAC,GAMlD,IALHC,EAKE,EALFA,KACAX,EAIE,EAJFA,MACAxB,EAGE,EAHFA,UACAoC,EAEE,EAFFA,SACAnC,EACE,EADFA,QAEA,OACI,sBAAKuB,MAAOA,EAAOxB,UAAWqC,aAAK,cAAerC,GAAYC,QAASA,EAAvE,UACKkC,EACAC,OCJAE,I,MAA6C,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAAS9G,EAAoB,EAApBA,QAASpC,EAAW,EAAXA,KAS3E,OACI,sBAAK2G,UAAU,eAAf,UACI,cAAC,GAAD,CAAawB,MAAM,OAAOvB,QAASsC,EAAQ5F,KAAMwF,KAAM,cAAC,GAAD,MACvD,cAAC,GAAD,CAAaX,MAAM,OAAOvB,QAASsC,EAAQnF,KAAM+E,KAAM,cAAC,EAAD,MACvD,cAAC,GAAD,CAAaX,MAAM,QAAQvB,QAZrB,WAENuC,QAAQ,sCACRnJ,EAAKQ,MAAMkC,SAAQ,SAACmB,GAAD,OAAOzB,EAAQvE,cAActB,EAAYsH,OAC5D7D,EAAKQ,MAAQ,GACbT,EAASC,KAOkC8I,KAAM,cAAC,EAAD,WC1BhDM,I,MAAqB,WAC9B,MAGI7E,IAHJ,IACIhD,YAAeL,EADnB,EACmBA,WAAYC,EAD/B,EAC+BA,aAAcC,EAD7C,EAC6CA,kBACzCK,EAFJ,EAEIA,kBAEJ,OACI,sBAAKkF,UAAU,eAAf,UACI,8BACI,2CAEJ,8BACI,kCACI,uBACIpM,KAAK,WACL8O,QAAO,OAAEnI,QAAF,IAAEA,KACToI,SAAU,SAACrD,GAAD,OAAOxE,EAAkB,CAAEP,WAAY+E,EAAEO,OAAO6C,aAJlE,mBASJ,8BACI,kCACI,uBACI9O,KAAK,WACL8O,QAAO,OAAEjI,QAAF,IAAEA,KACTkI,SAAU,SAACrD,GAAD,OAAOxE,EAAkB,CAAEL,kBAAmB6E,EAAEO,OAAO6C,aAJzE,uBAUJ,8BACI,kCACI,uBACI9O,KAAK,WACL8O,QAAO,OAAElI,QAAF,IAAEA,KACTmI,SAAU,SAACrD,GAAD,OAAOxE,EAAkB,CAAEN,aAAc8E,EAAEO,OAAO6C,aAJpE,mBAUJ,mBAAG7O,KAAK,+CAA+CgM,OAAO,SAAS+C,IAAI,aAA3E,mCC1CL,SAASC,GAAT,GAAoF,IAAtD1M,EAAqD,EAArDA,GAAIG,EAAiD,EAAjDA,GAC/BwM,EAAKxM,EAAGpB,EAAIiB,EAAGjB,EACf6N,EAAKzM,EAAGnB,EAAIgB,EAAGhB,EACrB,OAAI6N,KAAKC,IAAIH,GAAME,KAAKC,IAAIF,GACjB,aAEJ,WAGJ,SAASG,GAAgB/M,EAAWG,GACvC,OAAO0M,KAAKG,MAAM7M,EAAGpB,EAAIiB,EAAGjB,IAAMoB,EAAGpB,EAAIiB,EAAGjB,IAAMoB,EAAGnB,EAAIgB,EAAGhB,IAAMmB,EAAGnB,EAAIgB,EAAGhB,IAGzE,IAAMiO,GAAsB,GCF5B,SAASC,GACZzK,EACA0K,EACAC,EACAC,GAEA,SAASC,EAAiBnE,GACtB,MAAO,CACHjL,GAAI,EACJa,EAAGoK,EAAEoE,MACLvO,EAAGmK,EAAEqE,MACL/P,KAAM,QACNgQ,QAAStE,EAAEsE,QACXC,eAAgB,CACZ,CACIC,WAAY,EACZJ,MAAOpE,EAAEoE,MACTC,MAAOrE,EAAEqE,SAKzB,IAAMI,EAAc,SAACzE,GAAD,OAAmBgE,EAAQG,EAAiBnE,KAC1D0E,EAAc,SAAC1E,GAAD,OAAmBiE,EAAOE,EAAiBnE,KACzD2E,EAAY,SAAC3E,GAAD,OAAmBkE,EAAMC,EAAiBnE,KAE5D,SAAS4E,EAAiB5E,GACtB,IAAM6E,EAAQ7E,EAAEuE,eAAe,GAC/B,MAAO,CACHxP,GAAI8P,EAAML,WACV5O,EAAGiP,EAAMT,MACTvO,EAAGgP,EAAMR,MACTS,QAASC,MAAMC,KAAKhF,EAAE8E,SACtBP,eAAgBQ,MAAMC,KAAKhF,EAAEuE,gBAC7BjQ,KAA0B,WAApBuQ,EAAMI,UAAyB,SAAW,SAGxD,IAAMC,EAAe,SAAClF,GAAD,OAAmBgE,EAAQY,EAAiB5E,KAC3DmF,EAAc,SAACnF,GAAD,OAAmBiE,EAAOW,EAAiB5E,KACzDoF,EAAa,SAACpF,GAAD,OAAmBkE,EAAMU,EAAiB5E,KAU7D,OARA1G,EAAQ+L,iBAAiB,YAAaZ,GACtCnL,EAAQ+L,iBAAiB,YAAaX,GACtCpL,EAAQ+L,iBAAiB,UAAWV,GAEpCrL,EAAQ+L,iBAAiB,aAAcH,GACvC5L,EAAQ+L,iBAAiB,YAAaF,GACtC7L,EAAQ+L,iBAAiB,WAAYD,GAE9B,WACH9L,EAAQgM,oBAAoB,YAAab,GACzCnL,EAAQgM,oBAAoB,YAAaZ,GACzCpL,EAAQgM,oBAAoB,UAAWX,GAEvCrL,EAAQgM,oBAAoB,aAAcJ,GAC1C5L,EAAQgM,oBAAoB,YAAaH,GACzC7L,EAAQgM,oBAAoB,WAAYF,ICjEhD,SAASG,GAAkBhL,GACvB,OAAOA,EACFoD,QAAO,SAACC,GAAD,OAAOA,EAAE/G,GAAGH,QAAUkH,EAAE5G,GAAGN,UAClCW,KAAI,SAACuG,GAMF,MALoB,CAChB7I,GAAI6I,EAAE7I,GACN8B,GAAI,CAAEjB,EAAGgI,EAAE/G,GAAGjB,EAAGC,EAAG+H,EAAE/G,GAAGhB,GACzBmB,GAAI,CAAEpB,EAAGgI,EAAE5G,GAAGpB,EAAGC,EAAG+H,EAAE5G,GAAGnB,OAMlC,ICnBH,GDmBS2P,GAAuB,WAChC,MACIlH,IADIpB,EAAR,EAAQA,gBAAiBe,EAAzB,EAAyBA,eAAgB9B,EAAzC,EAAyCA,QAASb,EAAlD,EAAkDA,YAAaE,EAA/D,EAA+DA,kBAEvDV,EAAwDQ,EAAxDR,MAAOG,EAAiDK,EAAjDL,WAAYC,EAAqCI,EAArCJ,aAAcH,EAAuBO,EAAvBP,aAAchB,EAASuB,EAATvB,KA8FvD,OA5FA+B,qBAAU,WACN,GAAKmC,EAAelC,SAA4B,WAAjBhB,EAA/B,CAIA,IAAI0K,EAAsB,GAmF1B,OAAO1B,GAAa9F,EAAelC,SAjFnB,SAACiE,GAAkB,IAAD,EAC1B/E,GAAyB,UAAX+E,EAAE1L,OACpBkH,EAAkB,CAAER,aAAa,IACjC,UAAAgF,EAAEuE,sBAAF,SAAkB9H,SAAQ,SAACoI,GACvB,IAAM9P,EAAK8P,EAAML,WACX5O,EAAIiP,EAAMT,MAAQtJ,EAClBjF,EAAIgP,EAAMR,MAAQvJ,EACxBf,EAAKQ,MACAmL,SAAQ,SAACpI,GAAD,MAAU,CAACA,EAAKzG,GAAIyG,EAAKtG,OACjC2G,QAAO,SAACgI,GAAD,OAAO/B,GAAgB+B,EAAG,CAAE/P,IAAGC,OAAQQ,KAC9CoG,SAAQ,SAACkJ,GACNA,EAAEjP,OAAS3B,KAGnB0Q,EAAcF,GAAkBxL,EAAKQ,cAI9B,SAACyF,GAAkB,IAAD,GACd,UAAXA,EAAE1L,MAAqB0L,EAAEsE,WAC7B,UAAAtE,EAAEuE,sBAAF,SAAkB9H,SAAQ,SAACoI,GACvB,IAAM9P,EAAK8P,EAAML,WACX5O,EAAIiP,EAAMT,MAAQtJ,EAClBjF,EAAIgP,EAAMR,MAAQvJ,EAClB8K,EAAgB7L,EAAKQ,MACtBmL,SAAQ,SAAC9H,GAAD,MAAO,CAACA,EAAE/G,GAAI+G,EAAE5G,OACxB2G,QAAO,SAACgI,GAAD,OAAOA,EAAEjP,SAAW3B,KAKhC,GAJA6Q,EAAcnJ,SAAQ,SAACkJ,GACnBA,EAAE/P,EAAIA,EACN+P,EAAE9P,EAAIA,KAENqF,GAAgB0K,EAAc9N,OAAS,EAAG,CAC1C,IAAM+N,EFZnB,SAA2BtL,EAAeoC,EAAiBlG,GAC9D,IAAMoP,EAAyB,GA4B/B,OA3BAtL,EAAMkC,SAAQ,SAACmB,GACP8F,KAAKC,IAAI/F,EAAE/G,GAAGjB,EAAIa,EAAMb,GAAKkO,KAC7B+B,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE/G,KACnC8F,EAAOF,SAAQ,SAACkJ,GACZA,EAAE/P,EAAIgI,EAAE/G,GAAGjB,MAGf8N,KAAKC,IAAI/F,EAAE/G,GAAGhB,EAAIY,EAAMZ,GAAKiO,KAC7B+B,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE/G,KACnC8F,EAAOF,SAAQ,SAACkJ,GACZA,EAAE9P,EAAI+H,EAAE/G,GAAGhB,MAIf6N,KAAKC,IAAI/F,EAAE5G,GAAGpB,EAAIa,EAAMb,GAAKkO,KAC7B+B,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE5G,KACnC2F,EAAOF,SAAQ,SAACkJ,GACZA,EAAE/P,EAAIgI,EAAE5G,GAAGpB,MAGf8N,KAAKC,IAAI/F,EAAE5G,GAAGnB,EAAIY,EAAMZ,GAAKiO,KAC7B+B,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE5G,KACnC2F,EAAOF,SAAQ,SAACkJ,GACZA,EAAE9P,EAAI+H,EAAE5G,GAAGnB,SAIhBgQ,EEjB2BC,CAAkB/L,EAAKQ,MAAOqL,EAAe,CAAEhQ,IAAGC,MACpEqB,EAAeiF,EAASyJ,EAAc,GAAIC,GAE9C9L,EAAKQ,MACAoD,QAAO,SAACC,GAAD,OAAOA,EAAE/G,GAAGH,QAAUkH,EAAE5G,GAAGN,UAClC+F,SAAQ,SAACmB,GAAD,OAAO9G,EAASqF,EAASyB,aAIhC,SAACoC,GAAkB,IAAD,IAC5B,UAAAA,EAAEuE,sBAAF,SAAkB9H,SAAQ,SAACoI,GACvB,IAAM9P,EAAK8P,EAAML,WACjBzK,EAAKQ,MACAmL,SAAQ,SAAC9H,GAAD,MAAO,CAACA,EAAE/G,GAAI+G,EAAE5G,OACxB2G,QAAO,SAAC/H,GAAD,OAAOA,EAAEc,SAAW3B,KAC3B0H,SAAQ,SAACkJ,GACN,GAAIzK,EAAc,CACd,IAAM6K,EAAahM,EAAKQ,MACnBmL,SAAQ,SAAC9H,GAAD,MAAO,CAACA,EAAE/G,GAAI+G,EAAE5G,OACxB2G,QAAO,SAACqI,GAAD,OAAOA,IAAML,KACpBM,MAAK,SAACD,GAAD,OAAOpC,GAAgBoC,EAAGL,IAAMtP,KACtC0P,IACAJ,EAAE/P,EAAImQ,EAAWnQ,EACjB+P,EAAE9P,EAAIkQ,EAAWlQ,OAIjCkE,EAAKQ,MACAoD,QAAO,SAACC,GAAD,OAAOA,EAAE/G,GAAGH,QAAUkH,EAAE5G,GAAGN,UAClC+F,SAAQ,SAACmB,GACNA,EAAE/G,GAAGH,YAAS8C,EACdoE,EAAE5G,GAAGN,YAAS8C,EACd1C,EAASqF,EAASyB,MAE1BjG,EAAiBwE,EAAS,CAAEzF,OAAQ3B,EAAIa,EAAG,EAAGC,EAAG,IAEjDqH,EAAgBC,IAAI,CAChBK,KAAM,SACNE,KAAM,CACFG,OAAQ4H,EACR1H,MAAOwH,GAAkBxL,EAAKQ,aAIhB,KAAtB,UAAAyF,EAAE8E,eAAF,eAAWhN,SACX0D,EAAkB,CAAER,aAAa,UAM1C,CAACiD,EAAelC,QAASjB,EAAOG,EAAYC,EAAcH,IAEtD,ME/GLmL,GAAqB,CAAC,SAAU,UAEzBC,GAAoB,WAC7B,MACI7H,IADIpB,EAAR,EAAQA,gBAAiBf,EAAzB,EAAyBA,QAAS8B,EAAlC,EAAkCA,eAAgB3C,EAAlD,EAAkDA,YAAaE,EAA/D,EAA+DA,kBAEvDV,EAAkDQ,EAAlDR,MAAOG,EAA2CK,EAA3CL,WAAYC,EAA+BI,EAA/BJ,aAAcH,EAAiBO,EAAjBP,aA8DzC,OA5DAe,qBAAU,WACN,GAAKmC,EAAelC,SAAYmK,GAAMxO,SAASqD,GAA/C,CAIA,IACIhG,EADA4H,EAAsB,GAGpByJ,EAAmB,WACrB,MAAO,CACHvN,YAAaiC,GAA0B,WAAjBC,EAA4B,GAAK,KACvD7E,OAAyB,WAAjB6E,EAA4B,OAAS,SA6CrD,OAAOgJ,GAAa9F,EAAelC,SAzCnB,SAACiE,GAAkB,IAAD,MAC9B,KAAI/E,GAAyB,UAAX+E,EAAE1L,SACL,UAAX0L,EAAE1L,MAAoB0L,EAAE8E,QAAShN,OAAS,GAA9C,CACA0D,EAAkB,CAAER,aAAa,IACjC,IAAM6J,EAAQ7E,EAAE8E,SAAW9E,EAAE8E,QAAQ,GAC/BlP,GAAI,iBAACiP,QAAD,IAACA,OAAD,EAACA,EAAOT,aAAR,QAAiBpE,EAAEpK,GAAKkF,EAC5BjF,GAAI,iBAACgP,QAAD,IAACA,OAAD,EAACA,EAAOR,aAAR,QAAiBrE,EAAEnK,GAAKiF,EAClC6B,EAAOrE,KAAK,CAAE1C,IAAGC,IAAGwQ,SAAQ,iBAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAOyB,aAAT,QAAkB,KAC9C,MAAgCF,IAAxBlQ,EAAR,EAAQA,OAAQ2C,EAAhB,EAAgBA,YAChB9D,EAAKoH,EAAQO,SAAS,CAClBC,SACAzG,SACA2C,cACA7D,QAAS,YAIF,SAACgL,GAAkB,IAAD,MAC7B,KAAI/E,GAAyB,UAAX+E,EAAE1L,QACL,UAAX0L,EAAE1L,MAAqB0L,EAAEsE,SAA7B,CACA,IAAMO,EAAQ7E,EAAE8E,SAAW9E,EAAE8E,QAAQ,GAC/BlP,GAAI,iBAACiP,QAAD,IAACA,OAAD,EAACA,EAAOT,aAAR,QAAiBpE,EAAEpK,GAAKkF,EAC5BjF,GAAI,iBAACgP,QAAD,IAACA,OAAD,EAACA,EAAOR,aAAR,QAAiBrE,EAAEnK,GAAKiF,EAClC6B,EAAQrE,KAAK,CAAE1C,IAAGC,IAAGwQ,SAAQ,iBAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAOyB,aAAT,QAAkB,KAC/C,IAAQzN,EAAgBuN,IAAhBvN,YACRsD,EAAQO,SAAS,CAAE3H,KAAI4H,SAAQ9D,oBAGrB,SAACmH,GACX,IAAMuG,EAAgBH,IACtBlJ,EAAgBC,IAAI,CAChBK,KAAMzC,EACN2C,KAAM,CAAE9E,QAAQ,yBAAG7D,KAAI4H,UAAW4J,GAAnB,IAAkCvR,QAAS,WAE9DD,OAAKyE,EACLmD,EAAS,GACJqD,EAAE8E,SAAgC,IAArB9E,EAAE8E,QAAQhN,QACxB0D,EAAkB,CAAER,aAAa,UAM1C,CAACiD,EAAelC,QAASjB,EAAOG,EAAYC,EAAcH,IAEtD,MDtEP,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAW+F,OAAOC,QAAU,SAAUR,GAAU,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,UAAUlJ,OAAQI,IAAK,CAAE,IAAI+I,EAASD,UAAU9I,GAAI,IAAK,IAAImB,KAAO4H,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5H,KAAQkH,EAAOlH,GAAO4H,EAAO5H,IAAY,OAAOkH,IAA2Bc,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5H,EAAKnB,EAAnEqI,EAEzF,SAAuCU,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5H,EAAKnB,EAA5DqI,EAAS,GAAQkB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK/I,EAAI,EAAGA,EAAIuJ,EAAW3J,OAAQI,IAAOmB,EAAMoI,EAAWvJ,GAAQsJ,EAASG,QAAQtI,IAAQ,IAAakH,EAAOlH,GAAO4H,EAAO5H,IAAQ,OAAOkH,EAFxM,CAA8BU,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAK/I,EAAI,EAAGA,EAAI4J,EAAiBhK,OAAQI,IAAOmB,EAAMyI,EAAiB5J,GAAQsJ,EAASG,QAAQtI,IAAQ,GAAkByH,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5H,KAAgBkH,EAAOlH,GAAO4H,EAAO5H,IAAU,OAAOkH,EAMne,SAASiG,GAAUvE,EAAMrG,GACvB,IAAIsG,EAAQD,EAAKC,MACbC,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPC,WAAY,+BACZxM,MAAO,GACPC,OAAQ,GACRwM,QAAS,YACTC,IAAK5G,EACL,kBAAmBuG,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnN,GAAIoN,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EnK,EAAG,+TAIP,IEhCI,GFgCA,GAA0B,aAAiByO,IE9B3C,IF+BW,IE/BC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAW1F,OAAOC,QAAU,SAAUR,GAAU,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,UAAUlJ,OAAQI,IAAK,CAAE,IAAI+I,EAASD,UAAU9I,GAAI,IAAK,IAAImB,KAAO4H,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5H,KAAQkH,EAAOlH,GAAO4H,EAAO5H,IAAY,OAAOkH,IAA2Bc,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5H,EAAKnB,EAAnEqI,EAEzF,SAAuCU,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5H,EAAKnB,EAA5DqI,EAAS,GAAQkB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK/I,EAAI,EAAGA,EAAIuJ,EAAW3J,OAAQI,IAAOmB,EAAMoI,EAAWvJ,GAAQsJ,EAASG,QAAQtI,IAAQ,IAAakH,EAAOlH,GAAO4H,EAAO5H,IAAQ,OAAOkH,EAFxM,CAA8BU,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAK/I,EAAI,EAAGA,EAAI4J,EAAiBhK,OAAQI,IAAOmB,EAAMyI,EAAiB5J,GAAQsJ,EAASG,QAAQtI,IAAQ,GAAkByH,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5H,KAAgBkH,EAAOlH,GAAO4H,EAAO5H,IAAU,OAAOkH,EAMne,SAASkG,GAAUxE,EAAMrG,GACvB,IAAIsG,EAAQD,EAAKC,MACbC,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPC,WAAY,+BACZxM,MAAO,GACPC,OAAQ,GACRwM,QAAS,YACTC,IAAK5G,EACL,kBAAmBuG,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnN,GAAIoN,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EnK,EAAG,sRAIP,IChCI,GDgCA,GAA0B,aAAiB0O,IC9B3C,ID+BW,IC/BC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAW3F,OAAOC,QAAU,SAAUR,GAAU,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,UAAUlJ,OAAQI,IAAK,CAAE,IAAI+I,EAASD,UAAU9I,GAAI,IAAK,IAAImB,KAAO4H,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5H,KAAQkH,EAAOlH,GAAO4H,EAAO5H,IAAY,OAAOkH,IAA2Bc,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5H,EAAKnB,EAAnEqI,EAEzF,SAAuCU,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5H,EAAKnB,EAA5DqI,EAAS,GAAQkB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK/I,EAAI,EAAGA,EAAIuJ,EAAW3J,OAAQI,IAAOmB,EAAMoI,EAAWvJ,GAAQsJ,EAASG,QAAQtI,IAAQ,IAAakH,EAAOlH,GAAO4H,EAAO5H,IAAQ,OAAOkH,EAFxM,CAA8BU,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAK/I,EAAI,EAAGA,EAAI4J,EAAiBhK,OAAQI,IAAOmB,EAAMyI,EAAiB5J,GAAQsJ,EAASG,QAAQtI,IAAQ,GAAkByH,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5H,KAAgBkH,EAAOlH,GAAO4H,EAAO5H,IAAU,OAAOkH,EAMne,SAASmG,GAAUzE,EAAMrG,GACvB,IAAIsG,EAAQD,EAAKC,MACbC,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPC,WAAY,+BACZxM,MAAO,GACPC,OAAQ,GACRwM,QAAS,YACTC,IAAK5G,EACL,kBAAmBuG,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnN,GAAIoN,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EnK,EAAG,0JAIP,IChCI,GDgCA,GAA0B,aAAiB2O,IC9B3C,ID+BW,IC/BC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAW5F,OAAOC,QAAU,SAAUR,GAAU,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,UAAUlJ,OAAQI,IAAK,CAAE,IAAI+I,EAASD,UAAU9I,GAAI,IAAK,IAAImB,KAAO4H,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5H,KAAQkH,EAAOlH,GAAO4H,EAAO5H,IAAY,OAAOkH,IAA2Bc,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5H,EAAKnB,EAAnEqI,EAEzF,SAAuCU,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5H,EAAKnB,EAA5DqI,EAAS,GAAQkB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK/I,EAAI,EAAGA,EAAIuJ,EAAW3J,OAAQI,IAAOmB,EAAMoI,EAAWvJ,GAAQsJ,EAASG,QAAQtI,IAAQ,IAAakH,EAAOlH,GAAO4H,EAAO5H,IAAQ,OAAOkH,EAFxM,CAA8BU,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAK/I,EAAI,EAAGA,EAAI4J,EAAiBhK,OAAQI,IAAOmB,EAAMyI,EAAiB5J,GAAQsJ,EAASG,QAAQtI,IAAQ,GAAkByH,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5H,KAAgBkH,EAAOlH,GAAO4H,EAAO5H,IAAU,OAAOkH,EAMne,SAASoG,GAAQ1E,EAAMrG,GACrB,IAAIsG,EAAQD,EAAKC,MACbC,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPC,WAAY,+BACZxM,MAAO,GACPC,OAAQ,GACRwM,QAAS,YACTC,IAAK5G,EACL,kBAAmBuG,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnN,GAAIoN,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EnK,EAAG,uHAIP,IAAI,GAA0B,aAAiB4O,ICpBlCC,IDqBE,I,MCrBiC,WAC5C,MAGItI,IAFevD,EADnB,EACIO,YAAeP,aACfS,EAFJ,EAEIA,kBAYEqL,EAA2C,SAAC,GAA0B,IAAxBvS,EAAuB,EAAvBA,KAAMwS,EAAiB,EAAjBA,KAAMjE,EAAW,EAAXA,KAC5D,OACI,cAAC,GAAD,CACIX,MAAO4E,EACPnG,QAAS,WAZjBnF,EAAkB,CAAET,aAYmBzG,KAC/BoM,UAAWqC,aAAKhI,IAAiBzG,GAAQ,uBAH7C,gBAKKuO,QALL,IAKKA,IAAQiE,KAKrB,OACI,sBAAKpG,UAAU,mBAAf,UACI,cAACmG,EAAD,CAAavS,KAAK,OAAOwS,KAAK,OAAOjE,KAAM,cAAC,GAAD,MAC3C,cAACgE,EAAD,CAAavS,KAAK,SAASwS,KAAK,SAASjE,KAAM,cAAC,GAAD,MAC/C,cAACgE,EAAD,CAAavS,KAAK,SAASwS,KAAK,SAASjE,KAAM,cAAC,GAAD,MAC/C,cAACgE,EAAD,CAAavS,KAAK,SAASwS,KAAK,SAASjE,KAAM,cAAC,GAAD,WC/B9CkE,GAAqB,WAC9B,MACIzI,IADIpB,EAAR,EAAQA,gBAAiBe,EAAzB,EAAyBA,eAAgB9B,EAAzC,EAAyCA,QAASb,EAAlD,EAAkDA,YAAaE,EAA/D,EAA+DA,kBAEvDV,EAA2EQ,EAA3ER,MAAOG,EAAoEK,EAApEL,WAAYC,EAAwDI,EAAxDJ,aAAcC,EAA0CG,EAA1CH,kBAAmBJ,EAAuBO,EAAvBP,aAAchB,EAASuB,EAATvB,KA2G1E,OAzGA+B,qBAAU,WACN,GAAKmC,EAAelC,SAA4B,SAAjBhB,EAA/B,CAoGA,OAAOgJ,GAAa9F,EAAelC,SAxFnB,SAACiE,GACb,IAAMpK,EAAIoK,EAAEpK,EAAIkF,EACVjF,EAAImK,EAAEnK,EAAIiF,EAChB,IAAIG,GAAyB,UAAX+E,EAAE1L,KACpB,GAAe,UAAX0L,EAAE1L,MAAoB0L,EAAE8E,QAAShN,OAAS,GAZnC,SAAC/C,GACZ,IAAMiS,EAAYjN,EAAKQ,MAAM0M,WAAU,SAACrR,GAAD,OAAOA,EAAEc,SAAW3B,KAC3D,GAAIiS,GAAa,EAAG,CAChB,IAAMzM,EAAQR,EAAKQ,MAAM2M,OAAOF,EAAW,GAC3C7K,EAAQvE,cAActB,EAAYiE,EAAM,MASxC4M,CAAOnH,EAAEjL,QADb,CAIAyG,EAAkB,CAAER,aAAa,IACjC,IAAMoM,EACFrN,EAAKQ,MAAMzC,OAAS,EACd4L,KAAK2D,IAAIhG,MACL,KACAtH,EAAKQ,MAAMlD,KAAI,SAACuG,GAAD,OAAO0J,SAAS1J,EAAE7I,QACjC,EACJ,EACJwB,EAAa,CACfxB,GAAG,GAAD,OAAKqS,GACP1Q,OAAQsJ,EAAEjL,GACV8B,GAAI,CAAEjB,IAAGC,KACTmB,GAAI,CAAEpB,IAAGC,MAEb,GAAIqF,EAAc,CACd,IAAM6K,EAAahM,EAAKQ,MACnBmL,SAAQ,SAACpI,GAAD,MAAU,CAACA,EAAKzG,GAAIyG,EAAKtG,OACjCiP,MAAK,SAACN,GAAD,OAAO/B,GAAgB+B,EAAGpP,EAAKM,KAAOR,KAE5C0P,IACAxP,EAAKM,GAAGjB,EAAImQ,EAAWnQ,EACvBW,EAAKM,GAAGhB,EAAIkQ,EAAWlQ,EACvBU,EAAKS,GAAGpB,EAAImQ,EAAWnQ,EACvBW,EAAKS,GAAGnB,EAAIkQ,EAAWlQ,GAG/BkE,EAAKQ,MAAMjC,KAAK/B,GAChBI,EAAcwF,EAAS5F,OAGZ,SAACyJ,GACZ,GAAe,UAAXA,EAAE1L,MAAqB0L,EAAEsE,QAA7B,CACA,IAAM1O,EAAIoK,EAAEpK,EAAIkF,EACVjF,EAAImK,EAAEnK,EAAIiF,EACVvE,EAAOwD,EAAKQ,MAAM0L,MAAK,SAACrQ,GAAD,OAAOA,EAAEc,SAAWsJ,EAAEjL,MACnD,GAAIwB,EAAM,CAGN,GAFAA,EAAKS,GAAGpB,EAAIA,EACZW,EAAKS,GAAGnB,EAAIA,EACRsF,EAAmB,CAEC,eADAoI,GAAmB,CAAE1M,GAAIN,EAAKM,GAAIG,GAAI,CAAEpB,IAAGC,OAE3DU,EAAKS,GAAGnB,EAAIU,EAAKM,GAAGhB,EAEpBU,EAAKS,GAAGpB,EAAIW,EAAKM,GAAGjB,EAExB,IAAMuB,ET5DnB,SAA+BoD,EAAehE,GACjD,IAAMgR,EAAchE,GAAmBhN,GACjCsP,EAAyB,GAsB/B,OArBAtL,EAAMkC,SAAQ,SAACmB,GACX,GAAIrH,IAASqH,EAAb,CACA,IAAM4J,EAAQ5J,EAAE/G,GAAGjB,IAAMgI,EAAE5G,GAAGpB,EAAI,WAAagI,EAAE/G,GAAGhB,IAAM+H,EAAE5G,GAAGnB,EAAI,aAAe,QAC9D,eAAhB0R,GAA0C,eAAVC,EAC5B9D,KAAKC,IAAIpN,EAAKS,GAAGpB,EAAIgI,EAAE/G,GAAGjB,GAAKkO,IAC/BvN,EAAKS,GAAGpB,EAAIgI,EAAE/G,GAAGjB,EACjBiQ,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE/G,MAC5B6M,KAAKC,IAAIpN,EAAKS,GAAGpB,EAAIgI,EAAE5G,GAAGpB,GAAKkO,KACtCvN,EAAKS,GAAGpB,EAAIgI,EAAE5G,GAAGpB,EACjBiQ,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE5G,MAEhB,aAAhBuQ,GAAwC,aAAVC,IACjC9D,KAAKC,IAAIpN,EAAKS,GAAGnB,EAAI+H,EAAE/G,GAAGhB,GAAKiO,IAC/BvN,EAAKS,GAAGnB,EAAI+H,EAAE/G,GAAGhB,EACjBgQ,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE/G,MAC5B6M,KAAKC,IAAIpN,EAAKS,GAAGnB,EAAI+H,EAAE5G,GAAGnB,GAAKiO,KACtCvN,EAAKS,GAAGnB,EAAI+H,EAAE5G,GAAGnB,EACjBgQ,EAAUvN,KAAK,CAAE/B,KAAMqH,EAAGnH,MAAOmH,EAAE5G,WAIxC6O,ESoC4B4B,CAAsB1N,EAAKQ,MAAOhE,GACrDW,EAAeiF,EAAS5F,EAAKS,GAAIG,GAErCL,EAASqF,EAAS5F,QAIZ,SAACyJ,GACX,IAAQjL,EAAgBiL,EAAhBjL,GAAI+P,EAAY9E,EAAZ8E,QACNvO,EAAOwD,EAAKQ,MAAM0L,MAAK,SAACrQ,GAAD,OAAOA,EAAEc,SAAW3B,KACjD,GAAIwB,EAAM,CACN,GAAI2E,EAAc,CACd,IAAM6K,EAAahM,EAAKQ,MACnBoD,QAAO,SAACC,GAAD,OAAOA,IAAMrH,KACpBmP,SAAQ,SAACpI,GAAD,MAAU,CAACA,EAAKzG,GAAIyG,EAAKtG,OACjCiP,MAAK,SAACN,GAAD,OAAO/B,GAAgB+B,EAAGpP,EAAKS,KAAOX,KAE5C0P,IACAxP,EAAKS,GAAGpB,EAAImQ,EAAWnQ,EACvBW,EAAKS,GAAGnB,EAAIkQ,EAAWlQ,GAG/B8B,EAAiBwE,EAAS5F,EAAKS,IAC/BF,EAASqF,EAAS5F,GAClBA,EAAKG,YAAS8C,EACd0D,EAAgBC,IAAI,CAChBK,KAAM,OACNE,KAAM,CAAED,UAAWlH,KAGH,KAAb,OAAPuO,QAAO,IAAPA,OAAA,EAAAA,EAAShN,SACT0D,EAAkB,CAAER,aAAa,UAM1C,CAACiD,EAAelC,QAASd,EAAYC,EAAcC,EAAmBJ,IAElE,MC7DI2M,OAlDf,WACI,IAAMC,EAAgBhN,IACduC,EAAsEyK,EAAtEzK,gBAAiBe,EAAqD0J,EAArD1J,eAAgB9B,EAAqCwL,EAArCxL,QAASc,EAA4B0K,EAA5B1K,WAAY3B,EAAgBqM,EAAhBrM,YACtDN,EAAgBM,EAAhBN,YAcR,OAZAc,qBAAU,WACN,IAAMqJ,EAAc,SAACnF,GACbhF,GACAgF,EAAE4H,kBAIV,OADA1T,SAASmR,iBAAiB,YAAaF,EAAa,CAAE0C,SAAS,IACxD,WACH3T,SAASoR,oBAAoB,YAAaH,MAE/C,CAACnK,IAGA,cAACmD,EAAc2J,SAAf,CAAwBC,MAAOJ,EAA/B,SACI,qCACI,cAACK,EAAA,EAAD,UACI,kDAEJ,iCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,qBAAKxF,IAAKvE,EAAgByC,UAAU,aAApC,SACI,sBAAK8B,IAAKvF,EAAYgL,MAAO,CAAEnS,MAAO,OAAQC,OAAQ,QAAtD,UACI,mBAAGhB,GAAG,QACN,mBAAGA,GAAG,UACN,mBAAGA,GAAG,eAGd,cAAC,GAAD,IACA,sBAAK2L,UAAU,YAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,OAEJ,cAAC,GAAD,CACIuC,QAAS/F,EACTnD,KAAMuB,EAAYvB,KAClBoC,QAASA,aCxClB+L,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OAAO,cAAC,GAAD,IAAS1U,SAASqF,eAAe,SAKjD2O,O","file":"static/js/main.51e299b6.chunk.js","sourcesContent":["export const saveSvg = function (svg: SVGSVGElement) {\n    var clone = svg.cloneNode(true);\n    var svgDocType = document.implementation.createDocumentType(\n        'svg',\n        '-//W3C//DTD SVG 1.1//EN',\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd',\n    );\n    var svgDoc = document.implementation.createDocument(\n        'http://www.w3.org/2000/svg',\n        'svg',\n        svgDocType,\n    );\n    svgDoc.replaceChild(clone, svgDoc.documentElement);\n    var svgData = new XMLSerializer().serializeToString(svgDoc);\n\n    downloadFile(\n        svgData.replace(/></g, '>\\n\\r<'),\n        `Plan ${new Date().toLocaleDateString()}.svg`,\n        'image/svg+xml',\n    );\n};\n\nexport function downloadFile(content: any, fileName: string, contentType: string) {\n    var a = document.createElement('a');\n    var file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n    a.remove();\n}\n\nexport function uploadFile(onLoad: (result?: string | null) => void) {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.onchange = (e) => {\n        if (!input.files || input.files.length === 0) return;\n        const file = input.files[0];\n        const reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = (readerEvent) => {\n            const content = readerEvent.target?.result as string | null;\n            onLoad(content);\n        };\n    };\n    input.click();\n}\n","import { IDrawing } from '../hooks/useDrawing';\nimport { GuideLine } from './Geometry';\nimport { Line, Point } from './GlobalContext';\n\nexport type DrawEvent = { x: number; y: number; id: number };\n\nexport type DrawPoint = Point & {\n    pressure?: number;\n    color?: string;\n};\n\ntype Context = IDrawing;\n\nexport function drawLine(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    strokeDashArray?: string,\n) {\n    ctx.drawLine({ id, groupId, x1, y1, x2, y2, strokeDashArray });\n}\nexport function drawSquare(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    size: number,\n    fill?: string,\n) {\n    ctx.drawRect({\n        id,\n        groupId,\n        x: xc - size / 2,\n        y: yc - size / 2,\n        width: size,\n        height: size,\n        fill,\n    });\n}\n\nexport function drawCircle(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    radius: number,\n    fill?: string,\n    stroke?: string,\n) {\n    ctx.drawCircle({ id, groupId, x: xc, y: yc, rx: radius, ry: radius, fill, stroke });\n}\n\nexport const wallPointSize = 10;\nexport const wallCircleRadius = 15;\n\nexport const wallGroupId = (wall: Line) => `w${wall.id}`;\nexport const pointGroupId = (point: Point) => `p${point.editId}`;\n\nexport function drawWallStart(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}s`, gid, wall.p1.x, wall.p1.y, wallPointSize, 'green');\n}\nexport function drawWallEnd(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}e`, gid, wall.p2.x, wall.p2.y, wallPointSize, 'red');\n}\n\nexport function drawWall(ctx: Context, wall: Line) {\n    const gid = ctx.createGroup(wallGroupId(wall), 'walls');\n    drawCircle(ctx, `w${wall.id}c1`, gid, wall.p1.x, wall.p1.y, wallCircleRadius, 'none', '#000');\n    drawCircle(ctx, `w${wall.id}c2`, gid, wall.p2.x, wall.p2.y, wallCircleRadius, 'none', '#000');\n    drawLine(ctx, `w${wall.id}l`, gid, wall.p1.x, wall.p1.y, wall.p2.x, wall.p2.y);\n    drawWallStart(ctx, wall);\n    drawWallEnd(ctx, wall);\n}\n\nexport function drawGuideLines(ctx: Context, point: Point, guideLines: GuideLine[]) {\n    const groupId = ctx.createGroup(pointGroupId(point), 'guide');\n    const guideLinesIds = guideLines.map((guideLine) => {\n        const guideLineId = `p${point.editId}g${guideLine.wall.id}`;\n        drawLine(\n            ctx,\n            guideLineId,\n            groupId,\n            point.x,\n            point.y,\n            guideLine.point.x,\n            guideLine.point.y,\n            '10 10',\n        );\n        return guideLineId;\n    });\n    ctx.removeElements((child) => !guideLinesIds.includes((child as Element).id), groupId);\n}\n\nexport function removeGuideLines(ctx: Context, point: Point) {\n    ctx.removeElement(pointGroupId(point), 'guide');\n}\n","export function getSvgPathFromStroke(stroke: number[][]) {\n    if (!stroke.length) return '';\n\n    const d = stroke.reduce(\n        (acc, [x0, y0], i, arr) => {\n            const [x1, y1] = arr[(i + 1) % arr.length];\n            acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n            return acc;\n        },\n        ['M', ...stroke[0], 'Q'],\n    );\n\n    d.push('Z');\n    return d.join(' ');\n}\n","import React, { useEffect, useRef } from 'react';\nimport { getStroke } from 'perfect-freehand';\nimport { getSvgPathFromStroke } from '../utils/svg/convert';\n\ntype IDrawIdOptions = {\n    id?: string;\n    groupId?: string;\n};\n\ntype IDrawStrokeOptions = {\n    stroke?: string;\n    strokeWidth?: number;\n    strokeDashArray?: string;\n};\ntype IDrawShapeOptions = {\n    fill?: string;\n} & IDrawStrokeOptions;\n\ntype IDrawLineOptions = {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n} & IDrawStrokeOptions &\n    IDrawIdOptions;\n\ntype IDrawRectOptions = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IDrawCircleOptions = {\n    x: number;\n    y: number;\n    rx: number;\n    ry: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IPathPoint = { x: number; y: number; pressure?: number };\n\nexport type IDrawPathOptions = {\n    points: IPathPoint[];\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\nexport type IDrawing = {\n    createGroup: (id?: string, groupId?: string) => string;\n    drawLine: (options: IDrawLineOptions) => string;\n    drawCircle: (options: IDrawCircleOptions) => string;\n    drawRect: (options: IDrawRectOptions) => string;\n    drawPath: (options: IDrawPathOptions) => string;\n    removeElement: (id: string, groupId?: string) => void;\n    removeElements: (predicate: (element: ChildNode) => boolean, groupId?: string) => void;\n};\n\ntype UseDrawingReturn = {\n    svgRef: React.RefObject<SVGSVGElement>;\n    drawing: IDrawing;\n};\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nlet IID = 0; // TODO: при загрузке плана  возникнет коллизии\n\nfunction setLineOptions(line: Element, options: IDrawLineOptions) {\n    const { x1, x2, y1, y2, strokeWidth, stroke = '#000', strokeDashArray } = options;\n    line.setAttribute('x1', x1.toString());\n    line.setAttribute('y1', y1.toString());\n    line.setAttribute('x2', x2.toString());\n    line.setAttribute('y2', y2.toString());\n    line.setAttribute('stroke', stroke);\n    if (strokeWidth) line.setAttribute('stroke-width', strokeWidth.toString());\n    if (strokeDashArray) line.setAttribute('stroke-dasharray', strokeDashArray);\n}\n\nfunction setRectOptions(ellipse: Element, options: IDrawRectOptions) {\n    const { x, y, width, height, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('x', x.toString());\n    ellipse.setAttribute('y', y.toString());\n    ellipse.setAttribute('width', width.toString());\n    ellipse.setAttribute('height', height.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setCircleOptions(ellipse: Element, options: IDrawCircleOptions) {\n    const { x, y, rx, ry, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('cx', x.toString());\n    ellipse.setAttribute('cy', y.toString());\n    ellipse.setAttribute('rx', rx.toString());\n    ellipse.setAttribute('ry', ry.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction findOrCreate(\n    svg: SVGSVGElement | null,\n    key: string | undefined,\n    type: string,\n    groupId?: string,\n) {\n    let element = key ? svg?.getElementById(key) : undefined;\n    const id = key ?? `e${IID++}`;\n    if (!element) {\n        element = document.createElementNS(SVG_NS, type);\n        element.setAttribute('id', id);\n        const dest = groupId ? svg?.getElementById(groupId) : svg;\n        dest?.appendChild(element);\n    }\n    return { element, id };\n}\n\nexport function useDrawing(scale: number = 1): UseDrawingReturn {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        const parent = svg?.parentElement;\n        if (!svg || !parent) return;\n        const { width, height } = parent!.getBoundingClientRect();\n        svg.setAttribute('viewBox', `0 0 ${width * scale} ${height * scale}`);\n        svg.setAttribute('version', '1.1');\n        svg.setAttribute('xmlns', SVG_NS);\n        svg.setAttribute('width', `${width * scale}`);\n        svg.setAttribute('height', `${height * scale}`);\n    }, [scale, svgRef]);\n\n    const drawing: IDrawing = {\n        drawLine: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'line',\n                options.groupId,\n            );\n            setLineOptions(element, options);\n            return id;\n        },\n        drawCircle: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'ellipse',\n                options.groupId,\n            );\n            setCircleOptions(element, options);\n            return id;\n        },\n        drawRect: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'rect',\n                options.groupId,\n            );\n            setRectOptions(element, options);\n            return id;\n        },\n        createGroup: (key, parentId) => {\n            const { id } = findOrCreate(svgRef.current, key, 'g', parentId);\n            return id;\n        },\n        removeElement: (id, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            const element = group?.querySelector(`#${id}`);\n            element?.remove();\n        },\n        removeElements: (predicate, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            group?.childNodes?.forEach((child) => {\n                if (predicate(child)) {\n                    child.remove();\n                }\n            });\n        },\n\n        drawPath: (options) => {\n            const { id: key, points, groupId } = options;\n            const { element: path, id } = findOrCreate(svgRef.current, key, 'path', groupId);\n            if (options.stroke) path.setAttribute('fill', options.stroke);\n            path.setAttribute(\n                'd',\n                getSvgPathFromStroke(\n                    getStroke(points, {\n                        // TODO: configure drawing options\n                        size: options.strokeWidth,\n                        smoothing: 0.5,\n                        thinning: 0.5,\n                    }),\n                ),\n            );\n            return id;\n        },\n    };\n\n    return {\n        svgRef,\n        drawing,\n    };\n}\n","import { useMemo } from 'react';\nimport { IDrawing, IDrawPathOptions } from '../../hooks/useDrawing';\nimport { drawWall, wallGroupId } from '../Draw';\nimport { IPlan, Line, savePlan } from '../GlobalContext';\n\nexport type IHistory = {\n    add: (record: IHistoryRecord) => void;\n    undo: () => void;\n    redo: () => void;\n};\n\nexport type IHistoryRecord =\n    | {\n          tool: 'wall';\n          data: {\n              addedWall: Line;\n          };\n      }\n    | {\n          tool: 'cursor';\n          data: {\n              before: Line[];\n              after: Line[];\n          };\n      }\n    | {\n          tool: 'pencil' | 'eraser';\n          data: {\n              options: IDrawPathOptions;\n          };\n      };\n\nlet undoHistory: IHistoryRecord[] = [];\nlet redoHistory: IHistoryRecord[] = [];\n\nexport function useHistory(drawing: IDrawing, plan: IPlan): IHistory {\n    const history: IHistory = useMemo(\n        () => ({\n            add: (record) => {\n                undoHistory.push(record);\n                redoHistory = [];\n                savePlan(plan);\n            },\n\n            undo: () => {\n                const item = undoHistory.pop();\n                if (!item) return;\n                redoHistory.push(item);\n                switch (item.tool) {\n                    case 'wall':\n                        const { addedWall } = item?.data;\n                        plan.walls = plan.walls.filter((w) => w !== addedWall);\n                        drawing.removeElement(wallGroupId(addedWall));\n                        break;\n                    case 'cursor':\n                        const { before } = item.data;\n                        before.forEach((wall) => {\n                            plan.walls\n                                .filter((w) => w.id === wall.id)\n                                .forEach((w) => {\n                                    w.p1 = wall.p1;\n                                    w.p2 = wall.p2;\n                                });\n                            drawWall(drawing, wall);\n                        });\n                        break;\n                    case 'pencil':\n                    case 'eraser':\n                        const { options } = item.data;\n                        if (options.id) drawing.removeElement(options.id);\n                        break;\n                }\n            },\n\n            redo: () => {\n                const item = redoHistory.pop();\n                if (!item) return;\n                undoHistory.push(item);\n                switch (item.tool) {\n                    case 'wall':\n                        const { addedWall } = item?.data;\n                        plan.walls.push(addedWall);\n                        drawWall(drawing, addedWall);\n                        break;\n                    case 'cursor':\n                        const { after } = item.data;\n                        after.forEach((wall) => {\n                            plan.walls\n                                .filter((w) => w.id === wall.id)\n                                .forEach((w) => {\n                                    w.p1 = wall.p1;\n                                    w.p2 = wall.p2;\n                                });\n                            drawWall(drawing, wall);\n                        });\n                        break;\n                    case 'pencil':\n                    case 'eraser':\n                        const { options } = item.data;\n                        drawing.drawPath(options);\n                        break;\n                }\n            },\n        }),\n        [plan, drawing],\n    );\n    return history;\n}\n","import React, {\n    Dispatch,\n    SetStateAction,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { IDrawing, useDrawing } from '../hooks/useDrawing';\nimport { drawWall } from './Draw';\nimport { IHistory, useHistory } from './History/useHistory';\n\nexport type IToolType = 'wall' | 'cursor' | 'move' | 'pencil' | 'eraser';\n\nexport type Point = {\n    x: number;\n    y: number;\n    editId?: number;\n};\n\nexport type Line = {\n    id: string;\n    p1: Point;\n    p2: Point;\n    editId?: number;\n};\n\nexport type IPlan = {\n    walls: Line[];\n};\n\nexport type IGlobalState = {\n    scale: number;\n    selectedTool: IToolType;\n    pointerDown: boolean;\n\n    stylusMode: boolean;\n    magneticMode: boolean;\n    wallAlignmentMode: boolean;\n\n    plan: IPlan;\n};\n\nexport type IGlobalContext = {\n    globalState: IGlobalState;\n    setGlobalState: Dispatch<SetStateAction<IGlobalState>>;\n    updateGlobalState: (state: Partial<IGlobalState>) => void;\n\n    drawing: IDrawing;\n    drawingRef: React.RefObject<SVGSVGElement>;\n    interactiveRef: React.RefObject<HTMLDivElement>;\n\n    commandsHistory: IHistory;\n};\n\nexport function savePlan(plan: IPlan) {\n    localStorage.setItem('plan', JSON.stringify(plan));\n}\n\nexport function loadPlan(json?: string | null): IPlan {\n    const defaultPlan = {\n        walls: [],\n    };\n    try {\n        if (!json) return defaultPlan;\n        const plan = JSON.parse(json);\n        console.log('Restored plan', plan);\n        return plan;\n    } catch {\n        console.log('Failed to restore plan');\n    }\n    return defaultPlan;\n}\n\nexport function useGlobalState(): IGlobalContext {\n    const defaultState: Partial<IGlobalState> = useMemo(\n        () => ({\n            scale: 2,\n            selectedTool: 'wall',\n            pointerDown: false,\n\n            stylusMode: true,\n            magneticMode: true,\n            wallAlignmentMode: true,\n\n            plan: loadPlan(localStorage.getItem('plan')),\n        }),\n        [],\n    );\n\n    const [globalState, setGlobalState] = useState<IGlobalState>(defaultState as any);\n\n    const updateGlobalState = useCallback(\n        (update) => setGlobalState((prev) => ({ ...prev, ...update })),\n        [],\n    );\n\n    const { svgRef: drawingRef, drawing } = useDrawing(globalState.scale);\n\n    const commandsHistory = useHistory(drawing, globalState.plan);\n\n    useEffect(() => {\n        defaultState.plan?.walls.forEach((w) => drawWall(drawing, w));\n    }, [drawing, defaultState]);\n\n    const interactiveRef = useRef<HTMLDivElement>(null);\n    const context: IGlobalContext = {\n        drawing,\n        drawingRef,\n        interactiveRef,\n\n        globalState,\n        setGlobalState,\n        updateGlobalState,\n\n        commandsHistory,\n    };\n    return context;\n}\n\nexport const GlobalContext = React.createContext<IGlobalContext>(null!);\n\nexport const useGlobalContext = () => {\n    const context = React.useContext<IGlobalContext>(GlobalContext);\n    if (context === null) {\n        throw new Error('useGlobalContext must be used within an GlobalContext.Provider');\n    }\n    return context;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19C6,20.1 6.9,21 8,21H16C17.1,21 18,20.1 18,19V7H6V19Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.9a9cf5c8.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from 'react';\nimport { downloadFile, saveSvg, uploadFile } from '../../utils/svg/save';\nimport { drawWall } from '../Draw';\nimport { useGlobalContext } from '../GlobalContext';\nimport './FileActions.css';\n\ntype IFileActionsProps = {};\n\nexport const FileActions: React.FC<IFileActionsProps> = () => {\n    const { drawing, drawingRef, globalState } = useGlobalContext();\n    const exportSvg = useCallback(() => saveSvg(drawingRef.current!), [drawingRef]);\n\n    const saveJson = useCallback(() => {\n        const json = JSON.stringify(globalState.plan);\n        downloadFile(json, `Plan ${new Date().toLocaleDateString()}.json`, 'text/plain');\n    }, [globalState.plan]);\n\n    const loadJson = useCallback(() => {\n        uploadFile((json) => {\n            try {\n                if (!json) return;\n                const plan = JSON.parse(json);\n                console.log('Loaded plan', plan);\n                globalState.plan = plan;\n                globalState.plan.walls.forEach((w) => drawWall(drawing, w));\n            } catch {\n                console.log('Failed to load plan');\n            }\n        });\n    }, [drawing, globalState]);\n\n    return (\n        <div className=\"fileActionsContainer\">\n            <button onClick={exportSvg}>Save SVG</button>\n            <button onClick={saveJson}>Save JSON</button>\n            <button onClick={loadJson}>Load JSON</button>\n        </div>\n    );\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRedo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03 1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22 16.62,12.38L13,16H22V7L18.4,10.6Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRedo);\nexport default __webpack_public_path__ + \"static/media/redo.46596216.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUndo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndo);\nexport default __webpack_public_path__ + \"static/media/undo.f3bbb4ae.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport './RoundButton.css';\n\ntype IRoundButtonProps = {\n    icon?: JSX.Element;\n    title?: string;\n    className?: string;\n    onClick: () => void;\n};\n\nexport const RoundButton: React.FC<IRoundButtonProps> = ({\n    icon,\n    title,\n    className,\n    children,\n    onClick,\n}) => {\n    return (\n        <div title={title} className={clsx('roundButton', className)} onClick={onClick}>\n            {icon}\n            {children}\n        </div>\n    );\n};\n","import { ReactComponent as TrashIcon } from '../../assets/icons/delete.svg';\nimport { ReactComponent as RedoIcon } from '../../assets/icons/redo.svg';\nimport { ReactComponent as UndoIcon } from '../../assets/icons/undo.svg';\nimport { IDrawing } from '../../hooks/useDrawing';\nimport { wallGroupId } from '../Draw';\nimport { IPlan, savePlan } from '../GlobalContext';\nimport { RoundButton } from '../RoundButton/RoundButton';\nimport './HistoryPanel.css';\nimport { IHistory } from './useHistory';\n\ntype IHistoryPanelProps = {\n    history: IHistory;\n\n    drawing: IDrawing;\n    plan: IPlan;\n};\n\nexport const HistoryPanel: React.FC<IHistoryPanelProps> = ({ history, drawing, plan }) => {\n    const clear = () => {\n        // eslint-disable-next-line no-restricted-globals\n        if (confirm('Are you sure want to delete all?')) {\n            plan.walls.forEach((w) => drawing.removeElement(wallGroupId(w)));\n            plan.walls = [];\n            savePlan(plan);\n        }\n    };\n    return (\n        <div className=\"historyPanel\">\n            <RoundButton title=\"Undo\" onClick={history.undo} icon={<UndoIcon />} />\n            <RoundButton title=\"Redo\" onClick={history.redo} icon={<RedoIcon />} />\n            <RoundButton title=\"Clear\" onClick={clear} icon={<TrashIcon />} />\n        </div>\n    );\n};\n","import React from 'react';\nimport { useGlobalContext } from '../GlobalContext';\nimport './Settings.css';\n\nexport const Settings: React.FC = () => {\n    const {\n        globalState: { stylusMode, magneticMode, wallAlignmentMode },\n        updateGlobalState,\n    } = useGlobalContext();\n    return (\n        <div className=\"settingsList\">\n            <div>\n                <b>Settings</b>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={stylusMode ?? false}\n                        onChange={(e) => updateGlobalState({ stylusMode: e.target.checked })}\n                    />\n                    Stylus mode\n                </label>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={wallAlignmentMode ?? false}\n                        onChange={(e) => updateGlobalState({ wallAlignmentMode: e.target.checked })}\n                    />\n                    Walls alignment\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={magneticMode ?? false}\n                        onChange={(e) => updateGlobalState({ magneticMode: e.target.checked })}\n                    />\n                    Magnet mode\n                </label>\n            </div>\n\n            <a href=\"https://perfect-freehand-example.vercel.app/\" target=\"_blank\" rel=\"noreferrer\">\n                Perfect freehand\n            </a>\n        </div>\n    );\n};\n","import { Line, Point } from './GlobalContext';\n\nexport type WallOrientation = 'horizontal' | 'vertical';\n\nexport function getWallOrientation({ p1, p2 }: { p1: Point; p2: Point }): WallOrientation {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    if (Math.abs(dx) > Math.abs(dy)) {\n        return 'horizontal';\n    }\n    return 'vertical';\n}\n\nexport function distanceBetween(p1: Point, p2: Point): number {\n    return Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n}\n\nexport const guideLineMagnetSize = 20;\n\nexport type GuideLine = {\n    wall: Line;\n    point: Point;\n};\n\nexport function findAlignedGuideLines(walls: Line[], wall: Line): GuideLine[] {\n    const orientation = getWallOrientation(wall);\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (wall === w) return;\n        const other = w.p1.x === w.p2.x ? 'vertical' : w.p1.y === w.p2.y ? 'horizontal' : 'other';\n        if (orientation === 'horizontal' && other === 'horizontal') {\n            if (Math.abs(wall.p2.x - w.p1.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p1.x;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.x - w.p2.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p2.x;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        } else if (orientation === 'vertical' && other === 'vertical') {\n            if (Math.abs(wall.p2.y - w.p1.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p1.y;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.y - w.p2.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p2.y;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        }\n    });\n    return guidLines;\n}\n\nexport function findAllGuideLines(walls: Line[], points: Point[], point: Point): GuideLine[] {\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (Math.abs(w.p1.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.x = w.p1.x;\n            });\n        }\n        if (Math.abs(w.p1.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.y = w.p1.y;\n            });\n        }\n\n        if (Math.abs(w.p2.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.x = w.p2.x;\n            });\n        }\n        if (Math.abs(w.p2.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.y = w.p2.y;\n            });\n        }\n    });\n    return guidLines;\n}\n","type TypedTouch = Touch & { touchType: 'stylus' | 'direct' };\n\nexport type ToolEvent = {\n    id: number;\n    x: number;\n    y: number;\n\n    type: 'mouse' | 'stylus' | 'touch';\n    buttons?: number;\n    touches?: TypedTouch[];\n    changedTouches?: TypedTouch[];\n};\n\nexport type ToolEventHandler = (e: ToolEvent) => void;\n\nexport function registerTool(\n    element: HTMLElement,\n    onStart: ToolEventHandler,\n    onMove: ToolEventHandler,\n    onEnd: ToolEventHandler,\n) {\n    function mouseToToolEvent(e: MouseEvent): ToolEvent {\n        return {\n            id: 1,\n            x: e.pageX,\n            y: e.pageY,\n            type: 'mouse',\n            buttons: e.buttons,\n            changedTouches: [\n                {\n                    identifier: 1,\n                    pageX: e.pageX,\n                    pageY: e.pageY,\n                } as any as TypedTouch,\n            ],\n        };\n    }\n    const onMouseDown = (e: MouseEvent) => onStart(mouseToToolEvent(e));\n    const onMouseMove = (e: MouseEvent) => onMove(mouseToToolEvent(e));\n    const onMouseUp = (e: MouseEvent) => onEnd(mouseToToolEvent(e));\n\n    function touchToToolEvent(e: TouchEvent): ToolEvent {\n        const touch = e.changedTouches[0] as TypedTouch;\n        return {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY,\n            touches: Array.from(e.touches) as TypedTouch[],\n            changedTouches: Array.from(e.changedTouches) as TypedTouch[],\n            type: touch.touchType === 'stylus' ? 'stylus' : 'touch',\n        };\n    }\n    const onTouchStart = (e: TouchEvent) => onStart(touchToToolEvent(e));\n    const onTouchMove = (e: TouchEvent) => onMove(touchToToolEvent(e));\n    const onTouchEnd = (e: TouchEvent) => onEnd(touchToToolEvent(e));\n\n    element.addEventListener('mousedown', onMouseDown);\n    element.addEventListener('mousemove', onMouseMove);\n    element.addEventListener('mouseup', onMouseUp);\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('touchmove', onTouchMove);\n    element.addEventListener('touchend', onTouchEnd);\n\n    return () => {\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('mousemove', onMouseMove);\n        element.removeEventListener('mouseup', onMouseUp);\n\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchmove', onTouchMove);\n        element.removeEventListener('touchend', onTouchEnd);\n    };\n}\n","import React, { useEffect } from 'react';\nimport { drawGuideLines, drawWall, removeGuideLines, wallCircleRadius } from '../Draw';\nimport { distanceBetween, findAllGuideLines } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nfunction cloneEditingWalls(walls: Line[]): Line[] {\n    return walls\n        .filter((w) => w.p1.editId || w.p2.editId)\n        .map((w) => {\n            const clone: Line = {\n                id: w.id,\n                p1: { x: w.p1.x, y: w.p1.y },\n                p2: { x: w.p2.x, y: w.p2.y },\n            };\n            return clone;\n        });\n}\n\nexport const CursorTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, globalState, updateGlobalState } =\n        useGlobalContext();\n    const { scale, stylusMode, magneticMode, selectedTool, plan } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'cursor') {\n            return;\n        }\n\n        let _wallBefore: Line[] = [];\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            updateGlobalState({ pointerDown: true });\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((p) => distanceBetween(p, { x, y }) <= wallCircleRadius)\n                    .forEach((p) => {\n                        p.editId = id;\n                    });\n\n                _wallBefore = cloneEditingWalls(plan.walls);\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                const editingPoints = plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((p) => p.editId === id);\n                editingPoints.forEach((p) => {\n                    p.x = x;\n                    p.y = y;\n                });\n                if (magneticMode && editingPoints.length > 0) {\n                    const guidLines = findAllGuideLines(plan.walls, editingPoints, { x, y });\n                    drawGuideLines(drawing, editingPoints[0], guidLines);\n                }\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => drawWall(drawing, w));\n            });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((x) => x.editId === id)\n                    .forEach((p) => {\n                        if (magneticMode) {\n                            const closePoint = plan.walls\n                                .flatMap((w) => [w.p1, w.p2])\n                                .filter((o) => o !== p)\n                                .find((o) => distanceBetween(o, p) <= wallCircleRadius);\n                            if (closePoint) {\n                                p.x = closePoint.x;\n                                p.y = closePoint.y;\n                            }\n                        }\n                    });\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => {\n                        w.p1.editId = undefined;\n                        w.p2.editId = undefined;\n                        drawWall(drawing, w);\n                    });\n                removeGuideLines(drawing, { editId: id, x: 0, y: 0 });\n\n                commandsHistory.add({\n                    tool: 'cursor',\n                    data: {\n                        before: _wallBefore,\n                        after: cloneEditingWalls(plan.walls),\n                    },\n                });\n            });\n            if (e.touches?.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, scale, stylusMode, magneticMode, selectedTool]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCursor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCursor);\nexport default __webpack_public_path__ + \"static/media/cursor.d5e3bd0c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport { DrawPoint } from '../Draw';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nconst tools: IToolType[] = ['pencil', 'eraser'];\n\nexport const PenTool: React.FC = () => {\n    const { commandsHistory, drawing, interactiveRef, globalState, updateGlobalState } =\n        useGlobalContext();\n    const { scale, stylusMode, magneticMode, selectedTool } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || !tools.includes(selectedTool)) {\n            return;\n        }\n\n        let points: DrawPoint[] = [];\n        let id: string | undefined;\n\n        const getStrokeOptions = () => {\n            return {\n                strokeWidth: scale * (selectedTool === 'eraser' ? 15 : 1.5),\n                stroke: selectedTool === 'pencil' ? '#000' : '#fff',\n            };\n        };\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) return;\n            updateGlobalState({ pointerDown: true });\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points.push({ x, y, pressure: touch?.force ?? 0.5 });\n            const { stroke, strokeWidth } = getStrokeOptions();\n            id = drawing.drawPath({\n                points,\n                stroke,\n                strokeWidth,\n                groupId: 'pen',\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'mouse' && !e.buttons) return;\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points!.push({ x, y, pressure: touch?.force ?? 0.5 });\n            const { strokeWidth } = getStrokeOptions();\n            drawing.drawPath({ id, points, strokeWidth });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            const strokeOptions = getStrokeOptions();\n            commandsHistory.add({\n                tool: selectedTool as 'pencil' | 'eraser',\n                data: { options: { id, points, ...strokeOptions, groupId: 'pen' } },\n            });\n            id = undefined;\n            points = [];\n            if (!e.touches || e.touches.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, scale, stylusMode, magneticMode, selectedTool]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEraser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEraser);\nexport default __webpack_public_path__ + \"static/media/eraser.e5d177cd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.a3ff265f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3,16H12V21H3V16M2,10H8V15H2V10M9,10H15V15H9V10M16,10H22V15H16V10M13,16H21V21H13V16M3,4H11V9H3V4M12,4H21V9H12V4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWall);\nexport default __webpack_public_path__ + \"static/media/wall.87ac9ec5.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport { ReactComponent as CursorIcon } from '../../assets/icons/cursor.svg';\nimport { ReactComponent as EraserIcon } from '../../assets/icons/eraser.svg';\nimport { ReactComponent as PencilIcon } from '../../assets/icons/pencil.svg';\nimport { ReactComponent as WallIcon } from '../../assets/icons/wall.svg';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport './Toolbox.css';\nimport { RoundButton } from '../RoundButton/RoundButton';\n\ntype IToolboxProps = {};\n\nexport const Toolbox: React.FC<IToolboxProps> = () => {\n    const {\n        globalState: { selectedTool },\n        updateGlobalState,\n    } = useGlobalContext();\n\n    const setSelectedTool = (tool: IToolType) => {\n        updateGlobalState({ selectedTool: tool });\n    };\n\n    type IToolVoxItemProps = {\n        type: IToolType;\n        name: string;\n        icon?: JSX.Element;\n    };\n    const ToolBoxItem: React.FC<IToolVoxItemProps> = ({ type, name, icon }) => {\n        return (\n            <RoundButton\n                title={name}\n                onClick={() => setSelectedTool(type)}\n                className={clsx(selectedTool === type && 'toolboxSelectedItem')}\n            >\n                {icon ?? name}\n            </RoundButton>\n        );\n    };\n\n    return (\n        <div className=\"toolboxContainer\">\n            <ToolBoxItem type=\"wall\" name=\"Wall\" icon={<WallIcon />} />\n            <ToolBoxItem type=\"cursor\" name=\"Cursor\" icon={<CursorIcon />} />\n            <ToolBoxItem type=\"pencil\" name=\"Pencil\" icon={<PencilIcon />} />\n            <ToolBoxItem type=\"eraser\" name=\"Eraser\" icon={<EraserIcon />} />\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport {\n    drawGuideLines,\n    drawWall,\n    drawWallStart,\n    removeGuideLines,\n    wallCircleRadius,\n    wallGroupId,\n} from '../Draw';\nimport { distanceBetween, findAlignedGuideLines, getWallOrientation } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const WallTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, globalState, updateGlobalState } =\n        useGlobalContext();\n    const { scale, stylusMode, magneticMode, wallAlignmentMode, selectedTool, plan } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'wall') {\n            return;\n        }\n\n        const cancel = (id: number) => {\n            const wallIndex = plan.walls.findIndex((x) => x.editId === id);\n            if (wallIndex >= 0) {\n                const walls = plan.walls.splice(wallIndex, 1);\n                drawing.removeElement(wallGroupId(walls[0]));\n            }\n        };\n\n        const onStart = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                cancel(e.id);\n                return;\n            }\n            updateGlobalState({ pointerDown: true }); // TODO: это вызывает полный ререндер\n            const wallId =\n                plan.walls.length > 0\n                    ? Math.max.apply(\n                          null,\n                          plan.walls.map((w) => parseInt(w.id)),\n                      ) + 1\n                    : 1;\n            const wall: Line = {\n                id: `${wallId}`,\n                editId: e.id,\n                p1: { x, y },\n                p2: { x, y },\n            };\n            if (magneticMode) {\n                const closePoint = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .find((p) => distanceBetween(p, wall.p1) <= wallCircleRadius);\n\n                if (closePoint) {\n                    wall.p1.x = closePoint.x;\n                    wall.p1.y = closePoint.y;\n                    wall.p2.x = closePoint.x;\n                    wall.p2.y = closePoint.y;\n                }\n            }\n            plan.walls.push(wall);\n            drawWallStart(drawing, wall);\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                wall.p2.x = x;\n                wall.p2.y = y;\n                if (wallAlignmentMode) {\n                    const orientation = getWallOrientation({ p1: wall.p1, p2: { x, y } });\n                    if (orientation === 'horizontal') {\n                        wall.p2.y = wall.p1.y;\n                    } else {\n                        wall.p2.x = wall.p1.x;\n                    }\n                    const guideLines = findAlignedGuideLines(plan.walls, wall);\n                    drawGuideLines(drawing, wall.p2, guideLines);\n                }\n                drawWall(drawing, wall);\n            }\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            const { id, touches } = e;\n            const wall = plan.walls.find((x) => x.editId === id);\n            if (wall) {\n                if (magneticMode) {\n                    const closePoint = plan.walls\n                        .filter((w) => w !== wall)\n                        .flatMap((item) => [item.p1, item.p2])\n                        .find((p) => distanceBetween(p, wall.p2) <= wallCircleRadius);\n\n                    if (closePoint) {\n                        wall.p2.x = closePoint.x;\n                        wall.p2.y = closePoint.y;\n                    }\n                }\n                removeGuideLines(drawing, wall.p2);\n                drawWall(drawing, wall);\n                wall.editId = undefined;\n                commandsHistory.add({\n                    tool: 'wall',\n                    data: { addedWall: wall },\n                });\n            }\n            if (touches?.length === 0) {\n                updateGlobalState({ pointerDown: false }); // TODO: это вызывает полный ререндер\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, stylusMode, magneticMode, wallAlignmentMode, selectedTool]);\n\n    return null;\n};\n","import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport { FileActions } from './components/FileActions/FileActions';\nimport { GlobalContext, useGlobalState } from './components/GlobalContext';\nimport { HistoryPanel } from './components/History/HistoryPanel';\nimport { Settings } from './components/Settings/Settings';\nimport { CursorTool } from './components/Tools/CursorTool';\nimport { PenTool } from './components/Tools/PenTool';\nimport { Toolbox } from './components/Tools/Toolbox';\nimport { WallTool } from './components/Tools/WallTool';\n\nfunction App() {\n    const globalContext = useGlobalState();\n    const { commandsHistory, interactiveRef, drawing, drawingRef, globalState } = globalContext;\n    const { pointerDown } = globalState;\n\n    useEffect(() => {\n        const onTouchMove = (e: TouchEvent) => {\n            if (pointerDown) {\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('touchmove', onTouchMove, { passive: false });\n        return () => {\n            document.removeEventListener('touchmove', onTouchMove);\n        };\n    }, [pointerDown]);\n\n    return (\n        <GlobalContext.Provider value={globalContext}>\n            <>\n                <Helmet>\n                    <title>Measure App</title>\n                </Helmet>\n                <main>\n                    <WallTool />\n                    <CursorTool />\n                    <PenTool />\n                    <div ref={interactiveRef} className=\"paper main\">\n                        <svg ref={drawingRef} style={{ width: '100%', height: '100%' }}>\n                            <g id=\"pen\" />\n                            <g id=\"guide\" />\n                            <g id=\"walls\" />\n                        </svg>\n                    </div>\n                    <Toolbox />\n                    <div className=\"rightMenu\">\n                        <Settings />\n                        <FileActions />\n                    </div>\n                    <HistoryPanel\n                        history={commandsHistory}\n                        plan={globalState.plan}\n                        drawing={drawing}\n                    />\n                </main>\n            </>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}