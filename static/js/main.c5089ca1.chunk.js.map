{"version":3,"sources":["utils/svg/save.ts","utils/svg/convert.ts","hooks/useDrawing.ts","components/Geometry.ts","components/Draw.ts","components/History/useHistory.ts","components/GlobalContext.tsx","assets/icons/delete.svg","components/FileActions/FileActions.tsx","assets/icons/redo.svg","assets/icons/undo.svg","components/RoundButton/RoundButton.tsx","components/History/HistoryPanel.tsx","components/Keyboard/Keyboard.tsx","components/PreventTouch.tsx","components/Settings/Settings.tsx","components/Tools/ToolEvent.ts","components/Tools/CursorTool.tsx","assets/icons/cursor.svg","components/Tools/DestroyTool.tsx","components/Tools/HistoryTool.tsx","components/Tools/PenTool.tsx","assets/icons/eraser.svg","assets/icons/pencil.svg","assets/icons/wall.svg","assets/icons/bulldozer.svg","components/Tools/Toolbox.tsx","components/Tools/WallTool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["downloadFile","content","fileName","contentType","a","document","createElement","file","Blob","type","href","URL","createObjectURL","download","click","remove","getSvgPathFromStroke","stroke","length","d","reduce","acc","i","arr","x0","y0","x1","y1","push","join","SVG_NS","setLineOptions","line","options","x2","y2","strokeWidth","strokeDashArray","setAttribute","toString","setRectOptions","rect","x","y","width","height","fill","setCircleOptions","ellipse","rx","ry","setTextOptions","element","angle","fontSize","text","textContent","findOrCreate","svg","key","groupId","getElementById","undefined","id","Date","getTime","createElementNS","dest","appendChild","getWallOrientation","p1","p2","dx","dy","Math","abs","getAngle","degrees","riseOverRun","atan","PI","distanceBetween","sqrt","guideLineMagnetSize","inRange","min","max","crossLines","l1","l2","n","onLine","x3","y3","x4","y4","q","sn","fn","drawLine","ctx","drawSquare","xc","yc","size","drawRect","drawCircle","radius","drawText","wallCircleRadius","wallGroupId","wall","pointGroupId","point","editId","drawWallStart","gid","drawWallEnd","drawWall","color","createGroup","cx","cy","removeElement","drawGuideLines","guideLines","guideLinesIds","map","guideLine","guideLineId","removeElements","child","includes","removeGuideLines","undoHistory","redoHistory","savePlan","plan","localStorage","setItem","JSON","stringify","drawPlan","drawing","walls","forEach","w","notes","drawPath","erasePlan","filter","defaultState","settings","defaultSettings","stylusMode","magneticMode","wallAlignmentMode","selectedTool","json","getItem","parse","loadSettings","pointerDown","scale","defaultPlan","console","log","loadPlan","useGlobalState","useForm","defaultValues","control","getValues","setValue","svgRef","useRef","useEffect","current","parent","parentElement","getBoundingClientRect","parentId","group","querySelector","predicate","childNodes","points","path","getStroke","smoothing","thinning","useDrawing","drawingRef","commandsHistory","useMemo","add","record","undo","item","pop","tool","addedWall","data","before","destroyedWalls","redo","after","clear","useHistory","interactiveRef","_path","GlobalContext","React","createContext","useGlobalContext","context","useContext","Error","FileActions","useWatch","name","exportSvg","useCallback","clone","cloneNode","svgDocType","implementation","createDocumentType","svgDoc","createDocument","replaceChild","documentElement","XMLSerializer","serializeToString","replace","toLocaleDateString","saveSvg","saveJson","loadJson","onLoad","input","onchange","e","files","reader","FileReader","readAsText","onload","readerEvent","target","result","uploadFile","parsedPlan","className","onClick","_excluded","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","title","titleId","props","xmlns","xmlnsXlink","viewBox","ref","ForwardRef","SvgRedo","SvgUndo","RoundButton","icon","children","clsx","HistoryPanel","confirm","Keyboard","value","onSubmit","useState","setText","NumberButton","prev","colSpan","onChange","substring","MiniKeyboard","selectedWall","style","top","left","v","find","PreventTouch","onTouchMove","preventDefault","addEventListener","passive","removeEventListener","Settings","saveSettings","checked","rel","registerTool","onStart","onMove","onEnd","mouseToToolEvent","pageX","pageY","buttons","changedTouches","identifier","onMouseDown","onMouseMove","onMouseUp","touchToToolEvent","touch","touches","Array","from","touchType","onTouchStart","onTouchEnd","cloneEditingWalls","CursorTool","_wallBefore","newSelectedWall","flatMap","p","l","pointProjection","editingPoints","guidLines","findAllGuideLines","closePoint","o","DestroyTool","start","destroyLine","crossIds","crossId","startsWith","HistoryTool","lastEnd","lines","now","timeDiff","notMoved","tools","PenTool","getStrokeOptions","pressure","force","strokeOptions","SvgCursor","SvgEraser","SvgPencil","SvgWall","SvgBulldozer","Toolbox","ToolBoxItem","WallTool","wallIndex","findIndex","splice","cancel","wallId","parseInt","orientation","other","findAlignedGuideLines","App","globalContext","Provider","paddingInlineStart","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5089ca1.chunk.js","sourcesContent":["export const saveSvg = function (svg: SVGSVGElement) {\n    var clone = svg.cloneNode(true);\n    var svgDocType = document.implementation.createDocumentType(\n        'svg',\n        '-//W3C//DTD SVG 1.1//EN',\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd',\n    );\n    var svgDoc = document.implementation.createDocument(\n        'http://www.w3.org/2000/svg',\n        'svg',\n        svgDocType,\n    );\n    svgDoc.replaceChild(clone, svgDoc.documentElement);\n    var svgData = new XMLSerializer().serializeToString(svgDoc);\n\n    downloadFile(\n        svgData.replace(/></g, '>\\n\\r<'),\n        `Plan ${new Date().toLocaleDateString()}.svg`,\n        'image/svg+xml',\n    );\n};\n\nexport function downloadFile(content: any, fileName: string, contentType: string) {\n    var a = document.createElement('a');\n    var file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n    a.remove();\n}\n\nexport function uploadFile(onLoad: (result?: string | null) => void) {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.onchange = (e) => {\n        if (!input.files || input.files.length === 0) return;\n        const file = input.files[0];\n        const reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = (readerEvent) => {\n            const content = readerEvent.target?.result as string | null;\n            onLoad(content);\n        };\n    };\n    input.click();\n}\n","export function getSvgPathFromStroke(stroke: number[][]) {\n    if (!stroke.length) return '';\n\n    const d = stroke.reduce(\n        (acc, [x0, y0], i, arr) => {\n            const [x1, y1] = arr[(i + 1) % arr.length];\n            acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n            return acc;\n        },\n        ['M', ...stroke[0], 'Q'],\n    );\n\n    d.push('Z');\n    return d.join(' ');\n}\n","import React, { useEffect, useRef } from 'react';\nimport { getStroke } from 'perfect-freehand';\nimport { getSvgPathFromStroke } from '../utils/svg/convert';\n\ntype IDrawIdOptions = {\n    id?: string;\n    groupId?: string;\n};\n\ntype IDrawStrokeOptions = {\n    stroke?: string;\n    strokeWidth?: number;\n    strokeDashArray?: string;\n};\ntype IDrawShapeOptions = {\n    fill?: string;\n} & IDrawStrokeOptions;\n\ntype IDrawLineOptions = {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n} & IDrawStrokeOptions &\n    IDrawIdOptions;\n\ntype IDrawRectOptions = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IDrawCircleOptions = {\n    x: number;\n    y: number;\n    rx: number;\n    ry: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IPathPoint = { x: number; y: number; pressure?: number };\n\nexport type IDrawPathOptions = {\n    points: IPathPoint[];\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\nexport type IDrawTextOptions = {\n    x: number;\n    y: number;\n    angle?: number;\n    fontSize?: number;\n    text: string;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\nexport type IDrawing = {\n    createGroup: (id?: string, groupId?: string) => string;\n    drawLine: (options: IDrawLineOptions) => string;\n    drawCircle: (options: IDrawCircleOptions) => string;\n    drawRect: (options: IDrawRectOptions) => string;\n    drawPath: (options: IDrawPathOptions) => string;\n    drawText: (options: IDrawTextOptions) => string;\n    removeElement: (id: string, groupId?: string) => void;\n    removeElements: (predicate: (element: Element) => boolean, groupId?: string) => void;\n};\n\ntype UseDrawingReturn = {\n    svgRef: React.RefObject<SVGSVGElement>;\n    drawing: IDrawing;\n};\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nfunction setLineOptions(line: Element, options: IDrawLineOptions) {\n    const { x1, x2, y1, y2, strokeWidth, stroke = '#000', strokeDashArray } = options;\n    line.setAttribute('x1', x1.toString());\n    line.setAttribute('y1', y1.toString());\n    line.setAttribute('x2', x2.toString());\n    line.setAttribute('y2', y2.toString());\n    line.setAttribute('stroke', stroke);\n    if (strokeWidth) line.setAttribute('stroke-width', strokeWidth.toString());\n    if (strokeDashArray) line.setAttribute('stroke-dasharray', strokeDashArray);\n}\n\nfunction setRectOptions(rect: Element, options: IDrawRectOptions) {\n    const { x, y, width, height, strokeWidth, stroke, fill } = options;\n    rect.setAttribute('x', x.toString());\n    rect.setAttribute('y', y.toString());\n    rect.setAttribute('width', width.toString());\n    rect.setAttribute('height', height.toString());\n    if (fill) rect.setAttribute('fill', fill);\n    if (stroke) rect.setAttribute('stroke', stroke);\n    if (strokeWidth) rect.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setCircleOptions(ellipse: Element, options: IDrawCircleOptions) {\n    const { x, y, rx, ry, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('cx', x.toString());\n    ellipse.setAttribute('cy', y.toString());\n    ellipse.setAttribute('rx', rx.toString());\n    ellipse.setAttribute('ry', ry.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setTextOptions(element: Element, options: IDrawTextOptions) {\n    const { x, y, angle = 0, fontSize = 25, text, stroke, strokeWidth, fill } = options;\n    element.setAttribute('x', (x - 10).toString());\n    element.setAttribute('y', (y - 10).toString());\n    element.setAttribute('style', `text-anchor: middle;font-size: ${fontSize}`);\n    element.setAttribute('transform', `rotate(${angle}, ${x}, ${y})`);\n    element.textContent = text;\n    if (fill) element.setAttribute('fill', fill);\n    if (stroke) element.setAttribute('stroke', stroke);\n    if (strokeWidth) element.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction findOrCreate(\n    svg: SVGSVGElement | null,\n    key: string | undefined,\n    type: string,\n    groupId?: string,\n) {\n    let element = key ? svg?.getElementById(key) : undefined;\n    const id = key ?? `e${new Date().getTime()}`;\n    if (!element) {\n        element = document.createElementNS(SVG_NS, type);\n        element.setAttribute('id', id);\n        const dest = groupId ? svg?.getElementById(groupId) : svg;\n        dest?.appendChild(element);\n    }\n    return { element, id };\n}\n\nexport function useDrawing(scale: number = 1): UseDrawingReturn {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        const parent = svg?.parentElement;\n        if (!svg || !parent) return;\n        const { width, height } = parent!.getBoundingClientRect();\n        svg.setAttribute('viewBox', `0 0 ${width * scale} ${height * scale}`);\n        svg.setAttribute('version', '1.1');\n        svg.setAttribute('xmlns', SVG_NS);\n        svg.setAttribute('width', `${width * scale}`);\n        svg.setAttribute('height', `${height * scale}`);\n    }, [scale, svgRef]);\n\n    const drawing: IDrawing = {\n        drawLine: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'line',\n                options.groupId,\n            );\n            setLineOptions(element, options);\n            return id;\n        },\n        drawCircle: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'ellipse',\n                options.groupId,\n            );\n            setCircleOptions(element, options);\n            return id;\n        },\n        drawRect: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'rect',\n                options.groupId,\n            );\n            setRectOptions(element, options);\n            return id;\n        },\n        drawText: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'text',\n                options.groupId,\n            );\n            setTextOptions(element, options);\n            return id;\n        },\n        createGroup: (key, parentId) => {\n            const { id } = findOrCreate(svgRef.current, key, 'g', parentId);\n            return id;\n        },\n        removeElement: (id, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            const element = group?.querySelector(`#${id}`);\n            element?.remove();\n        },\n        removeElements: (predicate, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            group?.childNodes?.forEach((child) => {\n                if (predicate(child as Element)) {\n                    child.remove();\n                }\n            });\n        },\n\n        drawPath: (options) => {\n            const { id: key, points, groupId } = options;\n            const { element: path, id } = findOrCreate(svgRef.current, key, 'path', groupId);\n            if (options.stroke) path.setAttribute('fill', options.stroke);\n            path.setAttribute(\n                'd',\n                getSvgPathFromStroke(\n                    getStroke(points, {\n                        // TODO: configure drawing options\n                        size: options.strokeWidth,\n                        smoothing: 0.5,\n                        thinning: 0.5,\n                    }),\n                ),\n            );\n            return id;\n        },\n    };\n\n    return {\n        svgRef,\n        drawing,\n    };\n}\n","import { Line, Point } from './GlobalContext';\n\nexport type WallOrientation = 'horizontal' | 'vertical';\n\nexport function getWallOrientation({ p1, p2 }: { p1: Point; p2: Point }): WallOrientation {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    if (Math.abs(dx) > Math.abs(dy)) {\n        return 'horizontal';\n    }\n    return 'vertical';\n}\n\nexport function getAngle(p1: Point, p2: Point) {\n    const x1 = p1.x;\n    const y1 = p1.y;\n    const x2 = p2.x;\n    const y2 = p2.y;\n    let degrees;\n    if (x2 - x1 === 0) {\n        degrees = y2 > y1 ? 90 : 270;\n    } else {\n        const riseOverRun = (y2 - y1) / (x2 - x1);\n        const radians = Math.atan(riseOverRun);\n        degrees = radians * (180 / Math.PI);\n\n        if (x2 - x1 < 0 || y2 - y1 < 0) degrees += 180;\n        if (x2 - x1 > 0 && y2 - y1 < 0) degrees -= 180;\n        if (degrees < 0) degrees += 360;\n    }\n    return degrees;\n}\n\nexport function distanceBetween(p1: Point, p2: Point): number {\n    return Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n}\n\nexport const guideLineMagnetSize = 20;\n\nexport type GuideLine = {\n    wall: Line;\n    point: Point;\n};\n\nexport function findAlignedGuideLines(walls: Line[], wall: Line): GuideLine[] {\n    const orientation = getWallOrientation(wall);\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (wall === w) return;\n        const other = w.p1.x === w.p2.x ? 'vertical' : w.p1.y === w.p2.y ? 'horizontal' : 'other';\n        if (orientation === 'horizontal' && other === 'horizontal') {\n            if (Math.abs(wall.p2.x - w.p1.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p1.x;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.x - w.p2.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p2.x;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        } else if (orientation === 'vertical' && other === 'vertical') {\n            if (Math.abs(wall.p2.y - w.p1.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p1.y;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.y - w.p2.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p2.y;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        }\n    });\n    return guidLines;\n}\n\nexport function findAllGuideLines(walls: Line[], points: Point[], point: Point): GuideLine[] {\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (Math.abs(w.p1.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.x = w.p1.x;\n            });\n        }\n        if (Math.abs(w.p1.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.y = w.p1.y;\n            });\n        }\n\n        if (Math.abs(w.p2.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.x = w.p2.x;\n            });\n        }\n        if (Math.abs(w.p2.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.y = w.p2.y;\n            });\n        }\n    });\n    return guidLines;\n}\n\nfunction inRange(x: number, x1: number, x2: number) {\n    return Math.min(x1, x2) <= x && x <= Math.max(x1, x2);\n}\n\nexport function crossLines(l1: Line, l2: Line, onLine: boolean = false) {\n    const x1 = l1.p1.x;\n    const y1 = l1.p1.y;\n    const x2 = l1.p2.x;\n    const y2 = l1.p2.y;\n    const x3 = l2.p1.x;\n    const y3 = l2.p1.y;\n    const x4 = l2.p2.x;\n    const y4 = l2.p2.y;\n    let n: number;\n    if (y2 - y1 !== 0) {\n        const q = (x2 - x1) / (y1 - y2);\n        const sn = x3 - x4 + (y3 - y4) * q;\n        if (!sn) {\n            return null;\n        }\n        const fn = x3 - x1 + (y3 - y1) * q;\n        n = fn / sn;\n    } else {\n        if (!(y3 - y4)) {\n            return null;\n        }\n        n = (y3 - y1) / (y3 - y4);\n    }\n    const x = x3 + (x4 - x3) * n;\n    const y = y3 + (y4 - y3) * n;\n\n    if (onLine) {\n        if (inRange(x, x1, x2) && inRange(x, x3, x4) && inRange(y, y1, y2) && inRange(y, y3, y4)) {\n            return { x, y };\n        }\n        return null;\n    }\n\n    return { x, y };\n}\n\nexport function pointProjection(p: Point, l: Line, onLine: boolean = false) {\n    const x1 = l.p1.x;\n    const y1 = l.p1.y;\n    const x2 = l.p2.x;\n    const y2 = l.p2.y;\n    const x3 = p.x;\n    const y3 = p.y;\n\n    const x =\n        (x1 * x1 * x3 -\n            2 * x1 * x2 * x3 +\n            x2 * x2 * x3 +\n            x2 * (y1 - y2) * (y1 - y3) -\n            x1 * (y1 - y2) * (y2 - y3)) /\n        ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\n    const y =\n        (x2 * x2 * y1 +\n            x1 * x1 * y2 +\n            x2 * x3 * (y2 - y1) -\n            x1 * (x3 * (y2 - y1) + x2 * (y1 + y2)) +\n            (y1 - y2) * (y1 - y2) * y3) /\n        ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\n    if (onLine) {\n        if (inRange(x, x1, x2) && inRange(y, y1, y2)) {\n            return { x, y };\n        }\n        return null;\n    }\n\n    return { x, y };\n}\n","import { IDrawing } from '../hooks/useDrawing';\nimport { getAngle, GuideLine } from './Geometry';\nimport { Line, Point, Wall } from './GlobalContext';\n\nexport type DrawEvent = { x: number; y: number; id: number };\n\nexport type DrawPoint = Point & {\n    pressure?: number;\n    color?: string;\n};\n\ntype Context = IDrawing;\n\nexport function drawLine(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    strokeDashArray?: string,\n    stroke?: string,\n) {\n    ctx.drawLine({ id, groupId, x1, y1, x2, y2, strokeDashArray, stroke });\n}\nexport function drawSquare(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    size: number,\n    fill?: string,\n) {\n    ctx.drawRect({\n        id,\n        groupId,\n        x: xc - size / 2,\n        y: yc - size / 2,\n        width: size,\n        height: size,\n        fill,\n    });\n}\n\nexport function drawCircle(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    radius: number,\n    fill?: string,\n    stroke?: string,\n) {\n    ctx.drawCircle({ id, groupId, x: xc, y: yc, rx: radius, ry: radius, fill, stroke });\n}\n\nexport function drawText(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    text: string,\n    angle: number = 0,\n) {\n    ctx.drawText({ id, groupId, x: xc, y: yc, angle, text });\n}\n\nexport const wallPointSize = 15;\nexport const wallCircleRadius = 20;\n\nexport const wallGroupId = (wall: Line) => `w${wall.id}`;\nexport const pointGroupId = (point: Point) => `p${point.editId}`;\n\nexport function drawWallStart(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}s`, gid, wall.p1.x, wall.p1.y, wallPointSize, 'green');\n}\nexport function drawWallEnd(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}e`, gid, wall.p2.x, wall.p2.y, wallPointSize, 'red');\n}\n\nexport function drawWall(ctx: Context, wall: Wall, color = '#000') {\n    const gid = ctx.createGroup(wallGroupId(wall), 'walls');\n    drawCircle(ctx, `w${wall.id}c1`, gid, wall.p1.x, wall.p1.y, wallCircleRadius, 'none', '#000');\n    drawCircle(ctx, `w${wall.id}c2`, gid, wall.p2.x, wall.p2.y, wallCircleRadius, 'none', '#000');\n    drawLine(\n        ctx,\n        `w${wall.id}l`,\n        gid,\n        wall.p1.x,\n        wall.p1.y,\n        wall.p2.x,\n        wall.p2.y,\n        undefined,\n        color,\n    );\n    drawWallStart(ctx, wall);\n    drawWallEnd(ctx, wall);\n    if (wall.length) {\n        const cx = (wall.p1.x + wall.p2.x) / 2;\n        const cy = (wall.p1.y + wall.p2.y) / 2;\n        let angle = getAngle(wall.p1, wall.p2);\n        if (angle >= 90 && angle < 270) angle -= 180;\n        drawText(ctx, `w${wall.id}t`, gid, cx, cy, `${wall.length}`, angle);\n    } else {\n        ctx.removeElement(`w${wall.id}t`, gid);\n    }\n}\n\nexport function drawGuideLines(ctx: Context, point: Point, guideLines: GuideLine[]) {\n    const groupId = ctx.createGroup(pointGroupId(point), 'guide');\n    const guideLinesIds = guideLines.map((guideLine) => {\n        const guideLineId = `p${point.editId}g${guideLine.wall.id}`;\n        drawLine(\n            ctx,\n            guideLineId,\n            groupId,\n            point.x,\n            point.y,\n            guideLine.point.x,\n            guideLine.point.y,\n            '10 10',\n        );\n        return guideLineId;\n    });\n    ctx.removeElements((child) => !guideLinesIds.includes((child as Element).id), groupId);\n}\n\nexport function removeGuideLines(ctx: Context, point: Point) {\n    ctx.removeElement(pointGroupId(point), 'guide');\n}\n","import { useMemo } from 'react';\nimport { IDrawing, IDrawPathOptions } from '../../hooks/useDrawing';\nimport { drawWall, wallGroupId } from '../Draw';\nimport { IPlan, savePlan, Wall } from '../GlobalContext';\n\nexport type IHistory = {\n    add: (record: IHistoryRecord) => void;\n    undo: () => void;\n    redo: () => void;\n    clear: () => void;\n};\n\nexport type IWallHistoryRecord = {\n    tool: 'wall';\n    data: {\n        addedWall: Wall;\n    };\n};\n\nexport type ICursorHistoryRecord = {\n    tool: 'cursor';\n    data: {\n        before: Wall[];\n        after: Wall[];\n    };\n};\n\nexport type IPencilHistoryRecord = {\n    tool: 'pencil' | 'eraser';\n    data: {\n        options: IDrawPathOptions;\n    };\n};\n\nexport type IDestroyHistoryRecord = {\n    tool: 'destroy';\n    data: {\n        destroyedWalls: Wall[];\n    };\n};\n\nexport type ITextHistoryRecord = {\n    tool: 'text';\n    data: {\n        id: string;\n        before?: string;\n        after?: string;\n    };\n};\n\nexport type IHistoryRecord =\n    | IWallHistoryRecord\n    | ICursorHistoryRecord\n    | IPencilHistoryRecord\n    | IDestroyHistoryRecord\n    | ITextHistoryRecord;\n\nlet undoHistory: IHistoryRecord[] = [];\nlet redoHistory: IHistoryRecord[] = [];\n\nexport function useHistory(drawing: IDrawing, plan: IPlan): IHistory {\n    const history: IHistory = useMemo(\n        () => ({\n            add: (record) => {\n                undoHistory.push(record);\n                redoHistory = [];\n                savePlan(plan);\n            },\n\n            undo: () => {\n                const item = undoHistory.pop();\n                if (!item) return;\n                redoHistory.push(item);\n                switch (item.tool) {\n                    case 'wall':\n                        const { addedWall } = item?.data;\n                        plan.walls = plan.walls.filter((w) => w !== addedWall);\n                        drawing.removeElement(wallGroupId(addedWall));\n                        break;\n                    case 'cursor':\n                        const { before } = item.data;\n                        before.forEach((wall) => {\n                            plan.walls\n                                .filter((w) => w.id === wall.id)\n                                .forEach((w) => {\n                                    w.p1 = wall.p1;\n                                    w.p2 = wall.p2;\n                                });\n                            drawWall(drawing, wall);\n                        });\n                        break;\n                    case 'pencil':\n                    case 'eraser':\n                        const { options } = item.data;\n                        if (options.id) {\n                            plan.notes = plan.notes.filter((n) => n.id !== options.id);\n                            drawing.removeElement(options.id);\n                        }\n                        break;\n                    case 'destroy':\n                        const { destroyedWalls } = item.data;\n                        destroyedWalls.forEach((w) => {\n                            plan.walls.push(w);\n                            drawWall(drawing, w);\n                        });\n                        break;\n                    case 'text': {\n                        const { id, before } = item.data;\n                        plan.walls\n                            .filter((w) => w.id === id)\n                            .forEach((w) => {\n                                w.length = before;\n                                drawWall(drawing, w);\n                            });\n                        break;\n                    }\n                }\n                savePlan(plan);\n            },\n\n            redo: () => {\n                const item = redoHistory.pop();\n                if (!item) return;\n                undoHistory.push(item);\n                switch (item.tool) {\n                    case 'wall':\n                        const { addedWall } = item?.data;\n                        plan.walls.push(addedWall);\n                        drawWall(drawing, addedWall);\n                        break;\n                    case 'cursor':\n                        const { after } = item.data;\n                        after.forEach((wall) => {\n                            plan.walls\n                                .filter((w) => w.id === wall.id)\n                                .forEach((w) => {\n                                    w.p1 = wall.p1;\n                                    w.p2 = wall.p2;\n                                    drawWall(drawing, w);\n                                });\n                        });\n                        break;\n                    case 'pencil':\n                    case 'eraser':\n                        const { options } = item.data;\n                        plan.notes.push(options);\n                        drawing.drawPath(options);\n                        break;\n                    case 'destroy':\n                        const { destroyedWalls } = item.data;\n                        destroyedWalls.forEach((w) => drawing.removeElement(wallGroupId(w)));\n                        plan.walls = plan.walls.filter((w) => !destroyedWalls.includes(w));\n                        break;\n                    case 'text': {\n                        const { id, after } = item.data;\n                        plan.walls\n                            .filter((w) => w.id === id)\n                            .forEach((w) => {\n                                w.length = after;\n                                drawWall(drawing, w);\n                            });\n                        break;\n                    }\n                }\n                savePlan(plan);\n            },\n\n            clear: () => {\n                undoHistory = [];\n                redoHistory = [];\n            },\n        }),\n        [plan, drawing],\n    );\n    return history;\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Control, useForm, UseFormGetValues, UseFormSetValue } from 'react-hook-form';\nimport { IDrawing, IDrawPathOptions, useDrawing } from '../hooks/useDrawing';\nimport { drawWall, wallGroupId } from './Draw';\nimport { IHistory, useHistory } from './History/useHistory';\n\nexport type IToolType = 'wall' | 'cursor' | 'move' | 'pencil' | 'eraser' | 'destroy';\n\nexport type Point = {\n    x: number;\n    y: number;\n    editId?: number;\n};\n\nexport type Line = {\n    id: string;\n    p1: Point;\n    p2: Point;\n    editId?: number;\n};\n\nexport type Wall = Line & {\n    length?: string;\n};\n\nexport type IPlan = {\n    walls: Wall[];\n    notes: IDrawPathOptions[];\n};\n\nexport type ISettings = {\n    stylusMode: boolean;\n    magneticMode: boolean;\n    wallAlignmentMode: boolean;\n    selectedTool: IToolType;\n};\n\nexport type IGlobalState = {\n    settings: ISettings;\n    pointerDown: boolean;\n    selectedWall?: Wall;\n    scale: number;\n    plan: IPlan;\n};\n\nexport type IGlobalContext = {\n    drawing: IDrawing;\n    drawingRef: React.RefObject<SVGSVGElement>;\n    interactiveRef: React.RefObject<HTMLDivElement>;\n\n    control: Control<IGlobalState, object>;\n    getValues: UseFormGetValues<IGlobalState>;\n    setValue: UseFormSetValue<IGlobalState>;\n\n    commandsHistory: IHistory;\n};\n\nexport function saveSettings(settings: ISettings) {\n    localStorage.setItem('settings', JSON.stringify(settings));\n}\n\nexport function loadSettings() {\n    const defaultSettings = {\n        stylusMode: true,\n        magneticMode: true,\n        wallAlignmentMode: true,\n        selectedTool: 'wall',\n    };\n    try {\n        const json = localStorage.getItem('settings');\n        if (!json) return defaultSettings;\n        return JSON.parse(json);\n    } catch {}\n    return defaultSettings;\n}\n\nexport function savePlan(plan: IPlan) {\n    // console.log('Store plan', plan);\n    localStorage.setItem('plan', JSON.stringify(plan));\n}\n\nexport function loadPlan(): IPlan {\n    const defaultPlan = {\n        walls: [],\n        notes: [],\n    };\n    try {\n        const json = localStorage.getItem('plan');\n        if (!json) return defaultPlan;\n        const plan = JSON.parse(json);\n        console.log('Restore plan', plan);\n        return plan;\n    } catch {\n        console.log('Failed to restore plan');\n    }\n    return defaultPlan;\n}\n\nexport function drawPlan(drawing: IDrawing, plan: IPlan | undefined) {\n    plan?.walls?.forEach((w) => drawWall(drawing, w));\n    plan?.notes?.forEach((n) => drawing.drawPath(n));\n}\n\nexport function erasePlan(drawing: IDrawing, plan: IPlan) {\n    plan.walls?.forEach((w) => drawing.removeElement(wallGroupId(w)));\n    plan.notes?.filter((n) => n.id).forEach((n) => drawing.removeElement(n.id!));\n}\n\nconst defaultState: IGlobalState = {\n    settings: loadSettings(),\n    pointerDown: false,\n    scale: 2,\n    plan: loadPlan(),\n};\n\nexport function useGlobalState(): IGlobalContext {\n    const { control, getValues, setValue } = useForm<IGlobalState>({\n        defaultValues: defaultState,\n    });\n    const scale = defaultState.scale;\n    const plan = defaultState.plan;\n    console.log('useGlobalState', plan);\n\n    const { svgRef: drawingRef, drawing } = useDrawing(scale);\n    const commandsHistory = useHistory(drawing, plan);\n\n    useEffect(() => {\n        drawPlan(drawing, defaultState.plan);\n    }, [drawing]);\n\n    const interactiveRef = useRef<HTMLDivElement>(null);\n    const context: IGlobalContext = {\n        drawing,\n        drawingRef,\n        interactiveRef,\n\n        control,\n        getValues,\n        setValue,\n\n        commandsHistory,\n    };\n    return context;\n}\n\nexport const GlobalContext = React.createContext<IGlobalContext>(null!);\n\nexport const useGlobalContext = () => {\n    const context = React.useContext<IGlobalContext>(GlobalContext);\n    if (context === null) {\n        throw new Error('useGlobalContext must be used within an GlobalContext.Provider');\n    }\n    return context;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19C6,20.1 6.9,21 8,21H16C17.1,21 18,20.1 18,19V7H6V19Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.9a9cf5c8.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { downloadFile, saveSvg, uploadFile } from '../../utils/svg/save';\nimport { erasePlan, drawPlan, IPlan, savePlan, useGlobalContext } from '../GlobalContext';\nimport './FileActions.css';\n\ntype IFileActionsProps = {};\n\nexport const FileActions: React.FC<IFileActionsProps> = () => {\n    const { drawing, drawingRef, control } = useGlobalContext();\n    const plan = useWatch({ control, name: 'plan' });\n\n    const exportSvg = useCallback(() => saveSvg(drawingRef.current!), [drawingRef]);\n\n    const saveJson = useCallback(() => {\n        const json = JSON.stringify(plan);\n        downloadFile(json, `Plan ${new Date().toLocaleDateString()}.json`, 'text/plain');\n    }, [plan]);\n\n    const loadJson = useCallback(() => {\n        uploadFile((json) => {\n            try {\n                if (!json) return;\n                erasePlan(drawing, plan);\n                const parsedPlan = JSON.parse(json) as IPlan;\n                console.log('Load JSON', parsedPlan);\n                plan.walls = parsedPlan.walls ?? [];\n                plan.notes = parsedPlan.notes ?? [];\n                drawPlan(drawing, parsedPlan);\n                savePlan(parsedPlan);\n            } catch {\n                console.log('Failed to load plan');\n            }\n        });\n    }, [plan, drawing]);\n\n    return (\n        <div className=\"fileActionsContainer\">\n            <button onClick={exportSvg}>Save SVG</button>\n            <button onClick={saveJson}>Save JSON</button>\n            <button onClick={loadJson}>Load JSON</button>\n        </div>\n    );\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRedo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03 1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22 16.62,12.38L13,16H22V7L18.4,10.6Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRedo);\nexport default __webpack_public_path__ + \"static/media/redo.46596216.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUndo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndo);\nexport default __webpack_public_path__ + \"static/media/undo.f3bbb4ae.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport './RoundButton.css';\n\ntype IRoundButtonProps = {\n    icon?: JSX.Element;\n    title?: string;\n    className?: string;\n    onClick: () => void;\n};\n\nexport const RoundButton: React.FC<IRoundButtonProps> = ({\n    icon,\n    title,\n    className,\n    children,\n    onClick,\n}) => {\n    return (\n        <div title={title} className={clsx('roundButton', className)} onClick={onClick}>\n            {icon}\n            {children}\n        </div>\n    );\n};\n","import { useWatch } from 'react-hook-form';\nimport { ReactComponent as TrashIcon } from '../../assets/icons/delete.svg';\nimport { ReactComponent as RedoIcon } from '../../assets/icons/redo.svg';\nimport { ReactComponent as UndoIcon } from '../../assets/icons/undo.svg';\nimport { erasePlan, savePlan, useGlobalContext } from '../GlobalContext';\nimport { RoundButton } from '../RoundButton/RoundButton';\nimport './HistoryPanel.css';\n\nexport const HistoryPanel: React.FC = () => {\n    const { drawing, commandsHistory, control } = useGlobalContext();\n    const plan = useWatch({ control, name: 'plan' });\n\n    const clear = () => {\n        // eslint-disable-next-line no-restricted-globals\n        if (confirm('Are you sure want to delete all?')) {\n            commandsHistory.clear();\n            erasePlan(drawing, plan);\n            plan.walls = [];\n            plan.notes = [];\n            savePlan(plan);\n        }\n    };\n    return (\n        <div className=\"historyPanel\">\n            <RoundButton title=\"Undo\" onClick={commandsHistory.undo} icon={<UndoIcon />} />\n            <RoundButton title=\"Redo\" onClick={commandsHistory.redo} icon={<RedoIcon />} />\n            <RoundButton title=\"Clear\" onClick={clear} icon={<TrashIcon />} />\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { drawWall } from '../Draw';\nimport { useGlobalContext } from '../GlobalContext';\nimport './Keyboard.css';\n\ntype INumberButtonProps = {\n    value: string;\n    onClick?: () => void;\n};\n\ntype IKeyboardProps = {\n    value?: string;\n    onSubmit?: (value: string) => void;\n};\n\nconst Keyboard: React.FC<IKeyboardProps> = ({ value, onSubmit = () => {} }) => {\n    const [text, setText] = useState(value ?? '');\n\n    const NumberButton: React.FC<INumberButtonProps> = ({ value, onClick }) => (\n        <button\n            className=\"keyboard-button\"\n            onClick={() => (onClick ? onClick() : setText((prev) => prev + value))}\n        >\n            {value}\n        </button>\n    );\n\n    return (\n        <div>\n            <table className=\"keyboard\">\n                <tbody>\n                    <tr>\n                        <td colSpan={2}>\n                            <input\n                                value={text}\n                                onChange={(e) => setText(e.target.value)}\n                                className=\"keyboard-input\"\n                            />\n                        </td>\n                        <td>\n                            <NumberButton\n                                value=\"<\"\n                                onClick={() =>\n                                    setText((prev) => prev.substring(0, prev.length - 1))\n                                }\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <NumberButton value=\"7\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"8\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"9\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <NumberButton value=\"4\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"5\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"6\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <NumberButton value=\"1\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"2\" />\n                        </td>\n                        <td>\n                            <NumberButton value=\"3\" />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>\n                            <NumberButton value=\"0\" />\n                        </td>\n                        <td className=\"keyboard-submit\">\n                            <NumberButton value=\"OK\" onClick={() => onSubmit(text)} />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport const MiniKeyboard: React.FC = () => {\n    const { control, drawing, commandsHistory, setValue } = useGlobalContext();\n    const selectedWall = useWatch({ control, name: 'selectedWall' });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n    if (!selectedWall) {\n        return null;\n    }\n\n    const cx = (selectedWall.p1.x + selectedWall.p2.x) / 2 / scale;\n    const cy = (selectedWall.p1.y + selectedWall.p2.y) / 2 / scale;\n    return (\n        <div className=\"mini-keyboard\" style={{ top: `${cy + 5}px`, left: `${cx + 5}px` }}>\n            <Keyboard\n                value={selectedWall.length}\n                onSubmit={(v) => {\n                    const wall = plan.walls.find((w) => w.id === selectedWall.id);\n                    if (wall) {\n                        commandsHistory.add({\n                            tool: 'text',\n                            data: {\n                                id: wall.id,\n                                before: wall.length,\n                                after: v,\n                            },\n                        });\n                        wall.length = v;\n                        drawWall(drawing, wall);\n                    }\n                    setValue('selectedWall', undefined);\n                }}\n            />\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { useGlobalContext } from './GlobalContext';\n\nconst PreventTouch: React.FC = () => {\n    const { control } = useGlobalContext();\n\n    const pointerDown = useWatch({ control, name: 'pointerDown' });\n\n    useEffect(() => {\n        const onTouchMove = (e: TouchEvent) => {\n            if (pointerDown) {\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('touchmove', onTouchMove, { passive: false });\n        return () => {\n            document.removeEventListener('touchmove', onTouchMove);\n        };\n    }, [pointerDown]);\n\n    return null;\n};\n\nexport default PreventTouch;\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { saveSettings, useGlobalContext } from '../GlobalContext';\nimport './Settings.css';\n\nexport const Settings: React.FC = () => {\n    const { control, setValue } = useGlobalContext();\n    const settings = useWatch({ control, name: 'settings' });\n    const { stylusMode, magneticMode, wallAlignmentMode } = settings;\n\n    useEffect(() => {\n        saveSettings(settings);\n    }, [settings]);\n\n    return (\n        <div className=\"settingsList\">\n            <div>\n                <b>Settings</b>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={stylusMode ?? false}\n                        onChange={(e) => setValue('settings.stylusMode', e.target.checked)}\n                    />\n                    Stylus mode\n                </label>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={wallAlignmentMode ?? false}\n                        onChange={(e) => setValue('settings.wallAlignmentMode', e.target.checked)}\n                    />\n                    Walls alignment\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={magneticMode ?? false}\n                        onChange={(e) => setValue('settings.magneticMode', e.target.checked)}\n                    />\n                    Magnet mode\n                </label>\n            </div>\n\n            <a href=\"https://perfect-freehand-example.vercel.app/\" target=\"_blank\" rel=\"noreferrer\">\n                Perfect freehand\n            </a>\n        </div>\n    );\n};\n","type TypedTouch = Touch & { touchType: 'stylus' | 'direct' };\n\nexport type ToolEvent = {\n    id: number;\n    x: number;\n    y: number;\n\n    type: 'mouse' | 'stylus' | 'touch';\n    buttons?: number;\n    touches?: TypedTouch[];\n    changedTouches?: TypedTouch[];\n};\n\nexport type ToolEventHandler = (e: ToolEvent) => void;\n\nexport function registerTool(\n    element: HTMLElement,\n    onStart: ToolEventHandler,\n    onMove: ToolEventHandler,\n    onEnd: ToolEventHandler,\n) {\n    function mouseToToolEvent(e: MouseEvent): ToolEvent {\n        return {\n            id: 1,\n            x: e.pageX,\n            y: e.pageY,\n            type: 'mouse',\n            buttons: e.buttons,\n            changedTouches: [\n                {\n                    identifier: 1,\n                    pageX: e.pageX,\n                    pageY: e.pageY,\n                } as any as TypedTouch,\n            ],\n        };\n    }\n    const onMouseDown = (e: MouseEvent) => onStart(mouseToToolEvent(e));\n    const onMouseMove = (e: MouseEvent) => onMove(mouseToToolEvent(e));\n    const onMouseUp = (e: MouseEvent) => onEnd(mouseToToolEvent(e));\n\n    function touchToToolEvent(e: TouchEvent): ToolEvent {\n        const touch = e.changedTouches[0] as TypedTouch;\n        return {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY,\n            touches: Array.from(e.touches) as TypedTouch[],\n            changedTouches: Array.from(e.changedTouches) as TypedTouch[],\n            type: touch.touchType === 'stylus' ? 'stylus' : 'touch',\n        };\n    }\n    const onTouchStart = (e: TouchEvent) => onStart(touchToToolEvent(e));\n    const onTouchMove = (e: TouchEvent) => onMove(touchToToolEvent(e));\n    const onTouchEnd = (e: TouchEvent) => onEnd(touchToToolEvent(e));\n\n    element.addEventListener('mousedown', onMouseDown);\n    element.addEventListener('mousemove', onMouseMove);\n    element.addEventListener('mouseup', onMouseUp);\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('touchmove', onTouchMove);\n    element.addEventListener('touchend', onTouchEnd);\n\n    return () => {\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('mousemove', onMouseMove);\n        element.removeEventListener('mouseup', onMouseUp);\n\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchmove', onTouchMove);\n        element.removeEventListener('touchend', onTouchEnd);\n    };\n}\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { drawGuideLines, drawWall, removeGuideLines, wallCircleRadius } from '../Draw';\nimport { distanceBetween, findAllGuideLines, pointProjection } from '../Geometry';\nimport { useGlobalContext, Wall } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nfunction cloneEditingWalls(walls: Wall[]): Wall[] {\n    return walls\n        .filter((w) => w.p1.editId || w.p2.editId)\n        .map((w) => {\n            const clone: Wall = {\n                id: w.id,\n                length: w.length,\n                p1: { x: w.p1.x, y: w.p1.y },\n                p2: { x: w.p2.x, y: w.p2.y },\n            };\n            return clone;\n        });\n}\n\nexport const CursorTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, magneticMode, wallAlignmentMode, selectedTool } = useWatch({\n        control,\n        name: 'settings',\n    });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'cursor') {\n            return;\n        }\n\n        let _wallBefore: Wall[] = [];\n        let selectedWall: Wall | undefined;\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            setValue('pointerDown', true);\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                const points = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((p) => distanceBetween(p, { x, y }) <= wallCircleRadius)\n                    .map((p) => {\n                        p.editId = id;\n                        return p;\n                    });\n\n                const newSelectedWall =\n                    points.length === 0\n                        ? plan.walls.find((w) => {\n                              const p = pointProjection({ x, y }, w, true);\n                              return p && distanceBetween({ x, y }, p) < wallCircleRadius;\n                          })\n                        : undefined;\n\n                if (selectedWall) drawWall(drawing, selectedWall);\n                selectedWall = newSelectedWall;\n                if (selectedWall) drawWall(drawing, selectedWall, '#00f');\n                setValue('selectedWall', selectedWall);\n\n                _wallBefore = cloneEditingWalls(plan.walls);\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                const editingPoints = plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((p) => p.editId === id);\n                editingPoints.forEach((p) => {\n                    p.x = x;\n                    p.y = y;\n                });\n                if (magneticMode && editingPoints.length > 0) {\n                    const guidLines = findAllGuideLines(plan.walls, editingPoints, { x, y });\n                    drawGuideLines(drawing, editingPoints[0], guidLines);\n                }\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => drawWall(drawing, w));\n            });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((x) => x.editId === id)\n                    .forEach((p) => {\n                        if (magneticMode) {\n                            const closePoint = plan.walls\n                                .flatMap((w) => [w.p1, w.p2])\n                                .filter((o) => o !== p)\n                                .find((o) => distanceBetween(o, p) <= wallCircleRadius);\n                            if (closePoint) {\n                                p.x = closePoint.x;\n                                p.y = closePoint.y;\n                            }\n                        }\n                    });\n\n                commandsHistory.add({\n                    tool: 'cursor',\n                    data: {\n                        before: _wallBefore,\n                        after: cloneEditingWalls(plan.walls),\n                    },\n                });\n\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => {\n                        w.p1.editId = undefined;\n                        w.p2.editId = undefined;\n                        drawWall(drawing, w);\n                    });\n                removeGuideLines(drawing, { editId: id, x: 0, y: 0 });\n            });\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [\n        scale,\n        stylusMode,\n        magneticMode,\n        wallAlignmentMode,\n        commandsHistory,\n        interactiveRef,\n        selectedTool,\n        plan.walls,\n        drawing,\n        setValue,\n    ]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCursor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCursor);\nexport default __webpack_public_path__ + \"static/media/cursor.d5e3bd0c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { drawCircle, wallGroupId } from '../Draw';\nimport { crossLines } from '../Geometry';\nimport { Point, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const DestroyTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, selectedTool } = useWatch({ control, name: 'settings' });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'destroy') {\n            return;\n        }\n\n        let start: Point | undefined;\n\n        const onStart = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                return;\n            }\n            setValue('pointerDown', true);\n            start = { x, y, editId: e.id };\n        };\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            drawing.createGroup('cross', 'walls');\n            drawing.drawLine({\n                id: `d${e.id}`,\n                x1: start!.x,\n                y1: start!.y,\n                x2: x,\n                y2: y,\n                stroke: 'red',\n                strokeWidth: scale,\n                groupId: 'cross',\n            });\n            const destroyLine = { id: `${e.id}`, p1: start!, p2: { x, y } };\n            const crosses = plan.walls\n                .map((w) => crossLines(w, destroyLine, true))\n                .filter((p) => p);\n            const crossIds = crosses.map((p, i) => {\n                const crossId = `x${i}`;\n                drawCircle(drawing, crossId, 'cross', p!.x, p!.y, 5, 'red');\n                return crossId;\n            });\n            drawing.removeElements(\n                (e) => e.id.startsWith('x') && !crossIds.includes(e.id),\n                'cross',\n            );\n        };\n        const onEnd = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const destroyLine = { id: `${e.id}`, p1: start!, p2: { x, y } };\n            const destroyedWalls = plan.walls.filter((w) => crossLines(w, destroyLine, true));\n            destroyedWalls.forEach((w) => drawing.removeElement(wallGroupId(w)));\n            plan.walls = plan.walls.filter((w) => !destroyedWalls.includes(w));\n            commandsHistory.add({\n                tool: 'destroy',\n                data: { destroyedWalls },\n            });\n            drawing.removeElement('cross');\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [commandsHistory, drawing, interactiveRef, plan, scale, selectedTool, stylusMode, setValue]);\n\n    return null;\n};\n","import React, { useEffect } from 'react';\nimport { distanceBetween } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const HistoryTool: React.FC = () => {\n    const { commandsHistory, interactiveRef } = useGlobalContext();\n    useEffect(() => {\n        if (!interactiveRef.current) return;\n\n        let lastEnd = 0;\n        let lines: Line[] = [];\n\n        const onStart = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const x = touch.pageX;\n                const y = touch.pageY;\n                const id = touch.identifier.toString();\n                if (!lines.find((l) => l.id === id)) {\n                    lines.push({ id, p1: { x, y }, p2: { x, y } });\n                }\n            });\n        };\n        const onMove = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const x = touch.pageX;\n                const y = touch.pageY;\n                const id = touch.identifier.toString();\n                const line = lines.find((l) => l.id === id);\n                if (line) {\n                    line.p2.x = x;\n                    line.p2.y = y;\n                }\n            });\n        };\n        const onEnd = (e: ToolEvent) => {\n            const now = new Date().getTime();\n            const timeDiff = now - lastEnd;\n            lastEnd = now;\n            if (!e.touches || e.touches?.length > 0) {\n                return;\n            }\n            const notMoved = lines.filter((l) => distanceBetween(l.p1, l.p2) < 10).length;\n            if (timeDiff < 500 && lines.length === 2 && notMoved === 2) {\n                commandsHistory.undo();\n            } else if (timeDiff < 500 && lines.length === 3 && notMoved === 3) {\n                commandsHistory.redo();\n            }\n            lines = [];\n        };\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [commandsHistory, interactiveRef]);\n\n    return null;\n};\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { DrawPoint } from '../Draw';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nconst tools: IToolType[] = ['pencil', 'eraser'];\n\nexport const PenTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, magneticMode, selectedTool } = useWatch({ control, name: 'settings' });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || !tools.includes(selectedTool)) {\n            return;\n        }\n\n        let points: DrawPoint[] = [];\n        let id: string | undefined;\n\n        const getStrokeOptions = () => {\n            return {\n                strokeWidth: scale * (selectedTool === 'eraser' ? 15 : 1.5),\n                stroke: selectedTool === 'pencil' ? '#000' : '#fff',\n            };\n        };\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            if (e.type === 'touch' && e.touches!.length > 1) return;\n            setValue('pointerDown', true);\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points.push({ x, y, pressure: touch?.force });\n            const { stroke, strokeWidth } = getStrokeOptions();\n            id = drawing.drawPath({\n                points,\n                stroke,\n                strokeWidth,\n                groupId: 'pen',\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            if (e.type === 'mouse' && !e.buttons) return;\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points!.push({ x, y, pressure: touch?.force });\n            const { strokeWidth } = getStrokeOptions();\n            drawing.drawPath({ id, points, strokeWidth });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            if (stylusMode && e.type !== 'stylus') return;\n            const strokeOptions = getStrokeOptions();\n            const path = { id, points, ...strokeOptions, groupId: 'pen' };\n            plan.notes.push(path);\n            commandsHistory.add({\n                tool: selectedTool as 'pencil' | 'eraser',\n                data: { options: path },\n            });\n            id = undefined;\n            points = [];\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [\n        scale,\n        stylusMode,\n        magneticMode,\n        interactiveRef,\n        commandsHistory,\n        selectedTool,\n        drawing,\n        plan,\n        setValue,\n    ]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEraser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEraser);\nexport default __webpack_public_path__ + \"static/media/eraser.e5d177cd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.a3ff265f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3,16H12V21H3V16M2,10H8V15H2V10M9,10H15V15H9V10M16,10H22V15H16V10M13,16H21V21H13V16M3,4H11V9H3V4M12,4H21V9H12V4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWall);\nexport default __webpack_public_path__ + \"static/media/wall.87ac9ec5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBulldozer(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4,4C3.45,4 3,4.45 3,5V10C2.54,10 2.14,10.31 2.03,10.76V13.97H2.29C2.65,13.37 3.3,13 4,13H13C13.7,13 14.35,13.37 14.71,13.97H16.03L16,11V11C16,10.45 15.55,10 15,10H13V8C13,7.45 12.55,7 12,7C11.45,7 11,7.45 11,8V10H9V5C9,4.45 8.55,4 8,4H4M5,6H7V10L7,11H5V6M17,11V19H22V18L19,17L18,11H17M4,15C2.9,15 2,15.9 2,17C2,18.1 2.9,19 4,19H13C14.1,19 15,18.1 15,17C15,15.9 14.1,15 13,15H4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBulldozer);\nexport default __webpack_public_path__ + \"static/media/bulldozer.b9fa2193.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport { useWatch } from 'react-hook-form';\nimport { ReactComponent as CursorIcon } from '../../assets/icons/cursor.svg';\nimport { ReactComponent as EraserIcon } from '../../assets/icons/eraser.svg';\nimport { ReactComponent as PencilIcon } from '../../assets/icons/pencil.svg';\nimport { ReactComponent as WallIcon } from '../../assets/icons/wall.svg';\nimport { ReactComponent as DestroyIcon } from '../../assets/icons/bulldozer.svg';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport { RoundButton } from '../RoundButton/RoundButton';\nimport './Toolbox.css';\n\ntype IToolboxProps = {};\n\nexport const Toolbox: React.FC<IToolboxProps> = () => {\n    const { control, setValue } = useGlobalContext();\n    const selectedTool = useWatch({ control, name: 'settings.selectedTool' });\n\n    const setSelectedTool = (tool: IToolType) => {\n        setValue('settings.selectedTool', tool);\n    };\n\n    type IToolVoxItemProps = {\n        type: IToolType;\n        name: string;\n        icon?: JSX.Element;\n    };\n    const ToolBoxItem: React.FC<IToolVoxItemProps> = ({ type, name, icon }) => {\n        return (\n            <RoundButton\n                title={name}\n                onClick={() => setSelectedTool(type)}\n                className={clsx(selectedTool === type && 'toolboxSelectedItem')}\n            >\n                {icon ?? name}\n            </RoundButton>\n        );\n    };\n\n    return (\n        <div className=\"toolboxContainer\">\n            <ToolBoxItem type=\"wall\" name=\"Wall\" icon={<WallIcon />} />\n            <ToolBoxItem type=\"destroy\" name=\"Destroy\" icon={<DestroyIcon />} />\n            <ToolBoxItem type=\"cursor\" name=\"Cursor\" icon={<CursorIcon />} />\n            <ToolBoxItem type=\"pencil\" name=\"Pencil\" icon={<PencilIcon />} />\n            <ToolBoxItem type=\"eraser\" name=\"Eraser\" icon={<EraserIcon />} />\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useWatch } from 'react-hook-form';\nimport {\n    drawGuideLines,\n    drawWall,\n    drawWallStart,\n    removeGuideLines,\n    wallCircleRadius,\n    wallGroupId,\n} from '../Draw';\nimport { distanceBetween, findAlignedGuideLines, getWallOrientation } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const WallTool: React.FC = () => {\n    const { commandsHistory, interactiveRef, drawing, control, setValue } = useGlobalContext();\n    const { stylusMode, magneticMode, wallAlignmentMode, selectedTool } = useWatch({\n        control,\n        name: 'settings',\n    });\n    const scale = useWatch({ control, name: 'scale' });\n    const plan = useWatch({ control, name: 'plan' });\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'wall') {\n            return;\n        }\n\n        const cancel = (id: number) => {\n            const wallIndex = plan.walls.findIndex((x) => x.editId === id);\n            if (wallIndex >= 0) {\n                const walls = plan.walls.splice(wallIndex, 1);\n                drawing.removeElement(wallGroupId(walls[0]));\n                walls[0].editId = undefined;\n            }\n        };\n\n        const onStart = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type !== 'stylus') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                setValue('pointerDown', false);\n                cancel(e.touches![0].identifier);\n                return;\n            }\n            setValue('pointerDown', true);\n            const wallId =\n                plan.walls.length > 0\n                    ? Math.max.apply(\n                          null,\n                          plan.walls.map((w) => parseInt(w.id)),\n                      ) + 1\n                    : 1;\n            const wall: Line = {\n                id: `${wallId}`,\n                editId: e.id,\n                p1: { x, y },\n                p2: { x, y },\n            };\n            if (magneticMode) {\n                const closePoint = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .find((p) => distanceBetween(p, wall.p1) <= wallCircleRadius);\n\n                if (closePoint) {\n                    wall.p1.x = closePoint.x;\n                    wall.p1.y = closePoint.y;\n                    wall.p2.x = closePoint.x;\n                    wall.p2.y = closePoint.y;\n                }\n            }\n            plan.walls.push(wall);\n            drawWallStart(drawing, wall);\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                wall.p2.x = x;\n                wall.p2.y = y;\n                if (wallAlignmentMode) {\n                    const orientation = getWallOrientation({ p1: wall.p1, p2: { x, y } });\n                    if (orientation === 'horizontal') {\n                        wall.p2.y = wall.p1.y;\n                    } else {\n                        wall.p2.x = wall.p1.x;\n                    }\n                    const guideLines = findAlignedGuideLines(plan.walls, wall);\n                    drawGuideLines(drawing, wall.p2, guideLines);\n                }\n                drawWall(drawing, wall);\n            }\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                if (magneticMode) {\n                    const closePoint = plan.walls\n                        .filter((w) => w !== wall)\n                        .flatMap((item) => [item.p1, item.p2])\n                        .find((p) => distanceBetween(p, wall.p2) <= wallCircleRadius);\n\n                    if (closePoint) {\n                        wall.p2.x = closePoint.x;\n                        wall.p2.y = closePoint.y;\n                    }\n                }\n                removeGuideLines(drawing, wall.p2);\n                drawWall(drawing, wall);\n                wall.editId = undefined;\n                commandsHistory.add({\n                    tool: 'wall',\n                    data: { addedWall: wall },\n                });\n            }\n            if (!e.touches || e.touches?.length === 0) {\n                setValue('pointerDown', false);\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n    }, [\n        scale,\n        stylusMode,\n        magneticMode,\n        wallAlignmentMode,\n        commandsHistory,\n        interactiveRef,\n        selectedTool,\n        plan.walls,\n        drawing,\n        setValue,\n    ]);\n\n    return null;\n};\n","import React from 'react';\nimport './App.css';\nimport { FileActions } from './components/FileActions/FileActions';\nimport { GlobalContext, useGlobalState } from './components/GlobalContext';\nimport { HistoryPanel } from './components/History/HistoryPanel';\nimport { MiniKeyboard } from './components/Keyboard/Keyboard';\nimport PreventTouch from './components/PreventTouch';\nimport { Settings } from './components/Settings/Settings';\nimport { CursorTool } from './components/Tools/CursorTool';\nimport { DestroyTool } from './components/Tools/DestroyTool';\nimport { HistoryTool } from './components/Tools/HistoryTool';\nimport { PenTool } from './components/Tools/PenTool';\nimport { Toolbox } from './components/Tools/Toolbox';\nimport { WallTool } from './components/Tools/WallTool';\n\nfunction App() {\n    const globalContext = useGlobalState();\n    const { interactiveRef, drawingRef } = globalContext;\n    console.log('App render');\n\n    return (\n        <GlobalContext.Provider value={globalContext}>\n            <main className=\"unselectable\">\n                <PreventTouch />\n                <HistoryTool />\n                <WallTool />\n                <CursorTool />\n                <PenTool />\n                <DestroyTool />\n                <div ref={interactiveRef} className=\"paper main\">\n                    <svg ref={drawingRef} style={{ width: '100%', height: '100%' }}>\n                        <g id=\"pen\" />\n                        <g id=\"guide\" />\n                        <g id=\"walls\" />\n                    </svg>\n                </div>\n                <Toolbox />\n                <div className=\"rightMenu\">\n                    <Settings />\n                    <FileActions />\n                    <ol style={{ paddingInlineStart: 15, margin: 0 }}>\n                        <b>What need to do</b>\n                        <li>hotkeys to undo</li>\n                        <li>handle resize</li>\n                        <li>pen color, width</li>\n                        <li>door, window</li>\n                        <li>translate app</li>\n                        <li>custom zoom</li>\n                        <li>hotkeys for toolbox</li>\n                    </ol>\n                </div>\n                <MiniKeyboard />\n                <HistoryPanel />\n            </main>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}