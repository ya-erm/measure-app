{"version":3,"sources":["utils/svg/convert.ts","hooks/useDrawing.ts","components/GlobalContext.tsx","assets/icons/undo.svg","components/Draw.ts","components/History/HistoryPanel.tsx","components/Settings/Settings.tsx","components/Geometry.ts","components/Tools/ToolEvent.ts","components/Tools/CursorTool.tsx","assets/icons/cursor.svg","components/Tools/PenTool.tsx","assets/icons/eraser.svg","assets/icons/pencil.svg","assets/icons/wall.svg","assets/icons/save.svg","components/Tools/Toolbox.tsx","utils/svg/save.ts","components/Tools/WallTool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getSvgPathFromStroke","stroke","length","d","reduce","acc","i","arr","x0","y0","x1","y1","push","join","SVG_NS","IID","setLineOptions","line","options","x2","y2","strokeWidth","strokeDashArray","setAttribute","toString","setRectOptions","ellipse","x","y","width","height","fill","setCircleOptions","rx","ry","findOrCreate","svg","key","type","groupId","element","getElementById","undefined","id","document","createElementNS","dest","appendChild","useGlobalState","useState","scale","selectedTool","pointerDown","stylusMode","magneticMode","wallAlignmentMode","plan","walls","globalState","setGlobalState","updateGlobalState","useCallback","update","prev","interactiveRef","useRef","svgRef","useEffect","current","parent","parentElement","getBoundingClientRect","drawing","drawLine","drawCircle","drawRect","createGroup","parentId","removeElement","group","querySelector","remove","removeElements","predicate","childNodes","forEach","child","drawPath","points","path","getStroke","size","smoothing","thinning","useDrawing","drawingRef","_path","GlobalContext","React","createContext","useGlobalContext","context","useContext","Error","_excluded","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgUndo","_ref","title","titleId","props","xmlns","xmlnsXlink","viewBox","ref","ForwardRef","ctx","drawSquare","xc","yc","radius","wallCircleRadius","wallGroupId","wall","pointGroupId","point","editId","drawWallStart","gid","p1","drawWall","p2","drawWallEnd","drawGuideLines","guideLines","guideLinesIds","map","guideLine","guideLineId","includes","removeGuideLines","drawHistory","HistoryPanel","className","onClick","item","pop","tool","data","undo","Settings","checked","onChange","e","href","rel","style","marginLeft","getWallOrientation","dx","dy","Math","abs","distanceBetween","sqrt","guideLineMagnetSize","registerTool","onStart","onMove","onEnd","mouseToToolEvent","pageX","pageY","buttons","changedTouches","identifier","onMouseDown","onMouseMove","onMouseUp","touchToToolEvent","touch","touches","Array","from","touchType","onTouchStart","onTouchMove","onTouchEnd","addEventListener","removeEventListener","CursorTool","flatMap","filter","p","w","editingPoints","guidLines","findAllGuideLines","closePoint","o","find","tools","PenTool","pressure","force","SvgCursor","SvgEraser","SvgPencil","SvgWall","SvgSave","Toolbox","ToolBoxItem","name","icon","clsx","clone","cloneNode","svgDocType","implementation","createDocumentType","svgDoc","createDocument","replaceChild","documentElement","svgData","XMLSerializer","serializeToString","a","createElement","encodeURIComponent","replace","download","Date","toLocaleDateString","body","click","saveSvg","WallTool","wallIndex","findIndex","splice","cancel","orientation","other","findAlignedGuideLines","App","globalContext","preventDefault","passive","Provider","value","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a72981e0.chunk.js","sourcesContent":["export function getSvgPathFromStroke(stroke: number[][]) {\n    if (!stroke.length) return '';\n\n    const d = stroke.reduce(\n        (acc, [x0, y0], i, arr) => {\n            const [x1, y1] = arr[(i + 1) % arr.length];\n            acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n            return acc;\n        },\n        ['M', ...stroke[0], 'Q'],\n    );\n\n    d.push('Z');\n    return d.join(' ');\n}\n","import React, { useEffect, useRef } from 'react';\nimport { getStroke } from 'perfect-freehand';\nimport { getSvgPathFromStroke } from '../utils/svg/convert';\n\ntype IDrawIdOptions = {\n    id?: string;\n    groupId?: string;\n};\n\ntype IDrawStrokeOptions = {\n    stroke?: string;\n    strokeWidth?: number;\n    strokeDashArray?: string;\n};\ntype IDrawShapeOptions = {\n    fill?: string;\n} & IDrawStrokeOptions;\n\ntype IDrawLineOptions = {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n} & IDrawStrokeOptions &\n    IDrawIdOptions;\n\ntype IDrawRectOptions = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IDrawCircleOptions = {\n    x: number;\n    y: number;\n    rx: number;\n    ry: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IPathPoint = { x: number; y: number; pressure?: number };\n\ntype IDrawPathOptions = {\n    points: IPathPoint[];\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\nexport type IDrawing = {\n    createGroup: (id?: string, groupId?: string) => string;\n    drawLine: (options: IDrawLineOptions) => string;\n    drawCircle: (options: IDrawCircleOptions) => string;\n    drawRect: (options: IDrawRectOptions) => string;\n    drawPath: (options: IDrawPathOptions) => string;\n    removeElement: (id: string, groupId?: string) => void;\n    removeElements: (predicate: (element: ChildNode) => boolean, groupId?: string) => void;\n};\n\ntype UseDrawingReturn = {\n    svgRef: React.RefObject<SVGSVGElement>;\n    drawing: IDrawing;\n};\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nlet IID = 0;\n\nfunction setLineOptions(line: Element, options: IDrawLineOptions) {\n    const { x1, x2, y1, y2, strokeWidth, stroke = '#000', strokeDashArray } = options;\n    line.setAttribute('x1', x1.toString());\n    line.setAttribute('y1', y1.toString());\n    line.setAttribute('x2', x2.toString());\n    line.setAttribute('y2', y2.toString());\n    line.setAttribute('stroke', stroke);\n    if (strokeWidth) line.setAttribute('stroke-width', strokeWidth.toString());\n    if (strokeDashArray) line.setAttribute('stroke-dasharray', strokeDashArray);\n}\n\nfunction setRectOptions(ellipse: Element, options: IDrawRectOptions) {\n    const { x, y, width, height, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('x', x.toString());\n    ellipse.setAttribute('y', y.toString());\n    ellipse.setAttribute('width', width.toString());\n    ellipse.setAttribute('height', height.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setCircleOptions(ellipse: Element, options: IDrawCircleOptions) {\n    const { x, y, rx, ry, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('cx', x.toString());\n    ellipse.setAttribute('cy', y.toString());\n    ellipse.setAttribute('rx', rx.toString());\n    ellipse.setAttribute('ry', ry.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction findOrCreate(\n    svg: SVGSVGElement | null,\n    key: string | undefined,\n    type: string,\n    groupId?: string,\n) {\n    let element = key ? svg?.getElementById(key) : undefined;\n    const id = key ?? `${IID++}`;\n    if (!element) {\n        element = document.createElementNS(SVG_NS, type);\n        element.setAttribute('id', id);\n        const dest = groupId ? svg?.getElementById(groupId) : svg;\n        dest?.appendChild(element);\n    }\n    return { element, id };\n}\n\nexport function useDrawing(scale: number = 1): UseDrawingReturn {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        const parent = svg?.parentElement;\n        if (!svg || !parent) return;\n        const { width, height } = parent!.getBoundingClientRect();\n        svg.setAttribute('viewBox', `0 0 ${width * scale} ${height * scale}`);\n        svg.setAttribute('version', '1.1');\n        svg.setAttribute('xmlns', SVG_NS);\n        svg.setAttribute('width', `${width * scale}`);\n        svg.setAttribute('height', `${height * scale}`);\n    }, [scale, svgRef]);\n\n    const drawing: IDrawing = {\n        drawLine: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'line',\n                options.groupId,\n            );\n            setLineOptions(element, options);\n            return id;\n        },\n        drawCircle: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'ellipse',\n                options.groupId,\n            );\n            setCircleOptions(element, options);\n            return id;\n        },\n        drawRect: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'rect',\n                options.groupId,\n            );\n            setRectOptions(element, options);\n            return id;\n        },\n        createGroup: (key, parentId) => {\n            const { id } = findOrCreate(svgRef.current, key, 'g', parentId);\n            return id;\n        },\n        removeElement: (id, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            const element = group?.querySelector(`#${id}`);\n            element?.remove();\n        },\n        removeElements: (predicate, groupId) => {\n            const group = groupId ? svgRef.current?.getElementById(groupId) : svgRef.current;\n            group?.childNodes?.forEach((child) => {\n                if (predicate(child)) {\n                    child.remove();\n                }\n            });\n        },\n\n        drawPath: (options) => {\n            const { id: key, points, groupId } = options;\n            const { element: path, id } = findOrCreate(svgRef.current, key, 'path', groupId);\n            path.setAttribute(\n                'd',\n                getSvgPathFromStroke(\n                    getStroke(points, {\n                        // TODO: configure drawing options\n                        size: options.strokeWidth,\n                        smoothing: 0.5,\n                        thinning: 0.5,\n                    }),\n                ),\n            );\n            return id;\n        },\n    };\n\n    return {\n        svgRef,\n        drawing,\n    };\n}\n","import React, { Dispatch, SetStateAction, useCallback, useRef, useState } from 'react';\nimport { IDrawing, useDrawing } from '../hooks/useDrawing';\n\nexport type IToolType = 'wall' | 'cursor' | 'move' | 'pencil' | 'eraser';\n\nexport type Point = {\n    x: number;\n    y: number;\n    editId?: number;\n};\n\nexport type Line = {\n    id: string;\n    p1: Point;\n    p2: Point;\n    editId?: number;\n};\n\nexport type IPlan = {\n    walls: Line[];\n};\n\nexport type IGlobalState = {\n    scale: number;\n    selectedTool: IToolType;\n    pointerDown: boolean;\n\n    stylusMode: boolean;\n    magneticMode: boolean;\n    wallAlignmentMode: boolean;\n\n    plan: IPlan;\n};\n\nexport type IGlobalContext = {\n    globalState: IGlobalState;\n    setGlobalState: Dispatch<SetStateAction<IGlobalState>>;\n    updateGlobalState: (state: Partial<IGlobalState>) => void;\n\n    drawing: IDrawing;\n    drawingRef: React.RefObject<SVGSVGElement>;\n    interactiveRef: React.RefObject<HTMLDivElement>;\n};\n\nexport function useGlobalState(): IGlobalContext {\n    const defaultState: Partial<IGlobalState> = {\n        scale: 2,\n        selectedTool: 'wall',\n        pointerDown: false,\n\n        stylusMode: true,\n        magneticMode: true,\n        wallAlignmentMode: true,\n\n        plan: {\n            walls: [],\n        },\n    };\n\n    const [globalState, setGlobalState] = useState<IGlobalState>(defaultState as any);\n\n    const updateGlobalState = useCallback(\n        (update) => setGlobalState((prev) => ({ ...prev, ...update })),\n        [],\n    );\n\n    const interactiveRef = useRef<HTMLDivElement>(null);\n    const { svgRef: drawingRef, drawing } = useDrawing(globalState.scale);\n    const context: IGlobalContext = {\n        drawing,\n        drawingRef,\n        interactiveRef,\n\n        globalState,\n        setGlobalState,\n        updateGlobalState,\n    };\n    return context;\n}\n\nexport const GlobalContext = React.createContext<IGlobalContext>(null!);\n\nexport const useGlobalContext = () => {\n    const context = React.useContext<IGlobalContext>(GlobalContext);\n    if (context === null) {\n        throw new Error('useGlobalContext must be used within an GlobalContext.Provider');\n    }\n    return context;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUndo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndo);\nexport default __webpack_public_path__ + \"static/media/undo.f3bbb4ae.svg\";\nexport { ForwardRef as ReactComponent };","import { IDrawing } from '../hooks/useDrawing';\nimport { GuideLine } from './Geometry';\nimport { Line, Point } from './GlobalContext';\n\nexport type DrawEvent = { x: number; y: number; id: number };\n\nexport type DrawPoint = Point & {\n    pressure?: number;\n    color?: string;\n};\n\ntype Context = IDrawing;\n\nexport function drawLine(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    strokeDashArray?: string,\n) {\n    ctx.drawLine({ id, groupId, x1, y1, x2, y2, strokeDashArray });\n}\nexport function drawSquare(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    size: number,\n    fill?: string,\n) {\n    ctx.drawRect({\n        id,\n        groupId,\n        x: xc - size / 2,\n        y: yc - size / 2,\n        width: size,\n        height: size,\n        fill,\n    });\n}\n\nexport function drawCircle(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    radius: number,\n    fill?: string,\n    stroke?: string,\n) {\n    ctx.drawCircle({ id, groupId, x: xc, y: yc, rx: radius, ry: radius, fill, stroke });\n}\n\nexport const wallPointSize = 10;\nexport const wallCircleRadius = 15;\n\nexport const wallGroupId = (wall: Line) => `w${wall.id}`;\nexport const pointGroupId = (point: Point) => `p${point.editId}`;\n\nexport function drawWallStart(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}s`, gid, wall.p1.x, wall.p1.y, wallPointSize, 'green');\n}\nexport function drawWallEnd(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}e`, gid, wall.p2.x, wall.p2.y, wallPointSize, 'red');\n}\n\nexport function drawWall(ctx: Context, wall: Line) {\n    const gid = ctx.createGroup(wallGroupId(wall), 'walls');\n    drawCircle(ctx, `w${wall.id}c1`, gid, wall.p1.x, wall.p1.y, wallCircleRadius, 'none', '#000');\n    drawCircle(ctx, `w${wall.id}c2`, gid, wall.p2.x, wall.p2.y, wallCircleRadius, 'none', '#000');\n    drawLine(ctx, `w${wall.id}l`, gid, wall.p1.x, wall.p1.y, wall.p2.x, wall.p2.y);\n    drawWallStart(ctx, wall);\n    drawWallEnd(ctx, wall);\n}\n\nexport function drawGuideLines(ctx: Context, point: Point, guideLines: GuideLine[]) {\n    const groupId = ctx.createGroup(pointGroupId(point), 'guide');\n    const guideLinesIds = guideLines.map((guideLine) => {\n        const guideLineId = `p${point.editId}g${guideLine.wall.id}`;\n        drawLine(\n            ctx,\n            guideLineId,\n            groupId,\n            point.x,\n            point.y,\n            guideLine.point.x,\n            guideLine.point.y,\n            '10 10',\n        );\n        return guideLineId;\n    });\n    ctx.removeElements((child) => !guideLinesIds.includes((child as Element).id), groupId);\n}\n\nexport function removeGuideLines(ctx: Context, point: Point) {\n    ctx.removeElement(pointGroupId(point), 'guide');\n}\n","import { ReactComponent as UndoIcon } from '../../assets/icons/undo.svg';\nimport { IDrawing } from '../../hooks/useDrawing';\nimport { drawWall, wallGroupId } from '../Draw';\nimport { Line } from '../GlobalContext';\nimport './HistoryPanel.css';\n\nexport type IHistoryRecord =\n    | {\n          tool: 'wall' | 'cursor';\n          data: Line[];\n      }\n    | {\n          tool: 'pencil' | 'eraser';\n          data: string;\n      };\n\nexport let drawHistory: IHistoryRecord[] = [];\n\nexport const HistoryPanel: React.FC<{ drawing: IDrawing }> = ({ drawing }) => {\n    const undo = () => {\n        const item = drawHistory.pop();\n        if (!item) return;\n        switch (item.tool) {\n            case 'wall':\n                item.data.forEach((wall) => {\n                    drawing.removeElement(wallGroupId(wall));\n                });\n                break;\n            case 'cursor':\n                item.data.forEach((wall) => {\n                    drawWall(drawing, wall);\n                });\n                break;\n            case 'pencil':\n            case 'eraser':\n                drawing.removeElement(item.data);\n                break;\n        }\n    };\n    return (\n        <div className=\"historyPanel\">\n            <div className=\"historyPanelItem\" onClick={() => undo()}>\n                <UndoIcon />\n            </div>\n            {/* <div className=\"historyPanelItem\" onClick={() => redo()}>\n                <RedoIcon />\n            </div> */}\n        </div>\n    );\n};\n","import React from 'react';\nimport { useGlobalContext } from '../GlobalContext';\nimport './Settings.css';\n\nexport const Settings: React.FC = () => {\n    const {\n        globalState: { stylusMode, magneticMode, wallAlignmentMode },\n        updateGlobalState,\n    } = useGlobalContext();\n    return (\n        <div className=\"settingsList\">\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={stylusMode ?? false}\n                        onChange={(e) => updateGlobalState({ stylusMode: e.target.checked })}\n                    />\n                    Режим стилуса\n                </label>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={wallAlignmentMode ?? false}\n                        onChange={(e) => updateGlobalState({ wallAlignmentMode: e.target.checked })}\n                    />\n                    Ровные стены\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={magneticMode ?? false}\n                        onChange={(e) => updateGlobalState({ magneticMode: e.target.checked })}\n                    />\n                    Привязка к стенам\n                </label>\n            </div>\n\n            <a\n                href=\"https://perfect-freehand-example.vercel.app/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{ marginLeft: 25 }}\n            >\n                Perfect freehand\n            </a>\n        </div>\n    );\n};\n","import { Line, Point } from './GlobalContext';\n\nexport type WallOrientation = 'horizontal' | 'vertical';\n\nexport function getWallOrientation({ p1, p2 }: { p1: Point; p2: Point }): WallOrientation {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    if (Math.abs(dx) > Math.abs(dy)) {\n        return 'horizontal';\n    }\n    return 'vertical';\n}\n\nexport function distanceBetween(p1: Point, p2: Point): number {\n    return Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n}\n\nexport const guideLineMagnetSize = 20;\n\nexport type GuideLine = {\n    wall: Line;\n    point: Point;\n};\n\nexport function findAlignedGuideLines(walls: Line[], wall: Line): GuideLine[] {\n    const orientation = getWallOrientation(wall);\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (wall === w) return;\n        const other = w.p1.x === w.p2.x ? 'vertical' : w.p1.y === w.p2.y ? 'horizontal' : 'other';\n        if (orientation === 'horizontal' && other === 'horizontal') {\n            if (Math.abs(wall.p2.x - w.p1.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p1.x;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.x - w.p2.x) < guideLineMagnetSize) {\n                wall.p2.x = w.p2.x;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        } else if (orientation === 'vertical' && other === 'vertical') {\n            if (Math.abs(wall.p2.y - w.p1.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p1.y;\n                guidLines.push({ wall: w, point: w.p1 });\n            } else if (Math.abs(wall.p2.y - w.p2.y) < guideLineMagnetSize) {\n                wall.p2.y = w.p2.y;\n                guidLines.push({ wall: w, point: w.p2 });\n            }\n        }\n    });\n    return guidLines;\n}\n\nexport function findAllGuideLines(walls: Line[], points: Point[], point: Point): GuideLine[] {\n    const guidLines: GuideLine[] = [];\n    walls.forEach((w) => {\n        if (Math.abs(w.p1.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.x = w.p1.x;\n            });\n        }\n        if (Math.abs(w.p1.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p1 });\n            points.forEach((p) => {\n                p.y = w.p1.y;\n            });\n        }\n\n        if (Math.abs(w.p2.x - point.x) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.x = w.p2.x;\n            });\n        }\n        if (Math.abs(w.p2.y - point.y) < guideLineMagnetSize) {\n            guidLines.push({ wall: w, point: w.p2 });\n            points.forEach((p) => {\n                p.y = w.p2.y;\n            });\n        }\n    });\n    return guidLines;\n}\n","type TypedTouch = Touch & { touchType: 'stylus' | 'direct' };\n\nexport type ToolEvent = {\n    id: number;\n    x: number;\n    y: number;\n\n    type: 'mouse' | 'stylus' | 'touch';\n    buttons?: number;\n    touches?: TypedTouch[];\n    changedTouches?: TypedTouch[];\n};\n\nexport type ToolEventHandler = (e: ToolEvent) => void;\n\nexport function registerTool(\n    element: HTMLElement,\n    onStart: ToolEventHandler,\n    onMove: ToolEventHandler,\n    onEnd: ToolEventHandler,\n) {\n    function mouseToToolEvent(e: MouseEvent): ToolEvent {\n        return {\n            id: 1,\n            x: e.pageX,\n            y: e.pageY,\n            type: 'mouse',\n            buttons: e.buttons,\n            changedTouches: [\n                {\n                    identifier: 1,\n                    pageX: e.pageX,\n                    pageY: e.pageY,\n                } as any as TypedTouch,\n            ],\n        };\n    }\n    const onMouseDown = (e: MouseEvent) => onStart(mouseToToolEvent(e));\n    const onMouseMove = (e: MouseEvent) => onMove(mouseToToolEvent(e));\n    const onMouseUp = (e: MouseEvent) => onEnd(mouseToToolEvent(e));\n\n    function touchToToolEvent(e: TouchEvent): ToolEvent {\n        const touch = e.changedTouches[0] as TypedTouch;\n        return {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY,\n            touches: Array.from(e.touches) as TypedTouch[],\n            changedTouches: Array.from(e.changedTouches) as TypedTouch[],\n            type: touch.touchType === 'stylus' ? 'stylus' : 'touch',\n        };\n    }\n    const onTouchStart = (e: TouchEvent) => onStart(touchToToolEvent(e));\n    const onTouchMove = (e: TouchEvent) => onMove(touchToToolEvent(e));\n    const onTouchEnd = (e: TouchEvent) => onEnd(touchToToolEvent(e));\n\n    element.addEventListener('mousedown', onMouseDown);\n    element.addEventListener('mousemove', onMouseMove);\n    element.addEventListener('mouseup', onMouseUp);\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('touchmove', onTouchMove);\n    element.addEventListener('touchend', onTouchEnd);\n\n    return () => {\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('mousemove', onMouseMove);\n        element.removeEventListener('mouseup', onMouseUp);\n\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchmove', onTouchMove);\n        element.removeEventListener('touchend', onTouchEnd);\n    };\n}\n","import React, { useEffect } from 'react';\nimport { drawGuideLines, drawWall, removeGuideLines, wallCircleRadius } from '../Draw';\nimport { distanceBetween, findAllGuideLines } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { drawHistory } from '../History/HistoryPanel';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const CursorTool: React.FC = () => {\n    const { interactiveRef, drawing, globalState, updateGlobalState } = useGlobalContext();\n    const { scale, stylusMode, magneticMode, selectedTool, plan } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'cursor') {\n            return;\n        }\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            updateGlobalState({ pointerDown: true });\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((p) => distanceBetween(p, { x, y }) <= wallCircleRadius)\n                    .forEach((p) => {\n                        p.editId = id;\n                    });\n\n                drawHistory.push({\n                    tool: 'cursor',\n                    data: plan.walls\n                        .filter((w) => w.p1.editId || w.p2.editId)\n                        .map((w) => {\n                            const clone: Line = {\n                                id: w.id,\n                                p1: { x: w.p1.x, y: w.p1.y },\n                                p2: { x: w.p2.x, y: w.p2.y },\n                            };\n                            return clone;\n                        }),\n                });\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                const editingPoints = plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((p) => p.editId === id);\n                editingPoints.forEach((p) => {\n                    p.x = x;\n                    p.y = y;\n                });\n                if (magneticMode && editingPoints.length > 0) {\n                    const guidLines = findAllGuideLines(plan.walls, editingPoints, { x, y });\n                    drawGuideLines(drawing, editingPoints[0], guidLines);\n                }\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => drawWall(drawing, w));\n            });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((x) => x.editId === id)\n                    .forEach((p) => {\n                        if (magneticMode) {\n                            const closePoint = plan.walls\n                                .flatMap((w) => [w.p1, w.p2])\n                                .filter((o) => o !== p)\n                                .find((o) => distanceBetween(o, p) <= wallCircleRadius);\n                            if (closePoint) {\n                                p.x = closePoint.x;\n                                p.y = closePoint.y;\n                            }\n                        }\n                    });\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => {\n                        w.p1.editId = undefined;\n                        w.p2.editId = undefined;\n                        drawWall(drawing, w);\n                    });\n                removeGuideLines(drawing, { editId: id, x: 0, y: 0 });\n            });\n            if (e.touches?.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, scale, stylusMode, magneticMode, selectedTool]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCursor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCursor);\nexport default __webpack_public_path__ + \"static/media/cursor.d5e3bd0c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport { DrawPoint } from '../Draw';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport { drawHistory } from '../History/HistoryPanel';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nconst tools: IToolType[] = ['pencil', 'eraser'];\n\nexport const PenTool: React.FC = () => {\n    const { drawing, interactiveRef, globalState, updateGlobalState } = useGlobalContext();\n    const { scale, stylusMode, magneticMode, selectedTool } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || !tools.includes(selectedTool)) {\n            return;\n        }\n\n        let points: DrawPoint[] = [];\n        let id: string | undefined;\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) return;\n            updateGlobalState({ pointerDown: true });\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points.push({ x, y, pressure: touch?.force ?? 0.5 });\n            if (selectedTool === 'pencil') {\n                id = drawing.drawPath({\n                    points,\n                    stroke: '#000',\n                    strokeWidth: scale * 1.5,\n                    fill: 'none',\n                    groupId: 'pen',\n                });\n                drawHistory.push({\n                    tool: 'pencil',\n                    data: id,\n                });\n            } else {\n                id = drawing.drawPath({\n                    points,\n                    stroke: '#fff',\n                    groupId: 'pen',\n                });\n                drawHistory.push({\n                    tool: 'eraser',\n                    data: id,\n                });\n            }\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'mouse' && !e.buttons) return;\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            points!.push({ x, y, pressure: touch?.force ?? 0.5 });\n            drawing.drawPath({ id, points, strokeWidth: scale * 1.5 });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            points = [];\n            if (!e.touches || e.touches.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, scale, stylusMode, magneticMode, selectedTool]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEraser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEraser);\nexport default __webpack_public_path__ + \"static/media/eraser.e5d177cd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.a3ff265f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3,16H12V21H3V16M2,10H8V15H2V10M9,10H15V15H9V10M16,10H22V15H16V10M13,16H21V21H13V16M3,4H11V9H3V4M12,4H21V9H12V4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWall);\nexport default __webpack_public_path__ + \"static/media/wall.87ac9ec5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSave(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/save.cc979af1.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport { ReactComponent as CursorIcon } from '../../assets/icons/cursor.svg';\nimport { ReactComponent as EraserIcon } from '../../assets/icons/eraser.svg';\nimport { ReactComponent as PencilIcon } from '../../assets/icons/pencil.svg';\nimport { ReactComponent as WallIcon } from '../../assets/icons/wall.svg';\nimport { ReactComponent as SaveIcon } from '../../assets/icons/save.svg';\n// import { ReactComponent as MoveIcon } from '../../assets/icons/move.svg';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport './Toolbox.css';\nimport { saveSvg } from '../../utils/svg/save';\n\ntype IToolboxProps = {};\n\nexport const Toolbox: React.FC<IToolboxProps> = () => {\n    const {\n        drawingRef,\n        globalState: { selectedTool },\n        updateGlobalState,\n    } = useGlobalContext();\n\n    const setSelectedTool = (tool: IToolType) => {\n        updateGlobalState({ selectedTool: tool });\n    };\n\n    type IToolVoxItemProps = {\n        type: IToolType;\n        name: string;\n        icon?: JSX.Element;\n    };\n    const ToolBoxItem: React.FC<IToolVoxItemProps> = ({ type, name, icon }) => {\n        return (\n            <div\n                onClick={() => setSelectedTool(type)}\n                className={clsx('toolboxItem', selectedTool === type && 'toolboxSelectedItem')}\n            >\n                {icon ?? name}\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"toolboxContainer\">\n            <ToolBoxItem type=\"wall\" name=\"Стена\" icon={<WallIcon />} />\n            <ToolBoxItem type=\"cursor\" name=\"Курсор\" icon={<CursorIcon />} />\n            <ToolBoxItem type=\"pencil\" name=\"Карандаш\" icon={<PencilIcon />} />\n            <ToolBoxItem type=\"eraser\" name=\"Ластик\" icon={<EraserIcon />} />\n            <div className=\"toolboxItem\" onClick={() => saveSvg(drawingRef.current!)}>\n                <SaveIcon />\n            </div>\n        </div>\n    );\n};\n","export const saveSvg = function (svg: SVGSVGElement) {\n    var clone = svg.cloneNode(true);\n    var svgDocType = document.implementation.createDocumentType(\n        'svg',\n        '-//W3C//DTD SVG 1.1//EN',\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd',\n    );\n    var svgDoc = document.implementation.createDocument(\n        'http://www.w3.org/2000/svg',\n        'svg',\n        svgDocType,\n    );\n    svgDoc.replaceChild(clone, svgDoc.documentElement);\n    var svgData = new XMLSerializer().serializeToString(svgDoc);\n\n    var a = document.createElement('a');\n    a.href =\n        'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(svgData.replace(/></g, '>\\n\\r<'));\n    a.download = `Plan ${new Date().toLocaleDateString()}.svg`;\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n};\n","import React, { useEffect } from 'react';\nimport {\n    drawGuideLines,\n    drawWall,\n    drawWallStart,\n    removeGuideLines,\n    wallCircleRadius,\n    wallGroupId,\n} from '../Draw';\nimport { distanceBetween, findAlignedGuideLines, getWallOrientation } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { drawHistory } from '../History/HistoryPanel';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nlet IID = 0;\n\nexport const WallTool: React.FC = () => {\n    const { interactiveRef, drawing, globalState, updateGlobalState } = useGlobalContext();\n    const { scale, stylusMode, magneticMode, wallAlignmentMode, selectedTool, plan } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'wall') {\n            return;\n        }\n\n        const cancel = (id: number) => {\n            const wallIndex = plan.walls.findIndex((x) => x.editId === id);\n            if (wallIndex >= 0) {\n                const walls = plan.walls.splice(wallIndex, 1);\n                drawing.removeElement(wallGroupId(walls[0]));\n            }\n        };\n\n        const onStart = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                cancel(e.id);\n                return;\n            }\n            updateGlobalState({ pointerDown: true }); // TODO: это вызывает полный ререндер\n            const wall: Line = {\n                id: `${IID++}`,\n                editId: e.id,\n                p1: { x, y },\n                p2: { x, y },\n            };\n            if (magneticMode) {\n                const closePoint = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .find((p) => distanceBetween(p, wall.p1) <= wallCircleRadius);\n\n                if (closePoint) {\n                    wall.p1.x = closePoint.x;\n                    wall.p1.y = closePoint.y;\n                    wall.p2.x = closePoint.x;\n                    wall.p2.y = closePoint.y;\n                }\n            }\n            plan.walls.push(wall);\n            drawWallStart(drawing, wall);\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                wall.p2.x = x;\n                wall.p2.y = y;\n                if (wallAlignmentMode) {\n                    const orientation = getWallOrientation({ p1: wall.p1, p2: { x, y } });\n                    if (orientation === 'horizontal') {\n                        wall.p2.y = wall.p1.y;\n                    } else {\n                        wall.p2.x = wall.p1.x;\n                    }\n                    const guideLines = findAlignedGuideLines(plan.walls, wall);\n                    drawGuideLines(drawing, wall.p2, guideLines);\n                }\n                drawWall(drawing, wall);\n            }\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            const { id, touches } = e;\n            const wall = plan.walls.find((x) => x.editId === id);\n            if (wall) {\n                if (magneticMode) {\n                    const closePoint = plan.walls\n                        .filter((w) => w !== wall)\n                        .flatMap((item) => [item.p1, item.p2])\n                        .find((p) => distanceBetween(p, wall.p2) <= wallCircleRadius);\n\n                    if (closePoint) {\n                        wall.p2.x = closePoint.x;\n                        wall.p2.y = closePoint.y;\n                    }\n                }\n                removeGuideLines(drawing, wall.p2);\n                drawWall(drawing, wall);\n                wall.editId = undefined;\n                drawHistory.push({\n                    tool: 'wall',\n                    data: [wall],\n                });\n            }\n            if (touches?.length === 0) {\n                updateGlobalState({ pointerDown: false }); // TODO: это вызывает полный ререндер\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, stylusMode, magneticMode, wallAlignmentMode, selectedTool]);\n\n    return null;\n};\n","import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport { GlobalContext, useGlobalState } from './components/GlobalContext';\nimport { HistoryPanel } from './components/History/HistoryPanel';\nimport { Settings } from './components/Settings/Settings';\nimport { CursorTool } from './components/Tools/CursorTool';\nimport { PenTool } from './components/Tools/PenTool';\nimport { Toolbox } from './components/Tools/Toolbox';\nimport { WallTool } from './components/Tools/WallTool';\n\nfunction App() {\n    const globalContext = useGlobalState();\n    const { drawing, drawingRef, interactiveRef, globalState } = globalContext;\n    const { pointerDown } = globalState;\n\n    useEffect(() => {\n        const onTouchMove = (e: TouchEvent) => {\n            if (pointerDown) {\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('touchmove', onTouchMove, { passive: false });\n        return () => {\n            document.removeEventListener('touchmove', onTouchMove);\n        };\n    }, [pointerDown]);\n\n    return (\n        <GlobalContext.Provider value={globalContext}>\n            <>\n                <Helmet>\n                    <title>Measure App</title>\n                </Helmet>\n                <main>\n                    <WallTool />\n                    <CursorTool />\n                    <PenTool />\n                    <div ref={interactiveRef} className=\"paper main\">\n                        <svg ref={drawingRef} style={{ width: '100%', height: '100%' }}>\n                            <g id=\"pen\" />\n                            <g id=\"guide\" />\n                            <g id=\"walls\" />\n                        </svg>\n                    </div>\n                    <Toolbox />\n                    <Settings />\n                    <HistoryPanel drawing={drawing} />\n                </main>\n            </>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}