{"version":3,"sources":["utils/svg/svg.ts","utils/svg/convert.ts","hooks/useDrawing.ts","components/GlobalContext.tsx","assets/icons/undo.svg","components/Draw.ts","components/History/HistoryPanel.tsx","components/Settings/Settings.tsx","components/Geometry.ts","components/Tools/ToolEvent.ts","components/Tools/CursorTool.tsx","assets/icons/cursor.svg","components/Tools/PenTool.tsx","assets/icons/eraser.svg","assets/icons/pencil.svg","assets/icons/wall.svg","assets/icons/save.svg","components/Tools/Toolbox.tsx","utils/svg/save.ts","components/Tools/WallTool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Point","x","y","this","value","Math","sqrt","pow","angle","atan2","Vector","r","p","COMMAND_TYPE","Command","type","length","slice","po","splice","xy","undefined","map","v","num","digits","toFixed","roundUp","join","a","cos","sin","Convert","ratio","pr","st","ne","prev","start","vector","sub","toVector","scale","toPoint","add","p1","p2","p3","p4","_controlPoint","points","i","commands","lineCommands","push","bezierCurve","SVG_NS","IID","findOrCreate","svg","key","groupId","element","getElementById","id","document","createElementNS","setAttribute","dest","appendChild","useGlobalState","useState","selectedTool","pointerDown","stylusMode","magneticMode","wallAlignmentMode","plan","walls","globalState","setGlobalState","updateGlobalState","useCallback","update","interactiveRef","useRef","svgRef","useEffect","current","parent","parentElement","getBoundingClientRect","width","height","toString","drawing","drawLine","options","line","x1","x2","y1","y2","strokeWidth","stroke","setLineOptions","drawCircle","ellipse","rx","ry","fill","setCircleOptions","drawRect","setRectOptions","createGroup","parentId","removeElement","remove","drawPath","path","strokeLinecap","close","setPathOptions","bezierCurveCommands","c","useDrawing","drawingRef","_path","GlobalContext","React","createContext","useGlobalContext","context","useContext","Error","_excluded","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgUndo","_ref","title","titleId","props","xmlns","xmlnsXlink","viewBox","ref","d","ForwardRef","drawSquare","ctx","xc","yc","size","radius","wallCircleRadius","wallGroupId","wall","drawWallStart","gid","drawWall","drawWallEnd","drawHistory","HistoryPanel","className","onClick","item","pop","tool","data","forEach","undo","Settings","checked","onChange","e","distanceBetween","registerTool","onStart","onMove","onEnd","mouseToToolEvent","pageX","pageY","buttons","changedTouches","identifier","onMouseDown","onMouseMove","onMouseUp","touchToToolEvent","touch","touches","Array","from","touchType","onTouchStart","onTouchMove","onTouchEnd","addEventListener","removeEventListener","CursorTool","flatMap","filter","editId","w","closePoint","o","find","tools","PenTool","includes","lineWidth","log","force","SvgCursor","SvgEraser","SvgPencil","SvgWall","SvgSave","Toolbox","ToolBoxItem","name","icon","clsx","clone","cloneNode","svgDocType","implementation","createDocumentType","svgDoc","createDocument","replaceChild","documentElement","svgData","XMLSerializer","serializeToString","createElement","href","encodeURIComponent","replace","download","Date","toLocaleDateString","body","click","saveSvg","WallTool","console","wallIndex","findIndex","cancel","dx","dy","abs","getWallOrientation","App","globalContext","preventDefault","passive","Provider","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.14b3c4d9.chunk.js","sourcesContent":["const roundUp = (num: number, digits = 2): number => +num.toFixed(digits);\n\nexport class Point {\n    public x: number;\n    public y: number;\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public toVector(): Vector {\n        const value = Math.sqrt(Math.pow(this.x, 2.0) + Math.pow(this.y, 2.0));\n        const angle = Math.atan2(this.y, this.x);\n        return new Vector(value, angle);\n    }\n\n    public scale(r: number): Point {\n        return new Point(this.x * r, this.y * r);\n    }\n\n    public add(p: Point): Point {\n        return new Point(this.x + p.x, this.y + p.y);\n    }\n\n    public sub(p: Point): Point {\n        return new Point(this.x - p.x, this.y - p.y);\n    }\n\n    public eql(p: Point): boolean {\n        return this.x === p.x && this.y === p.y;\n    }\n\n    public clone(): Point {\n        return new Point(this.x, this.y);\n    }\n}\n\nexport type CommandType =\n    | 'M'\n    | 'm'\n    | 'L'\n    | 'l'\n    | 'C'\n    | 'c'\n    | 'Z'\n    | 'H'\n    | 'h'\n    | 'V'\n    | 'v'\n    | 'A'\n    | 'a'\n    | 'Q'\n    | 'q';\nexport type CommandObject = {\n    type: CommandType;\n    value: number[];\n};\n\nexport const COMMAND_TYPE: { [name: string]: CommandType } = {\n    MOVE: 'M', // M 0 0\n    MOVE_RELATIVE: 'm', // m 0 0\n    LINE: 'L', // L 1 1\n    LINE_RELATIVE: 'l', // l 1 1\n    CURVE: 'C', // C 1 1 2 2 3 3\n    CURVE_RELATIVE: 'c', // c 1 1 2 2 3 3\n    CLOSE: 'Z', // Z, z\n    HORIZONTAL: 'H', // H 10\n    HORIZONTAL_RELATIVE: 'h', // h 10\n    VERTICAL: 'V', // V 20\n    VERTICAL_RELATIVE: 'v', // v 20\n    ARC_CURVE: 'A', // A 6 4 10 0 1 14 10\n    ARC_CURVE_RELATIVE: 'a', // A 6 4 10 0 1 14 10\n    QUADRATIC_CURVE: 'Q', // Q 10 60 10 30\n    QUADRATIC_CURVE_RELATIVE: 'q', // q 10 60 10 30\n} as const;\n\n// TODO: compatible COMMAND_TYPE\nexport class Command {\n    public type: CommandType;\n    public value: number[];\n    // TODO: Convert data format to number array.\n    constructor(type: CommandType, value: number[] = []) {\n        this.value = value;\n        this.type = type;\n    }\n\n    public set cr(po: Point | undefined) {\n        if (!po) return;\n        if ((this.type !== 'C' && this.type !== 'c') || this.value.length !== 6) {\n            return;\n        }\n        this.value.splice(2, 1, po.x);\n        this.value.splice(3, 1, po.y);\n    }\n    public get cr(): Point | undefined {\n        if ((this.type !== 'C' && this.type !== 'c') || this.value.length !== 6) {\n            return undefined;\n        }\n        const [x, y] = this.value.slice(2, 4);\n        return new Point(x, y);\n    }\n    public set cl(po: Point | undefined) {\n        if (!po) return;\n        if ((this.type !== 'C' && this.type !== 'c') || this.value.length !== 6) {\n            return;\n        }\n        this.value.splice(0, 1, po.x);\n        this.value.splice(1, 1, po.y);\n    }\n    public get cl(): Point | undefined {\n        if ((this.type !== 'C' && this.type !== 'c') || this.value.length !== 6) {\n            return undefined;\n        }\n        const [x, y] = this.value.slice(0, 2);\n        return new Point(x, y);\n    }\n\n    public set point(po: Point | undefined) {\n        if (!po) return;\n        this.value.splice(this.value.length - 2, 1, po.x);\n        this.value.splice(this.value.length - 1, 1, po.y);\n    }\n    public get point(): Point | undefined {\n        const xy = this.value.slice(this.value.length - 2);\n        return xy.length === 2 ? new Point(xy[0], xy[1]) : undefined;\n    }\n\n    public toString(): string {\n        if (this.type === COMMAND_TYPE.CLOSE) return COMMAND_TYPE.CLOSE;\n        return `${this.type} ${this.value.map((v) => roundUp(v)).join(' ')}`;\n    }\n\n    public scale(r: number): Command {\n        const upd = new Command(\n            this.type,\n            this.value.map((p) => p * r),\n        );\n        return upd;\n    }\n\n    public clone(): Command {\n        return new Command(this.type, this.value.slice());\n    }\n}\n\nexport class Vector {\n    public angle: number;\n    public value: number;\n    constructor(v: number, a: number) {\n        this.value = v;\n        this.angle = a;\n    }\n\n    public toPoint(): Point {\n        const x = Math.cos(this.angle) * this.value;\n        const y = Math.sin(this.angle) * this.value;\n        return new Point(x, y);\n    }\n\n    public scale(r: number): Vector {\n        return new Vector(this.value * r, this.angle);\n    }\n}\n","import { Point, Command, COMMAND_TYPE } from './svg';\n\nexport type PointObject = {\n    x: number;\n    y: number;\n    pressure?: number;\n};\n\nexport type ConvertOption = {\n    ratio?: number;\n};\n\nexport class Convert {\n    public ratio: number;\n    constructor({ ratio }: ConvertOption = {}) {\n        this.ratio = ratio ?? 0.2;\n    }\n    private _controlPoint(pr: PointObject, st: PointObject, ne: PointObject): [number, number] {\n        const prev = new Point(pr.x, pr.y);\n        const start = new Point(st.x, st.y);\n        const next = new Point(ne.x, ne.y);\n        const vector = next.sub(prev).toVector().scale(this.ratio).toPoint();\n        const po = start.add(vector);\n        return [po.x, po.y];\n    }\n\n    public bezierCurve(\n        p1: PointObject,\n        p2: PointObject,\n        p3: PointObject,\n        p4: PointObject,\n    ): Command {\n        const value = [\n            ...this._controlPoint(p1, p2, p3),\n            ...this._controlPoint(p4, p3, p2),\n            p3.x,\n            p3.y,\n        ];\n        return new Command(COMMAND_TYPE.CURVE, value);\n    }\n\n    public lineCommands(points: PointObject[]): Command[] {\n        return points.map(\n            (p, i) => new Command(i === 0 ? COMMAND_TYPE.MOVE : COMMAND_TYPE.LINE, [p.x, p.y]),\n        );\n    }\n\n    public bezierCurveCommands(p: PointObject[]): Command[] {\n        const commands: Command[] = [];\n        if (p.length < 3) {\n            return this.lineCommands(p);\n        }\n        for (let i = 0; i < p.length; i += 1) {\n            if (i === 0) {\n                commands.push(new Command(COMMAND_TYPE.MOVE, [p[i].x, p[i].y]));\n                continue;\n            }\n            commands.push(\n                this.bezierCurve(\n                    p[i - 2 < 0 ? 0 : i - 2],\n                    p[i - 1],\n                    p[i],\n                    i < p.length - 1 ? p[i + 1] : p[i],\n                ),\n            );\n        }\n        return commands;\n    }\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Convert, PointObject } from '../utils/svg/convert';\n\ntype IDrawIdOptions = {\n    id?: string;\n    groupId?: string;\n};\n\ntype IDrawStrokeOptions = {\n    stroke?: string;\n    strokeWidth?: number;\n};\ntype IDrawShapeOptions = {\n    fill?: string;\n} & IDrawStrokeOptions;\n\ntype IDrawLineOptions = {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n} & IDrawStrokeOptions &\n    IDrawIdOptions;\n\ntype IDrawRectOptions = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IDrawCircleOptions = {\n    x: number;\n    y: number;\n    rx: number;\n    ry: number;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\ntype IDrawPathOptions = {\n    points: Array<PointObject>;\n    strokeLinecap?: 'butt' | 'round' | 'square';\n    close?: boolean;\n} & IDrawShapeOptions &\n    IDrawIdOptions;\n\nexport type IDrawing = {\n    createGroup: (id?: string, groupId?: string) => string;\n    drawLine: (options: IDrawLineOptions) => string;\n    drawCircle: (options: IDrawCircleOptions) => string;\n    drawRect: (options: IDrawRectOptions) => string;\n    drawPath: (options: IDrawPathOptions) => string;\n    removeElement: (id: string) => void;\n};\n\ntype UseDrawingReturn = {\n    svgRef: React.RefObject<SVGSVGElement>;\n    drawing: IDrawing;\n};\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nlet IID = 0;\n\nfunction setLineOptions(line: Element, options: IDrawLineOptions) {\n    const { x1, x2, y1, y2, strokeWidth, stroke = '#000' } = options;\n    line.setAttribute('x1', x1.toString());\n    line.setAttribute('y1', y1.toString());\n    line.setAttribute('x2', x2.toString());\n    line.setAttribute('y2', y2.toString());\n    line.setAttribute('stroke', stroke);\n    if (strokeWidth) line.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setRectOptions(ellipse: Element, options: IDrawRectOptions) {\n    const { x, y, width, height, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('x', x.toString());\n    ellipse.setAttribute('y', y.toString());\n    ellipse.setAttribute('width', width.toString());\n    ellipse.setAttribute('height', height.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setCircleOptions(ellipse: Element, options: IDrawCircleOptions) {\n    const { x, y, rx, ry, strokeWidth, stroke, fill } = options;\n    ellipse.setAttribute('cx', x.toString());\n    ellipse.setAttribute('cy', y.toString());\n    ellipse.setAttribute('rx', rx.toString());\n    ellipse.setAttribute('ry', ry.toString());\n    if (fill) ellipse.setAttribute('fill', fill);\n    if (stroke) ellipse.setAttribute('stroke', stroke);\n    if (strokeWidth) ellipse.setAttribute('stroke-width', strokeWidth.toString());\n}\n\nfunction setPathOptions(path: Element, options: IDrawPathOptions) {\n    const { strokeWidth, stroke, fill, strokeLinecap, close = false } = options;\n    if (fill) path.setAttribute('fill', fill);\n    if (stroke) path.setAttribute('stroke', stroke);\n    if (strokeWidth) path.setAttribute('stroke-width', strokeWidth.toString());\n    if (strokeLinecap) path.setAttribute('stroke-linecap', strokeLinecap);\n    path.setAttribute('close', `${close}`);\n}\n\nfunction findOrCreate(\n    svg: SVGSVGElement | null,\n    key: string | undefined,\n    type: string,\n    groupId?: string,\n) {\n    let element = key ? svg?.getElementById(key) : undefined;\n    const id = key ?? `${IID++}`;\n    if (!element) {\n        element = document.createElementNS(SVG_NS, type);\n        element.setAttribute('id', id);\n        const dest = groupId ? svg?.getElementById(groupId) : svg;\n        dest?.appendChild(element);\n    }\n    return { element, id };\n}\n\nexport function useDrawing(): UseDrawingReturn {\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        const parent = svg?.parentElement;\n        if (!svg || !parent) return;\n        const { width, height } = parent!.getBoundingClientRect();\n        svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n        svg.setAttribute('version', '1.1');\n        svg.setAttribute('xmlns', SVG_NS);\n        svg.setAttribute('width', width.toString());\n        svg.setAttribute('height', height.toString());\n    }, [svgRef]);\n\n    const drawing: IDrawing = {\n        drawLine: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'line',\n                options.groupId,\n            );\n            setLineOptions(element, options);\n            return id;\n        },\n        drawCircle: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'ellipse',\n                options.groupId,\n            );\n            setCircleOptions(element, options);\n            return id;\n        },\n        drawRect: (options) => {\n            const { element, id } = findOrCreate(\n                svgRef.current,\n                options.id,\n                'rect',\n                options.groupId,\n            );\n            setRectOptions(element, options);\n            return id;\n        },\n        createGroup: (key, parentId) => {\n            const { id } = findOrCreate(svgRef.current, key, 'g', parentId);\n            return id;\n        },\n        removeElement: (id) => {\n            const element = svgRef.current?.getElementById(id);\n            element?.remove();\n        },\n\n        drawPath: (options) => {\n            const { id: key, points, groupId } = options;\n            const { element: path, id } = findOrCreate(svgRef.current, key, 'path', groupId);\n            setPathOptions(path, options);\n            const converter = new Convert();\n            const commands = converter.bezierCurveCommands(points);\n            path.setAttribute('d', commands.map((c) => c.toString()).join(' '));\n            return id;\n        },\n    };\n\n    return {\n        svgRef,\n        drawing,\n    };\n}\n","import React, { Dispatch, SetStateAction, useCallback, useRef, useState } from 'react';\nimport { IDrawing, useDrawing } from '../hooks/useDrawing';\n\nexport type IToolType = 'wall' | 'cursor' | 'move' | 'pencil' | 'eraser';\n\nexport type Point = {\n    x: number;\n    y: number;\n    editId?: number;\n};\n\nexport type Line = {\n    id: number;\n    p1: Point;\n    p2: Point;\n    editId?: number;\n};\n\nexport type IPlan = {\n    walls: Line[];\n};\n\nexport type IGlobalState = {\n    scale: number;\n    selectedTool: IToolType;\n    pointerDown: boolean;\n\n    stylusMode: boolean;\n    magneticMode: boolean;\n    wallAlignmentMode: boolean;\n\n    plan: IPlan;\n};\n\nexport type IGlobalContext = {\n    globalState: IGlobalState;\n    setGlobalState: Dispatch<SetStateAction<IGlobalState>>;\n    updateGlobalState: (state: Partial<IGlobalState>) => void;\n\n    drawing: IDrawing;\n    drawingRef: React.RefObject<SVGSVGElement>;\n    interactiveRef: React.RefObject<HTMLDivElement>;\n};\n\nexport function useGlobalState(): IGlobalContext {\n    const defaultState: Partial<IGlobalState> = {\n        scale: 1,\n        selectedTool: 'wall',\n        pointerDown: false,\n\n        stylusMode: true,\n        magneticMode: true,\n        wallAlignmentMode: true,\n\n        plan: {\n            walls: [],\n        },\n    };\n\n    const [globalState, setGlobalState] = useState<IGlobalState>(defaultState as any);\n\n    const updateGlobalState = useCallback(\n        (update) => setGlobalState((prev) => ({ ...prev, ...update })),\n        [],\n    );\n\n    const interactiveRef = useRef<HTMLDivElement>(null);\n    const { svgRef: drawingRef, drawing } = useDrawing();\n    const context: IGlobalContext = {\n        drawing,\n        drawingRef,\n        interactiveRef,\n\n        globalState,\n        setGlobalState,\n        updateGlobalState,\n    };\n    return context;\n}\n\nexport const GlobalContext = React.createContext<IGlobalContext>(null!);\n\nexport const useGlobalContext = () => {\n    const context = React.useContext<IGlobalContext>(GlobalContext);\n    if (context === null) {\n        throw new Error('useGlobalContext must be used within an GlobalContext.Provider');\n    }\n    return context;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUndo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndo);\nexport default __webpack_public_path__ + \"static/media/undo.f3bbb4ae.svg\";\nexport { ForwardRef as ReactComponent };","import { IDrawing } from '../hooks/useDrawing';\nimport { Line, Point } from './GlobalContext';\n\nexport type DrawEvent = { x: number; y: number; id: number };\n\nexport type DrawPoint = Point & {\n    lineWidth?: number;\n    color?: string;\n};\n\ntype Context = IDrawing;\n\nexport function drawLine(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n) {\n    ctx.drawLine({ id, groupId, x1, y1, x2, y2 });\n}\nexport function drawSquare(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    size: number,\n    fill?: string,\n) {\n    ctx.drawRect({\n        id,\n        groupId,\n        x: xc - size / 2,\n        y: yc - size / 2,\n        width: size,\n        height: size,\n        fill,\n    });\n}\n\nexport function drawCircle(\n    ctx: Context,\n    id: string | undefined,\n    groupId: string | undefined,\n    xc: number,\n    yc: number,\n    radius: number,\n    fill?: string,\n    stroke?: string,\n) {\n    ctx.drawCircle({ id, groupId, x: xc, y: yc, rx: radius, ry: radius, fill, stroke });\n}\n\nexport const wallPointSize = 10;\nexport const wallCircleRadius = 15;\n\nexport const wallGroupId = (wall: Line) => `w${wall.id}`;\n\nexport function drawWallStart(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}s`, gid, wall.p1.x, wall.p1.y, wallPointSize, 'green');\n}\nexport function drawWallEnd(ctx: Context, wall: Line) {\n    const gid = wallGroupId(wall);\n    drawSquare(ctx, `w${wall.id}e`, gid, wall.p2.x, wall.p2.y, wallPointSize, 'red');\n}\n\nexport function drawWall(ctx: Context, wall: Line) {\n    const gid = ctx.createGroup(wallGroupId(wall), 'walls');\n    drawCircle(ctx, `w${wall.id}c1`, gid, wall.p1.x, wall.p1.y, wallCircleRadius, 'none', '#000');\n    drawCircle(ctx, `w${wall.id}c2`, gid, wall.p2.x, wall.p2.y, wallCircleRadius, 'none', '#000');\n    drawLine(ctx, `w${wall.id}l`, gid, wall.p1.x, wall.p1.y, wall.p2.x, wall.p2.y);\n    drawWallStart(ctx, wall);\n    drawWallEnd(ctx, wall);\n}\n","import { ReactComponent as UndoIcon } from '../../assets/icons/undo.svg';\nimport { IDrawing } from '../../hooks/useDrawing';\nimport { drawWall, wallGroupId } from '../Draw';\nimport { Line } from '../GlobalContext';\nimport './HistoryPanel.css';\n\nexport type IHistoryRecord =\n    | {\n          tool: 'wall' | 'cursor';\n          data: Line[];\n      }\n    | {\n          tool: 'pencil' | 'eraser';\n          data: string;\n      };\n\nexport let drawHistory: IHistoryRecord[] = [];\n\nexport const HistoryPanel: React.FC<{ drawing: IDrawing }> = ({ drawing }) => {\n    const undo = () => {\n        const item = drawHistory.pop();\n        if (!item) return;\n        switch (item.tool) {\n            case 'wall':\n                item.data.forEach((wall) => {\n                    drawing.removeElement(wallGroupId(wall));\n                });\n                break;\n            case 'cursor':\n                item.data.forEach((wall) => {\n                    drawWall(drawing, wall);\n                });\n                break;\n            case 'pencil':\n            case 'eraser':\n                drawing.removeElement(item.data);\n                break;\n        }\n    };\n    return (\n        <div className=\"historyPanel\">\n            <div className=\"historyPanelItem\" onClick={() => undo()}>\n                <UndoIcon />\n            </div>\n            {/* <div className=\"historyPanelItem\" onClick={() => redo()}>\n                <RedoIcon />\n            </div> */}\n        </div>\n    );\n};\n","import React from 'react';\nimport { useGlobalContext } from '../GlobalContext';\nimport './Settings.css';\n\nexport const Settings: React.FC = () => {\n    const {\n        globalState: { stylusMode, magneticMode, wallAlignmentMode },\n        updateGlobalState,\n    } = useGlobalContext();\n    return (\n        <div className=\"settingsList\">\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={stylusMode ?? false}\n                        onChange={(e) => updateGlobalState({ stylusMode: e.target.checked })}\n                    />\n                    Режим стилуса\n                </label>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={wallAlignmentMode ?? false}\n                        onChange={(e) => updateGlobalState({ wallAlignmentMode: e.target.checked })}\n                    />\n                    Ровные стены\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={magneticMode ?? false}\n                        onChange={(e) => updateGlobalState({ magneticMode: e.target.checked })}\n                    />\n                    Привязка к стенам\n                </label>\n            </div>\n        </div>\n    );\n};\n","import { Point } from './GlobalContext';\n\nexport type WallOrientation = 'horizontal' | 'vertical';\n\nexport function getWallOrientation({ p1, p2 }: { p1: Point; p2: Point }): WallOrientation {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    if (Math.abs(dx) > Math.abs(dy)) {\n        return 'horizontal';\n    }\n    return 'vertical';\n}\n\nexport function distanceBetween(p1: Point, p2: Point): number {\n    return Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n}\n","type TypedTouch = Touch & { touchType: 'stylus' | 'direct' };\n\nexport type ToolEvent = {\n    id: number;\n    x: number;\n    y: number;\n\n    type: 'mouse' | 'stylus' | 'touch';\n    buttons?: number;\n    touches?: TypedTouch[];\n    changedTouches?: TypedTouch[];\n};\n\nexport type ToolEventHandler = (e: ToolEvent) => void;\n\nexport function registerTool(\n    element: HTMLElement,\n    onStart: ToolEventHandler,\n    onMove: ToolEventHandler,\n    onEnd: ToolEventHandler,\n) {\n    function mouseToToolEvent(e: MouseEvent): ToolEvent {\n        return {\n            id: 1,\n            x: e.pageX,\n            y: e.pageY,\n            type: 'mouse',\n            buttons: e.buttons,\n            changedTouches: [\n                {\n                    identifier: 1,\n                    pageX: e.pageX,\n                    pageY: e.pageY,\n                } as any as TypedTouch,\n            ],\n        };\n    }\n    const onMouseDown = (e: MouseEvent) => onStart(mouseToToolEvent(e));\n    const onMouseMove = (e: MouseEvent) => onMove(mouseToToolEvent(e));\n    const onMouseUp = (e: MouseEvent) => onEnd(mouseToToolEvent(e));\n\n    function touchToToolEvent(e: TouchEvent): ToolEvent {\n        const touch = e.changedTouches[0] as TypedTouch;\n        return {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY,\n            touches: Array.from(e.touches) as TypedTouch[],\n            changedTouches: Array.from(e.changedTouches) as TypedTouch[],\n            type: touch.touchType === 'stylus' ? 'stylus' : 'touch',\n        };\n    }\n    const onTouchStart = (e: TouchEvent) => onStart(touchToToolEvent(e));\n    const onTouchMove = (e: TouchEvent) => onMove(touchToToolEvent(e));\n    const onTouchEnd = (e: TouchEvent) => onEnd(touchToToolEvent(e));\n\n    element.addEventListener('mousedown', onMouseDown);\n    element.addEventListener('mousemove', onMouseMove);\n    element.addEventListener('mouseup', onMouseUp);\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('touchmove', onTouchMove);\n    element.addEventListener('touchend', onTouchEnd);\n\n    return () => {\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('mousemove', onMouseMove);\n        element.removeEventListener('mouseup', onMouseUp);\n\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchmove', onTouchMove);\n        element.removeEventListener('touchend', onTouchEnd);\n    };\n}\n","import React, { useEffect } from 'react';\nimport { drawWall, wallCircleRadius } from '../Draw';\nimport { distanceBetween } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { drawHistory } from '../History/HistoryPanel';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const CursorTool: React.FC = () => {\n    const { interactiveRef, drawing, globalState, updateGlobalState } = useGlobalContext();\n    const { scale, stylusMode, magneticMode, selectedTool, plan } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'cursor') {\n            return;\n        }\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            updateGlobalState({ pointerDown: true });\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((p) => distanceBetween(p, { x, y }) <= wallCircleRadius)\n                    .forEach((p) => {\n                        p.editId = id;\n                    });\n\n                drawHistory.push({\n                    tool: 'cursor',\n                    data: plan.walls\n                        .filter((w) => w.p1.editId || w.p2.editId)\n                        .map((w) => {\n                            const clone: Line = {\n                                id: w.id,\n                                p1: { x: w.p1.x, y: w.p1.y },\n                                p2: { x: w.p2.x, y: w.p2.y },\n                            };\n                            return clone;\n                        }),\n                });\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((p) => p.editId === id)\n                    .forEach((p) => {\n                        p.x = x;\n                        p.y = y;\n                    });\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => drawWall(drawing, w));\n            });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                plan.walls\n                    .flatMap((w) => [w.p1, w.p2])\n                    .filter((x) => x.editId === id)\n                    .forEach((p) => {\n                        if (magneticMode) {\n                            const closePoint = plan.walls\n                                .flatMap((w) => [w.p1, w.p2])\n                                .filter((o) => o !== p && o.x !== p.x && o.y !== p.y)\n                                .find((o) => distanceBetween(o, p) <= wallCircleRadius);\n\n                            if (closePoint) {\n                                p.x = closePoint.x;\n                                p.y = closePoint.y;\n                            }\n                        }\n                    });\n                plan.walls\n                    .filter((w) => w.p1.editId || w.p2.editId)\n                    .forEach((w) => {\n                        w.p1.editId = undefined;\n                        w.p2.editId = undefined;\n                        drawWall(drawing, w);\n                    });\n            });\n            if (e.touches?.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, scale, stylusMode, magneticMode, selectedTool]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCursor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCursor);\nexport default __webpack_public_path__ + \"static/media/cursor.d5e3bd0c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport { DrawPoint } from '../Draw';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport { drawHistory } from '../History/HistoryPanel';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nconst tools: IToolType[] = ['pencil', 'eraser'];\n\nexport const PenTool: React.FC = () => {\n    const { drawing, interactiveRef, globalState, updateGlobalState } = useGlobalContext();\n    const { scale, stylusMode, magneticMode, selectedTool } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || !tools.includes(selectedTool)) {\n            return;\n        }\n\n        let lineWidth = 1;\n        let points: DrawPoint[] = [];\n        let id: string | undefined;\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) return;\n            updateGlobalState({ pointerDown: true });\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            lineWidth = Math.log((touch?.force || 0.1) + 1) * 10;\n            if (selectedTool === 'pencil') {\n                points.push({ x, y, lineWidth });\n                id = drawing.drawPath({\n                    points,\n                    stroke: '#000',\n                    strokeWidth: lineWidth,\n                    fill: 'none',\n                    groupId: 'pen',\n                });\n                drawHistory.push({\n                    tool: 'pencil',\n                    data: id,\n                });\n            } else {\n                id = drawing.drawPath({\n                    points,\n                    stroke: '#fff',\n                    strokeLinecap: 'round',\n                    strokeWidth: lineWidth * 20,\n                    fill: 'none',\n                    groupId: 'pen',\n                });\n                drawHistory.push({\n                    tool: 'eraser',\n                    data: id,\n                });\n            }\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'mouse' && !e.buttons) return;\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            lineWidth = Math.log((touch?.force || 0.1) + 1) * 40 * 0.2 + (lineWidth ?? 1) * 0.8;\n            points!.push({ x, y, lineWidth });\n            drawing.drawPath({ id, points });\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            points = [];\n            lineWidth = 0;\n            if (!e.touches || e.touches.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, scale, stylusMode, magneticMode, selectedTool]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEraser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEraser);\nexport default __webpack_public_path__ + \"static/media/eraser.e5d177cd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.a3ff265f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3,16H12V21H3V16M2,10H8V15H2V10M9,10H15V15H9V10M16,10H22V15H16V10M13,16H21V21H13V16M3,4H11V9H3V4M12,4H21V9H12V4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWall);\nexport default __webpack_public_path__ + \"static/media/wall.87ac9ec5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSave(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/save.cc979af1.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport { ReactComponent as CursorIcon } from '../../assets/icons/cursor.svg';\nimport { ReactComponent as EraserIcon } from '../../assets/icons/eraser.svg';\nimport { ReactComponent as PencilIcon } from '../../assets/icons/pencil.svg';\nimport { ReactComponent as WallIcon } from '../../assets/icons/wall.svg';\nimport { ReactComponent as SaveIcon } from '../../assets/icons/save.svg';\n// import { ReactComponent as MoveIcon } from '../../assets/icons/move.svg';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport './Toolbox.css';\nimport { saveSvg } from '../../utils/svg/save';\n\ntype IToolboxProps = {};\n\nexport const Toolbox: React.FC<IToolboxProps> = () => {\n    const {\n        drawingRef,\n        globalState: { selectedTool },\n        updateGlobalState,\n    } = useGlobalContext();\n\n    const setSelectedTool = (tool: IToolType) => {\n        updateGlobalState({ selectedTool: tool });\n    };\n\n    type IToolVoxItemProps = {\n        type: IToolType;\n        name: string;\n        icon?: JSX.Element;\n    };\n    const ToolBoxItem: React.FC<IToolVoxItemProps> = ({ type, name, icon }) => {\n        return (\n            <div\n                onClick={() => setSelectedTool(type)}\n                className={clsx('toolboxItem', selectedTool === type && 'toolboxSelectedItem')}\n            >\n                {icon ?? name}\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"toolboxContainer\">\n            <ToolBoxItem type=\"wall\" name=\"Стена\" icon={<WallIcon />} />\n            <ToolBoxItem type=\"cursor\" name=\"Курсор\" icon={<CursorIcon />} />\n            <ToolBoxItem type=\"pencil\" name=\"Карандаш\" icon={<PencilIcon />} />\n            <ToolBoxItem type=\"eraser\" name=\"Ластик\" icon={<EraserIcon />} />\n            <div className=\"toolboxItem\" onClick={() => saveSvg(drawingRef.current!)}>\n                <SaveIcon />\n            </div>\n        </div>\n    );\n};\n","export const saveSvg = function (svg: SVGSVGElement) {\n    var clone = svg.cloneNode(true);\n    var svgDocType = document.implementation.createDocumentType(\n        'svg',\n        '-//W3C//DTD SVG 1.1//EN',\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd',\n    );\n    var svgDoc = document.implementation.createDocument(\n        'http://www.w3.org/2000/svg',\n        'svg',\n        svgDocType,\n    );\n    svgDoc.replaceChild(clone, svgDoc.documentElement);\n    var svgData = new XMLSerializer().serializeToString(svgDoc);\n\n    var a = document.createElement('a');\n    a.href =\n        'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(svgData.replace(/></g, '>\\n\\r<'));\n    a.download = `Plan ${new Date().toLocaleDateString()}.svg`;\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n};\n","import React, { useEffect } from 'react';\nimport { drawWall, drawWallStart, wallCircleRadius, wallGroupId } from '../Draw';\nimport { distanceBetween, getWallOrientation } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { drawHistory } from '../History/HistoryPanel';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nlet IID = 0;\n\nexport const WallTool: React.FC = () => {\n    const { interactiveRef, drawing, globalState, updateGlobalState } = useGlobalContext();\n    const { scale, stylusMode, magneticMode, wallAlignmentMode, selectedTool, plan } = globalState;\n\n    useEffect(() => {\n        if (!interactiveRef.current || selectedTool !== 'wall') {\n            return;\n        }\n\n        const cancel = (id: number) => {\n            const wallIndex = plan.walls.findIndex((x) => x.editId === id);\n            if (wallIndex >= 0) {\n                const walls = plan.walls.splice(wallIndex, 1);\n                drawing.removeElement(wallGroupId(walls[0]));\n            }\n        };\n\n        const onStart = (e: ToolEvent) => {\n            console.log('wall onStart', e);\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                cancel(e.id);\n                return;\n            }\n            updateGlobalState({ pointerDown: true }); // TODO: это вызывает полный ререндер\n            const wall: Line = {\n                id: IID++,\n                editId: e.id,\n                p1: { x, y },\n                p2: { x, y },\n            };\n            if (magneticMode) {\n                const closePoint = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .find((p) => distanceBetween(p, wall.p1) <= wallCircleRadius);\n\n                if (closePoint) {\n                    wall.p1.x = closePoint.x;\n                    wall.p1.y = closePoint.y;\n                    wall.p2.x = closePoint.x;\n                    wall.p2.y = closePoint.y;\n                }\n            }\n            plan.walls.push(wall);\n            drawWallStart(drawing, wall);\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                wall.p2.x = x;\n                wall.p2.y = y;\n                if (wallAlignmentMode) {\n                    if (getWallOrientation({ p1: wall.p1, p2: { x, y } }) === 'horizontal') {\n                        wall.p2.y = wall.p1.y;\n                    } else {\n                        wall.p2.x = wall.p1.x;\n                    }\n                }\n                drawWall(drawing, wall);\n            }\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            console.log('wall onEnd', e);\n            const { id, touches } = e;\n            const wall = plan.walls.find((x) => x.editId === id);\n            if (wall) {\n                wall.editId = undefined;\n                if (magneticMode) {\n                    const closePoint = plan.walls\n                        .filter((w) => w !== wall)\n                        .flatMap((item) => [item.p1, item.p2])\n                        .find((p) => distanceBetween(p, wall.p2) <= wallCircleRadius);\n\n                    if (closePoint) {\n                        wall.p2.x = closePoint.x;\n                        wall.p2.y = closePoint.y;\n                    }\n                }\n                drawWall(drawing, wall);\n                drawHistory.push({\n                    tool: 'wall',\n                    data: [wall],\n                });\n            }\n            if (touches?.length === 0) {\n                updateGlobalState({ pointerDown: false }); // TODO: это вызывает полный ререндер\n            }\n        };\n\n        return registerTool(interactiveRef.current, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [interactiveRef.current, stylusMode, magneticMode, wallAlignmentMode, selectedTool]);\n\n    return null;\n};\n","import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport { GlobalContext, useGlobalState } from './components/GlobalContext';\nimport { HistoryPanel } from './components/History/HistoryPanel';\nimport { Settings } from './components/Settings/Settings';\nimport { CursorTool } from './components/Tools/CursorTool';\nimport { PenTool } from './components/Tools/PenTool';\nimport { Toolbox } from './components/Tools/Toolbox';\nimport { WallTool } from './components/Tools/WallTool';\n\nfunction App() {\n    const globalContext = useGlobalState();\n    const { drawing, drawingRef, interactiveRef, globalState } = globalContext;\n    const { pointerDown } = globalState;\n\n    useEffect(() => {\n        const onTouchMove = (e: TouchEvent) => {\n            if (pointerDown) {\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('touchmove', onTouchMove, { passive: false });\n        return () => {\n            document.removeEventListener('touchmove', onTouchMove);\n        };\n    }, [pointerDown]);\n\n    return (\n        <GlobalContext.Provider value={globalContext}>\n            <>\n                <Helmet>\n                    <title>Measure App</title>\n                </Helmet>\n                <main>\n                    <WallTool />\n                    <CursorTool />\n                    <PenTool />\n                    <div ref={interactiveRef} className=\"paper main\">\n                        <svg ref={drawingRef}>\n                            <g id=\"pen\" />\n                            <g id=\"walls\" />\n                        </svg>\n                    </div>\n                    <Toolbox />\n                    <Settings />\n                    <HistoryPanel drawing={drawing} />\n                </main>\n            </>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}