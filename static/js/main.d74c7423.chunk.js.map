{"version":3,"sources":["components/GlobalContext.tsx","components/Settings/Settings.tsx","components/Draw.ts","components/Geometry.ts","components/Tools/ToolEvent.ts","components/Tools/CursorTool.tsx","assets/icons/wall.svg","components/Tools/PenTool.tsx","assets/icons/cursor.svg","assets/icons/pencil.svg","assets/icons/eraser.svg","components/Tools/Toolbox.tsx","components/Tools/WallTool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalContext","React","createContext","useGlobalContext","context","useContext","Error","Settings","globalState","stylusMode","magneticMode","wallAlignmentMode","updateGlobalState","className","type","checked","onChange","e","target","drawSquare","ctx","xc","yc","size","color","fillStyle","fillRect","drawCircle","radius","beginPath","arc","Math","PI","stroke","wallCircleRadius","drawWallStart","wall","p1","x","y","drawWallEnd","p2","drawWall","x1","y1","x2","y2","moveTo","lineTo","drawLine","clearCircle","prev","globalCompositeOperation","fill","distanceBetween","sqrt","registerTool","element","onStart","onMove","onEnd","mouseToToolEvent","id","pageX","pageY","buttons","changedTouches","identifier","onMouseDown","onMouseMove","onMouseUp","touchToToolEvent","touch","touches","Array","from","touchType","onTouchStart","onTouchMove","onTouchEnd","addEventListener","removeEventListener","_path","CursorTool","scale","canvas","selectedTool","plan","useEffect","width","window","innerWidth","height","innerHeight","redrawAllLines","clearRect","walls","forEach","pointerDown","flatMap","item","filter","p","editId","undefined","closePoint","o","find","length","PenTool","canvasRef","useRef","current","lineWidth","points","getContext","log","force","push","strokeStyle","lineCap","lineJoin","l","quadraticCurveTo","point","drawStroke","ref","_excluded","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgWall","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","viewBox","d","ForwardRef","SvgCursor","SvgPencil","SvgEraser","Toolbox","ToolBoxItem","name","icon","onClick","clsx","WallTool","redrawEditingLines","wallIndex","findIndex","splice","cancel","dx","dy","abs","getWallOrientation","w","App","globalContext","useState","setGlobalState","useCallback","update","useGlobalState","preventDefault","document","passive","Provider","value","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d74c7423.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\nexport type IToolType = 'wall' | 'cursor' | 'move' | 'pen' | 'eraser';\n\nexport type Point = {\n    x: number;\n    y: number;\n    editId?: number;\n};\n\nexport type Line = {\n    p1: Point;\n    p2: Point;\n    editId?: number;\n};\n\nexport type IPlan = {\n    walls: Line[];\n};\n\nexport type IGlobalState = {\n    scale: number;\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n    selectedTool: IToolType;\n    pointerDown: boolean;\n\n    stylusMode: boolean;\n    magneticMode: boolean;\n    wallAlignmentMode: boolean;\n\n    plan: IPlan;\n};\n\nexport type IGlobalContext = {\n    globalState: IGlobalState;\n    setGlobalState: Dispatch<SetStateAction<IGlobalState>>;\n    updateGlobalState: (state: Partial<IGlobalState>) => void;\n};\n\nexport function useGlobalState(): IGlobalContext {\n    const defaultState: Partial<IGlobalState> = {\n        scale: 2,\n        selectedTool: 'wall',\n        pointerDown: false,\n\n        stylusMode: true,\n        magneticMode: true,\n        wallAlignmentMode: true,\n\n        plan: {\n            walls: [],\n        },\n    };\n\n    const [globalState, setGlobalState] = useState<IGlobalState>(defaultState as any);\n\n    const updateGlobalState = useCallback(\n        (update) => setGlobalState((prev) => ({ ...prev, ...update })),\n        [],\n    );\n    const context: IGlobalContext = {\n        globalState,\n        setGlobalState,\n        updateGlobalState,\n    };\n    return context;\n}\n\nexport const GlobalContext = React.createContext<IGlobalContext>(null!);\n\nexport const useGlobalContext = () => {\n    const context = React.useContext<IGlobalContext>(GlobalContext);\n    if (context === null) {\n        throw new Error('useGlobalContext must be used within an GlobalContext.Provider');\n    }\n    return context;\n};\n","import React from 'react';\nimport { useGlobalContext } from '../GlobalContext';\nimport './Settings.css';\n\nexport const Settings: React.FC = () => {\n    const {\n        globalState: { stylusMode, magneticMode, wallAlignmentMode },\n        updateGlobalState,\n    } = useGlobalContext();\n    return (\n        <div className=\"settingsList\">\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={stylusMode ?? false}\n                        onChange={(e) => updateGlobalState({ stylusMode: e.target.checked })}\n                    />\n                    Режим стилуса\n                </label>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={wallAlignmentMode ?? false}\n                        onChange={(e) => updateGlobalState({ wallAlignmentMode: e.target.checked })}\n                    />\n                    Ровные стены\n                </label>\n            </div>\n\n            <div>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={magneticMode ?? false}\n                        onChange={(e) => updateGlobalState({ magneticMode: e.target.checked })}\n                    />\n                    Привязка к стенам\n                </label>\n            </div>\n        </div>\n    );\n};\n","import { Line, Point } from './GlobalContext';\n\nexport type DrawEvent = { x: number; y: number; id: number };\n\ntype Context = CanvasRenderingContext2D;\n\nexport function drawLine(ctx: Context, x1: number, y1: number, x2: number, y2: number) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexport function drawSquare(ctx: Context, xc: number, yc: number, size: number, color: string) {\n    ctx.fillStyle = color;\n    ctx.fillRect(xc - size / 2, yc - size / 2, size, size);\n}\n\nexport function drawCircle(ctx: Context, xc: number, yc: number, radius: number) {\n    ctx.beginPath();\n    ctx.arc(xc, yc, radius, 0, 2 * Math.PI);\n    ctx.stroke();\n}\n\nexport const wallPointSize = 10;\nexport const wallCircleRadius = 30;\n\nexport function drawWallStart(ctx: Context, wall: Line) {\n    drawSquare(ctx, wall.p1.x, wall.p1.y, wallPointSize, 'green');\n}\nexport function drawWallEnd(ctx: Context, wall: Line) {\n    drawSquare(ctx, wall.p2.x, wall.p2.y, wallPointSize, 'red');\n}\n\nexport function drawWall(ctx: Context, wall: Line) {\n    drawCircle(ctx, wall.p1.x, wall.p1.y, wallCircleRadius);\n    drawCircle(ctx, wall.p2.x, wall.p2.y, wallCircleRadius);\n    drawLine(ctx, wall.p1.x, wall.p1.y, wall.p2.x, wall.p2.y);\n    drawWallStart(ctx, wall);\n    drawWallEnd(ctx, wall);\n}\n\nexport type DrawPoint = Point & {\n    lineWidth: number;\n    color?: string;\n};\n\nexport function drawStroke(ctx: Context, stroke: DrawPoint[]) {\n    ctx.strokeStyle = 'black';\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    const l = stroke.length - 1;\n    if (stroke.length >= 3) {\n        const xc = (stroke[l].x + stroke[l - 1].x) / 2;\n        const yc = (stroke[l].y + stroke[l - 1].y) / 2;\n        ctx.lineWidth = stroke[l - 1].lineWidth;\n        ctx.quadraticCurveTo(stroke[l - 1].x, stroke[l - 1].y, xc, yc);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(xc, yc);\n    } else {\n        const point = stroke[l];\n        ctx.lineWidth = point.lineWidth;\n        if (point.color) {\n            ctx.strokeStyle = point.color;\n        }\n        ctx.beginPath();\n        ctx.moveTo(point.x, point.y);\n        ctx.stroke();\n    }\n}\n\nexport function clearCircle(ctx: Context, x: number, y: number, radius: number = 10) {\n    const prev = ctx.globalCompositeOperation;\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.moveTo(x, y);\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.globalCompositeOperation = prev;\n}\n","import { Point } from './GlobalContext';\n\nexport type WallOrientation = 'horizontal' | 'vertical';\n\nexport function getWallOrientation({ p1, p2 }: { p1: Point; p2: Point }): WallOrientation {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    if (Math.abs(dx) > Math.abs(dy)) {\n        return 'horizontal';\n    }\n    return 'vertical';\n}\n\nexport function distanceBetween(p1: Point, p2: Point): number {\n    return Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n}\n","type TypedTouch = Touch & { touchType: 'stylus' | 'direct' };\n\nexport type ToolEvent = {\n    id: number;\n    x: number;\n    y: number;\n\n    type: 'mouse' | 'stylus' | 'touch';\n    buttons?: number;\n    touches?: TypedTouch[];\n    changedTouches?: TypedTouch[];\n};\n\nexport type ToolEventHandler = (e: ToolEvent) => void;\n\nexport function registerTool(\n    element: HTMLElement,\n    onStart: ToolEventHandler,\n    onMove: ToolEventHandler,\n    onEnd: ToolEventHandler,\n) {\n    function mouseToToolEvent(e: MouseEvent): ToolEvent {\n        return {\n            id: 1,\n            x: e.pageX,\n            y: e.pageY,\n            type: 'mouse',\n            buttons: e.buttons,\n            changedTouches: [\n                {\n                    identifier: 1,\n                    pageX: e.pageX,\n                    pageY: e.pageY,\n                } as any as TypedTouch,\n            ],\n        };\n    }\n    const onMouseDown = (e: MouseEvent) => onStart(mouseToToolEvent(e));\n    const onMouseMove = (e: MouseEvent) => onMove(mouseToToolEvent(e));\n    const onMouseUp = (e: MouseEvent) => onEnd(mouseToToolEvent(e));\n\n    function touchToToolEvent(e: TouchEvent): ToolEvent {\n        const touch = e.changedTouches[0] as TypedTouch;\n        return {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY,\n            touches: Array.from(e.touches) as TypedTouch[],\n            changedTouches: Array.from(e.changedTouches) as TypedTouch[],\n            type: touch.touchType === 'stylus' ? 'stylus' : 'touch',\n        };\n    }\n    const onTouchStart = (e: TouchEvent) => onStart(touchToToolEvent(e));\n    const onTouchMove = (e: TouchEvent) => onMove(touchToToolEvent(e));\n    const onTouchEnd = (e: TouchEvent) => onEnd(touchToToolEvent(e));\n\n    element.addEventListener('mousedown', onMouseDown);\n    element.addEventListener('mousemove', onMouseMove);\n    element.addEventListener('mouseup', onMouseUp);\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('touchmove', onTouchMove);\n    element.addEventListener('touchend', onTouchEnd);\n\n    return () => {\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('mousemove', onMouseMove);\n        element.removeEventListener('mouseup', onMouseUp);\n\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchmove', onTouchMove);\n        element.removeEventListener('touchend', onTouchEnd);\n    };\n}\n","import React, { useEffect } from 'react';\nimport { drawWall, wallCircleRadius } from '../Draw';\nimport { distanceBetween } from '../Geometry';\nimport { useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const CursorTool: React.FC = () => {\n    const { globalState, updateGlobalState } = useGlobalContext();\n    const { scale, canvas, context, stylusMode, magneticMode, selectedTool, plan } = globalState;\n\n    useEffect(() => {\n        if (!canvas || selectedTool !== 'cursor') {\n            return;\n        }\n\n        const width = window.innerWidth * scale;\n        const height = window.innerHeight * scale;\n\n        const redrawAllLines = () => {\n            context.clearRect(0, 0, width, height);\n            plan.walls.forEach((wall) => {\n                drawWall(context, wall);\n            });\n        };\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            updateGlobalState({ pointerDown: true });\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((p) => distanceBetween(p, { x, y }) <= wallCircleRadius)\n                    .forEach((p) => {\n                        p.editId = id;\n                    });\n            });\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                const x = touch.pageX * scale;\n                const y = touch.pageY * scale;\n                plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((x) => x.editId === id)\n                    .forEach((p) => {\n                        p.x = x;\n                        p.y = y;\n                    });\n            });\n            redrawAllLines();\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            e.changedTouches?.forEach((touch) => {\n                const id = touch.identifier;\n                plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .filter((x) => x.editId === id)\n                    .forEach((p) => {\n                        p.editId = undefined;\n                        if (magneticMode) {\n                            const closePoint = plan.walls\n                                .flatMap((item) => [item.p1, item.p2])\n                                .filter((o) => o !== p && o.x !== p.x && o.y !== p.y)\n                                .find((o) => distanceBetween(o, p) <= wallCircleRadius);\n\n                            if (closePoint) {\n                                p.x = closePoint.x;\n                                p.y = closePoint.y;\n                            }\n                        }\n                    });\n            });\n            redrawAllLines();\n            if (e.touches?.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(canvas, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [canvas, context, scale, stylusMode, magneticMode, selectedTool]);\n\n    return null;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3,16H12V21H3V16M2,10H8V15H2V10M9,10H15V15H9V10M16,10H22V15H16V10M13,16H21V21H13V16M3,4H11V9H3V4M12,4H21V9H12V4Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWall);\nexport default __webpack_public_path__ + \"static/media/wall.87ac9ec5.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useRef } from 'react';\nimport { clearCircle, DrawPoint, drawStroke } from '../Draw';\nimport { useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const PenTool: React.FC = () => {\n    const { globalState, updateGlobalState } = useGlobalContext();\n    const { scale, canvas, context, stylusMode, magneticMode, selectedTool } = globalState;\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    // TODO: on resize\n    const width = window.innerWidth * scale;\n    const height = window.innerHeight * scale;\n\n    useEffect(() => {\n        canvasRef.current!.width = width;\n        canvasRef.current!.height = height;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (!canvas || (selectedTool !== 'pen' && selectedTool !== 'eraser')) {\n            return;\n        }\n\n        let lineWidth = 0;\n        let points: DrawPoint[] = [];\n\n        const ctx = canvasRef.current!.getContext('2d')!;\n\n        const onStart = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) return;\n            updateGlobalState({ pointerDown: true });\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            lineWidth = Math.log((touch?.force || 0.1) + 1) * 40;\n            if (selectedTool === 'pen') {\n                ctx.lineWidth = lineWidth;\n                points.push({ x, y, lineWidth });\n            } else {\n                clearCircle(ctx, x, y, 3 * lineWidth);\n            }\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'mouse' && !e.buttons) return;\n            const touch = e.touches && e.touches[0];\n            const x = (touch?.pageX ?? e.x) * scale;\n            const y = (touch?.pageY ?? e.y) * scale;\n            lineWidth = Math.log((touch?.force || 0.1) + 1) * 40 * 0.2 + (lineWidth ?? 0) * 0.8;\n            if (selectedTool === 'pen') {\n                points!.push({ x, y, lineWidth });\n                drawStroke(ctx, points!);\n            } else {\n                clearCircle(ctx, x, y, 3 * lineWidth);\n            }\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            points = [];\n            lineWidth = 0;\n            if (!e.touches || e.touches.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(canvas, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [canvas, context, scale, stylusMode, magneticMode, selectedTool]);\n\n    return <canvas ref={canvasRef} className=\"fullScreenCanvas\" />;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCursor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCursor);\nexport default __webpack_public_path__ + \"static/media/cursor.d5e3bd0c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.a3ff265f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEraser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEraser);\nexport default __webpack_public_path__ + \"static/media/eraser.e5d177cd.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport React from 'react';\nimport { ReactComponent as WallIcon } from '../../assets/icons/wall.svg';\nimport { ReactComponent as CursorIcon } from '../../assets/icons/cursor.svg';\nimport { ReactComponent as PencilIcon } from '../../assets/icons/pencil.svg';\nimport { ReactComponent as EraserIcon } from '../../assets/icons/eraser.svg';\n// import { ReactComponent as MoveIcon } from '../../assets/icons/move.svg';\nimport { IToolType, useGlobalContext } from '../GlobalContext';\nimport './Toolbox.css';\n\ntype IToolboxProps = {};\n\nexport const Toolbox: React.FC<IToolboxProps> = () => {\n    const {\n        globalState: { selectedTool },\n        updateGlobalState,\n    } = useGlobalContext();\n\n    const setSelectedTool = (tool: IToolType) => {\n        updateGlobalState({ selectedTool: tool });\n    };\n\n    type IToolVoxItemProps = {\n        type: IToolType;\n        name: string;\n        icon?: JSX.Element;\n    };\n    const ToolBoxItem: React.FC<IToolVoxItemProps> = ({ type, name, icon }) => {\n        return (\n            <div\n                onClick={() => setSelectedTool(type)}\n                className={clsx('toolboxItem', selectedTool === type && 'toolboxSelectedItem')}\n            >\n                {icon ?? name}\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"toolboxContainer\">\n            <ToolBoxItem type=\"wall\" name=\"Стена\" icon={<WallIcon />} />\n            <ToolBoxItem type=\"cursor\" name=\"Курсор\" icon={<CursorIcon />} />\n            {/* <ToolBoxItem type=\"move\" name=\"Рука\" icon={<MoveIcon />} /> */}\n            <ToolBoxItem type=\"pen\" name=\"Карандаш\" icon={<PencilIcon />} />\n            <ToolBoxItem type=\"eraser\" name=\"Ластик\" icon={<EraserIcon />} />\n        </div>\n    );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { drawWall, drawWallEnd, drawWallStart, wallCircleRadius } from '../Draw';\nimport { distanceBetween, getWallOrientation } from '../Geometry';\nimport { Line, useGlobalContext } from '../GlobalContext';\nimport { registerTool, ToolEvent } from './ToolEvent';\n\nexport const WallTool: React.FC = () => {\n    const { globalState, updateGlobalState } = useGlobalContext();\n    const {\n        scale,\n        canvas,\n        context,\n        stylusMode,\n        magneticMode,\n        wallAlignmentMode,\n        selectedTool,\n        plan,\n    } = globalState;\n\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    // TODO: on resize\n    const width = window.innerWidth * scale;\n    const height = window.innerHeight * scale;\n\n    useEffect(() => {\n        canvasRef.current!.width = width;\n        canvasRef.current!.height = height;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (!canvas || selectedTool !== 'wall') {\n            return;\n        }\n\n        const ctx = canvasRef.current!.getContext('2d')!;\n        const redrawEditingLines = () => {\n            ctx.clearRect(0, 0, width, height);\n            plan.walls\n                .filter((x) => x.editId)\n                .forEach((wall) => {\n                    drawWall(ctx, wall);\n                });\n        };\n\n        const cancel = (id: number) => {\n            const wallIndex = plan.walls.findIndex((x) => x.editId === id);\n            if (wallIndex >= 0) {\n                plan.walls.splice(wallIndex, 1);\n                redrawEditingLines();\n            }\n        };\n\n        const onStart = (e: ToolEvent) => {\n            const x = e.x * scale;\n            const y = e.y * scale;\n            if (stylusMode && e.type === 'touch') return;\n            if (e.type === 'touch' && e.touches!.length > 1) {\n                cancel(e.id);\n                return;\n            }\n            updateGlobalState({ pointerDown: true });\n            const wall: Line = {\n                editId: e.id,\n                p1: { x, y },\n                p2: { x, y },\n            };\n            if (magneticMode) {\n                const closePoint = plan.walls\n                    .flatMap((item) => [item.p1, item.p2])\n                    .find((p) => distanceBetween(p, wall.p1) <= wallCircleRadius);\n\n                if (closePoint) {\n                    wall.p1.x = closePoint.x;\n                    wall.p1.y = closePoint.y;\n                    wall.p2.x = closePoint.x;\n                    wall.p2.y = closePoint.y;\n                }\n            }\n            plan.walls.push(wall);\n            drawWallStart(ctx, wall);\n        };\n\n        const onMove = (e: ToolEvent) => {\n            if (e.type === 'mouse' && !e.buttons) return;\n            const x = e.x * scale;\n            const y = e.y * scale;\n            const wall = plan.walls.find((x) => x.editId === e.id);\n            if (wall) {\n                wall.p2.x = x;\n                wall.p2.y = y;\n                if (wallAlignmentMode) {\n                    if (getWallOrientation({ p1: wall.p1, p2: { x, y } }) === 'horizontal') {\n                        wall.p2.y = wall.p1.y;\n                    } else {\n                        wall.p2.x = wall.p1.x;\n                    }\n                }\n                redrawEditingLines();\n            }\n        };\n\n        const onEnd = (e: ToolEvent) => {\n            const { id, touches } = e;\n            const wall = plan.walls.find((x) => x.editId === id);\n            if (wall) {\n                wall.editId = undefined;\n                if (magneticMode) {\n                    const closePoint = plan.walls\n                        .filter((w) => w !== wall)\n                        .flatMap((item) => [item.p1, item.p2])\n                        .find((p) => distanceBetween(p, wall.p2) <= wallCircleRadius);\n\n                    if (closePoint) {\n                        wall.p2.x = closePoint.x;\n                        wall.p2.y = closePoint.y;\n                    }\n                }\n                redrawEditingLines();\n                drawWallEnd(context, wall);\n                drawWall(context, wall);\n            }\n            if (touches?.length === 0) {\n                updateGlobalState({ pointerDown: false });\n            }\n        };\n\n        return registerTool(canvas, onStart, onMove, onEnd);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [canvas, context, stylusMode, magneticMode, wallAlignmentMode, selectedTool]);\n\n    return <canvas ref={canvasRef} className=\"fullScreenCanvas\" />;\n};\n","import React, { useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport { GlobalContext, useGlobalState } from './components/GlobalContext';\nimport { Settings } from './components/Settings/Settings';\nimport { CursorTool } from './components/Tools/CursorTool';\nimport { PenTool } from './components/Tools/PenTool';\nimport { Toolbox } from './components/Tools/Toolbox';\nimport { WallTool } from './components/Tools/WallTool';\n\nfunction App() {\n    const globalContext = useGlobalState();\n    const { globalState, updateGlobalState } = globalContext;\n    const { scale, pointerDown } = globalState;\n\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        const onTouchMove = (e: TouchEvent) => {\n            if (pointerDown) {\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('touchmove', onTouchMove, { passive: false });\n        return () => {\n            document.removeEventListener('touchmove', onTouchMove);\n        };\n    }, [pointerDown]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        canvas.width = window.innerWidth * scale;\n        canvas.height = window.innerHeight * scale;\n        const context = canvas.getContext('2d')!;\n        updateGlobalState({ canvas, context });\n    }, [scale, updateGlobalState]);\n\n    return (\n        <GlobalContext.Provider value={globalContext}>\n            <>\n                <Helmet>\n                    <title>Measure App</title>\n                </Helmet>\n                <main>\n                    <PenTool />\n                    <WallTool />\n                    <CursorTool />\n                    <canvas ref={canvasRef} className=\"fullScreenCanvas\" />\n                    <Toolbox />\n                    <Settings />\n                </main>\n            </>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}